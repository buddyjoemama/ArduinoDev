   1               		.file	"BootloaderCDC.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  10               		.text
  11               	.Ltext0:
  12               		.cfi_sections	.debug_frame
  13               		.section	.text.FetchNextCommandByte,"ax",@progbits
  15               	FetchNextCommandByte:
  16               	.LFB85:
  17               		.file 1 "BootloaderCDC.c"
   1:BootloaderCDC.c **** /*
   2:BootloaderCDC.c ****              LUFA Library
   3:BootloaderCDC.c ****      Copyright (C) Dean Camera, 2010.
   4:BootloaderCDC.c **** 
   5:BootloaderCDC.c ****   dean [at] fourwalledcubicle [dot] com
   6:BootloaderCDC.c ****       www.fourwalledcubicle.com
   7:BootloaderCDC.c **** */
   8:BootloaderCDC.c **** 
   9:BootloaderCDC.c **** /*
  10:BootloaderCDC.c ****   Copyright 2010  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:BootloaderCDC.c **** 
  12:BootloaderCDC.c ****   Permission to use, copy, modify, distribute, and sell this
  13:BootloaderCDC.c ****   software and its documentation for any purpose is hereby granted
  14:BootloaderCDC.c ****   without fee, provided that the above copyright notice appear in
  15:BootloaderCDC.c ****   all copies and that both that the copyright notice and this
  16:BootloaderCDC.c ****   permission notice and warranty disclaimer appear in supporting
  17:BootloaderCDC.c ****   documentation, and that the name of the author not be used in
  18:BootloaderCDC.c ****   advertising or publicity pertaining to distribution of the
  19:BootloaderCDC.c ****   software without specific, written prior permission.
  20:BootloaderCDC.c **** 
  21:BootloaderCDC.c ****   The author disclaim all warranties with regard to this
  22:BootloaderCDC.c ****   software, including all implied warranties of merchantability
  23:BootloaderCDC.c ****   and fitness.  In no event shall the author be liable for any
  24:BootloaderCDC.c ****   special, indirect or consequential damages or any damages
  25:BootloaderCDC.c ****   whatsoever resulting from loss of use, data or profits, whether
  26:BootloaderCDC.c ****   in an action of contract, negligence or other tortious action,
  27:BootloaderCDC.c ****   arising out of or in connection with the use or performance of
  28:BootloaderCDC.c ****   this software.
  29:BootloaderCDC.c **** */
  30:BootloaderCDC.c **** 
  31:BootloaderCDC.c **** /** \file
  32:BootloaderCDC.c ****  *
  33:BootloaderCDC.c ****  *  Main source file for the CDC class bootloader. This file contains the complete bootloader logic
  34:BootloaderCDC.c ****  */
  35:BootloaderCDC.c **** 
  36:BootloaderCDC.c **** #define  INCLUDE_FROM_BOOTLOADERCDC_C
  37:BootloaderCDC.c **** #include "BootloaderCDC.h"
  38:BootloaderCDC.c **** 
  39:BootloaderCDC.c **** /** Contains the current baud rate and other settings of the first virtual serial port. This must b
  40:BootloaderCDC.c ****  *  operating systems will not open the port unless the settings can be set successfully.
  41:BootloaderCDC.c ****  */
  42:BootloaderCDC.c **** CDC_Line_Coding_t LineEncoding = { .BaudRateBPS = 0,
  43:BootloaderCDC.c ****                                    .CharFormat  = OneStopBit,
  44:BootloaderCDC.c ****                                    .ParityType  = Parity_None,
  45:BootloaderCDC.c ****                                    .DataBits    = 8            };
  46:BootloaderCDC.c **** 
  47:BootloaderCDC.c **** /** Current address counter. This stores the current address of the FLASH or EEPROM as set by the h
  48:BootloaderCDC.c ****  *  and is used when reading or writing to the AVRs memory (either FLASH or EEPROM depending on the
  49:BootloaderCDC.c ****  *  command.)
  50:BootloaderCDC.c ****  */
  51:BootloaderCDC.c **** uint32_t CurrAddress;
  52:BootloaderCDC.c **** 
  53:BootloaderCDC.c **** /** Flag to indicate if the bootloader should be running, or should exit and allow the application 
  54:BootloaderCDC.c ****  *  via a watchdog reset. When cleared the bootloader will exit, starting the watchdog and entering
  55:BootloaderCDC.c ****  *  loop until the AVR restarts and the application runs.
  56:BootloaderCDC.c ****  */
  57:BootloaderCDC.c **** bool RunBootloader = true;
  58:BootloaderCDC.c **** 
  59:BootloaderCDC.c **** /* Adafruit Mods - make the bootloader 'time out' after 10 seconds */
  60:BootloaderCDC.c **** #define BOOTLOADTIMEOUT 20  // in approx 1/2 seconds units :)
  61:BootloaderCDC.c **** volatile uint8_t boottimeout = 0;  // the counter we'll use
  62:BootloaderCDC.c **** 
  63:BootloaderCDC.c **** // the pointer to user land
  64:BootloaderCDC.c **** void (*app_start)(void) = 0x0000;
  65:BootloaderCDC.c **** 
  66:BootloaderCDC.c **** // we'll pulse the onboard LED to indicate the bootloader
  67:BootloaderCDC.c **** #define BOARD_MICROTOUCH 1
  68:BootloaderCDC.c **** #define BOARD_ADAFRUIT32U4 2
  69:BootloaderCDC.c **** #define BOARD_FLORA 3
  70:BootloaderCDC.c **** 
  71:BootloaderCDC.c **** #if BOARD == BOARD_MICROTOUCH
  72:BootloaderCDC.c ****    #define BOOTLOADERLED_DDR DDRC
  73:BootloaderCDC.c ****    #define BOOTLOADERLED_PORT PORTC
  74:BootloaderCDC.c ****    #define BOOTLOADERLED 7
  75:BootloaderCDC.c **** #endif
  76:BootloaderCDC.c **** #if BOARD == BOARD_ADAFRUIT32U4
  77:BootloaderCDC.c ****    #define BOOTLOADERLED_DDR DDRE
  78:BootloaderCDC.c ****    #define BOOTLOADERLED_PORT PORTE
  79:BootloaderCDC.c ****    #define BOOTLOADERLED 6
  80:BootloaderCDC.c **** #endif
  81:BootloaderCDC.c **** #if BOARD == BOARD_FLORA
  82:BootloaderCDC.c ****    #define BOOTLOADERLED_DDR DDRE
  83:BootloaderCDC.c ****    #define BOOTLOADERLED_PORT PORTE
  84:BootloaderCDC.c ****    #define BOOTLOADERLED 6
  85:BootloaderCDC.c **** #endif
  86:BootloaderCDC.c **** 
  87:BootloaderCDC.c **** #include <util/delay.h>
  88:BootloaderCDC.c **** 
  89:BootloaderCDC.c **** void blink(uint8_t b) {
  90:BootloaderCDC.c ****   BOOTLOADERLED_DDR |= _BV( BOOTLOADERLED);
  91:BootloaderCDC.c ****   while (b--) {
  92:BootloaderCDC.c ****     _delay_ms(100);
  93:BootloaderCDC.c ****     BOOTLOADERLED_PORT |= _BV( BOOTLOADERLED);
  94:BootloaderCDC.c ****     _delay_ms(100);
  95:BootloaderCDC.c ****     BOOTLOADERLED_PORT &= ~_BV( BOOTLOADERLED); 
  96:BootloaderCDC.c ****     _delay_ms(100);
  97:BootloaderCDC.c ****   }
  98:BootloaderCDC.c **** }
  99:BootloaderCDC.c **** bool USBConnected()
 100:BootloaderCDC.c **** {
 101:BootloaderCDC.c ****   uint8_t f = UDFNUML;
 102:BootloaderCDC.c ****  _delay_ms(3);
 103:BootloaderCDC.c ****  return (f != UDFNUML);
 104:BootloaderCDC.c **** }
 105:BootloaderCDC.c **** 
 106:BootloaderCDC.c **** /* End Adafruit Mods */
 107:BootloaderCDC.c **** 
 108:BootloaderCDC.c **** 
 109:BootloaderCDC.c **** /** Main program entry point. This routine configures the hardware required by the bootloader, then
 110:BootloaderCDC.c ****  *  runs the bootloader processing routine until instructed to soft-exit, or hard-reset via the wat
 111:BootloaderCDC.c ****  *  the loaded application code.
 112:BootloaderCDC.c ****  */
 113:BootloaderCDC.c **** int main(void)
 114:BootloaderCDC.c **** {
 115:BootloaderCDC.c ****   /* Adafruit Mods - unless they pressed the button, get out of the bootloader and into userland */
 116:BootloaderCDC.c ****   char ch = MCUSR;
 117:BootloaderCDC.c ****   MCUSR = 0;
 118:BootloaderCDC.c **** 
 119:BootloaderCDC.c **** 
 120:BootloaderCDC.c ****   WDTCSR |= _BV(WDCE) | _BV(WDE); // turn off watchdog timer!
 121:BootloaderCDC.c ****   WDTCSR = 0;
 122:BootloaderCDC.c **** 
 123:BootloaderCDC.c **** #if BOARD == BOARD_MICROTOUCH
 124:BootloaderCDC.c ****   DDRF |= _BV(PF0);
 125:BootloaderCDC.c ****   if (ch == _BV(BORF)) {
 126:BootloaderCDC.c ****     PORTF &= ~_BV(PF0);
 127:BootloaderCDC.c ****   } else {
 128:BootloaderCDC.c ****     PORTF |= _BV(PF0);
 129:BootloaderCDC.c ****   }
 130:BootloaderCDC.c **** 
 131:BootloaderCDC.c ****   //blink(ch);
 132:BootloaderCDC.c ****   //_delay_ms(1000);
 133:BootloaderCDC.c ****   blink(ch);
 134:BootloaderCDC.c ****   
 135:BootloaderCDC.c **** #endif
 136:BootloaderCDC.c **** 
 137:BootloaderCDC.c ****   boottimeout = 0;
 138:BootloaderCDC.c **** 
 139:BootloaderCDC.c ****   if (! (ch &  _BV(EXTRF)) &&  (pgm_read_word_near(0) != 0xFFFF)) {
 140:BootloaderCDC.c ****     // if its a not an external reset...
 141:BootloaderCDC.c ****     app_start();  // skip bootloader
 142:BootloaderCDC.c ****   }
 143:BootloaderCDC.c **** 
 144:BootloaderCDC.c ****   /* End Adafruit Mods */
 145:BootloaderCDC.c **** 
 146:BootloaderCDC.c **** 	/* Setup hardware required for the bootloader */
 147:BootloaderCDC.c **** 	SetupHardware();
 148:BootloaderCDC.c **** 
 149:BootloaderCDC.c **** 	// adafruit board - turn on the LED to indicate the bootloader is active 
 150:BootloaderCDC.c **** 
 151:BootloaderCDC.c **** 	BOOTLOADERLED_DDR |= _BV( BOOTLOADERLED);
 152:BootloaderCDC.c **** 	BOOTLOADERLED_PORT |= _BV( BOOTLOADERLED);
 153:BootloaderCDC.c **** 
 154:BootloaderCDC.c **** 	uint16_t blinkycounter = 0;
 155:BootloaderCDC.c **** 	uint8_t pwmcounter = 0; // for the LED pulsing
 156:BootloaderCDC.c **** 	uint8_t brightness = 0; // for the LED pulsing
 157:BootloaderCDC.c **** 	int8_t pulsedirection = 1;
 158:BootloaderCDC.c **** 	// end adafruit mods
 159:BootloaderCDC.c **** 
 160:BootloaderCDC.c **** 	/* Enable global interrupts so that the USB stack can function */
 161:BootloaderCDC.c **** 	sei();
 162:BootloaderCDC.c **** 
 163:BootloaderCDC.c **** 	while (RunBootloader)
 164:BootloaderCDC.c **** 	{
 165:BootloaderCDC.c **** 		CDC_Task();
 166:BootloaderCDC.c **** 		USB_USBTask();
 167:BootloaderCDC.c **** 		
 168:BootloaderCDC.c **** 		// Adafruit mods = we'll pulse an LED to indicate the bootloader is active
 169:BootloaderCDC.c **** 		pwmcounter++;
 170:BootloaderCDC.c **** 		
 171:BootloaderCDC.c **** 		// after each PWM cycle, increase/decrease the brightness
 172:BootloaderCDC.c **** 		if (pwmcounter == 0) {
 173:BootloaderCDC.c **** 		  brightness += pulsedirection;
 174:BootloaderCDC.c **** 		  BOOTLOADERLED_PORT |= _BV( BOOTLOADERLED);
 175:BootloaderCDC.c **** 		}
 176:BootloaderCDC.c **** 
 177:BootloaderCDC.c **** 		// PWM compare match
 178:BootloaderCDC.c **** 		if (pwmcounter == brightness) {
 179:BootloaderCDC.c **** 		  BOOTLOADERLED_PORT &= ~_BV( BOOTLOADERLED);
 180:BootloaderCDC.c **** 		}
 181:BootloaderCDC.c **** 
 182:BootloaderCDC.c **** 		// make the bootloade LED pulse up and down
 183:BootloaderCDC.c **** 		if (brightness == 255) {
 184:BootloaderCDC.c **** 		  pulsedirection = -1;
 185:BootloaderCDC.c **** 		}
 186:BootloaderCDC.c **** 		if ((brightness == 0) && (pulsedirection != 1)) {
 187:BootloaderCDC.c **** 		  pulsedirection = 1;
 188:BootloaderCDC.c **** 
 189:BootloaderCDC.c **** 		  // each full pulse takes about one second
 190:BootloaderCDC.c **** 		  boottimeout++;
 191:BootloaderCDC.c **** 		} 
 192:BootloaderCDC.c **** 		
 193:BootloaderCDC.c **** 		// we took a long time, lets restart
 194:BootloaderCDC.c **** 		if (boottimeout >= BOOTLOADTIMEOUT) {
 195:BootloaderCDC.c **** 		  // check to see if we have any code loaded. if the first byte is blank, we shouldn't go
 196:BootloaderCDC.c **** 		  if (pgm_read_word_near(0) != 0xFFFF) {
 197:BootloaderCDC.c **** 		    // jump to code
 198:BootloaderCDC.c **** 		    RunBootloader = false;
 199:BootloaderCDC.c **** 		  }
 200:BootloaderCDC.c **** 		}
 201:BootloaderCDC.c **** 	}
 202:BootloaderCDC.c **** 
 203:BootloaderCDC.c **** 	/* Disconnect from the host - USB interface will be reset later along with the AVR */
 204:BootloaderCDC.c **** 	USB_Detach();
 205:BootloaderCDC.c **** 
 206:BootloaderCDC.c **** 	/* Enable the watchdog and force a timeout to reset the AVR */
 207:BootloaderCDC.c **** 	wdt_enable(WDTO_250MS);
 208:BootloaderCDC.c **** 
 209:BootloaderCDC.c **** 	for (;;);
 210:BootloaderCDC.c **** }
 211:BootloaderCDC.c **** 
 212:BootloaderCDC.c **** /** Configures all hardware required for the bootloader. */
 213:BootloaderCDC.c **** void SetupHardware(void)
 214:BootloaderCDC.c **** {
 215:BootloaderCDC.c **** 	/* Disable watchdog if enabled by bootloader/fuses */
 216:BootloaderCDC.c **** 	MCUSR &= ~(1 << WDRF);
 217:BootloaderCDC.c **** 	wdt_disable();
 218:BootloaderCDC.c **** 
 219:BootloaderCDC.c **** 	/* Disable clock division */
 220:BootloaderCDC.c **** 	clock_prescale_set(clock_div_1);
 221:BootloaderCDC.c **** 
 222:BootloaderCDC.c **** 	/* Relocate the interrupt vector table to the bootloader section */
 223:BootloaderCDC.c **** 	MCUCR = (1 << IVCE);
 224:BootloaderCDC.c **** 	MCUCR = (1 << IVSEL);
 225:BootloaderCDC.c **** 
 226:BootloaderCDC.c **** 	/* Initialize USB Subsystem */
 227:BootloaderCDC.c **** 	USB_Init();
 228:BootloaderCDC.c **** }
 229:BootloaderCDC.c **** 
 230:BootloaderCDC.c **** /** Event handler for the USB_ConfigurationChanged event. This configures the device's endpoints re
 231:BootloaderCDC.c ****  *  to relay data to and from the attached USB host.
 232:BootloaderCDC.c ****  */
 233:BootloaderCDC.c **** void EVENT_USB_Device_ConfigurationChanged(void)
 234:BootloaderCDC.c **** {
 235:BootloaderCDC.c **** 	/* Setup CDC Notification, Rx and Tx Endpoints */
 236:BootloaderCDC.c **** 	Endpoint_ConfigureEndpoint(CDC_NOTIFICATION_EPNUM, EP_TYPE_INTERRUPT,
 237:BootloaderCDC.c **** 	                           ENDPOINT_DIR_IN, CDC_NOTIFICATION_EPSIZE,
 238:BootloaderCDC.c **** 	                           ENDPOINT_BANK_SINGLE);
 239:BootloaderCDC.c **** 
 240:BootloaderCDC.c **** 	Endpoint_ConfigureEndpoint(CDC_TX_EPNUM, EP_TYPE_BULK,
 241:BootloaderCDC.c **** 	                           ENDPOINT_DIR_IN, CDC_TXRX_EPSIZE,
 242:BootloaderCDC.c **** 	                           ENDPOINT_BANK_SINGLE);
 243:BootloaderCDC.c **** 
 244:BootloaderCDC.c **** 	Endpoint_ConfigureEndpoint(CDC_RX_EPNUM, EP_TYPE_BULK,
 245:BootloaderCDC.c **** 	                           ENDPOINT_DIR_OUT, CDC_TXRX_EPSIZE,
 246:BootloaderCDC.c **** 	                           ENDPOINT_BANK_SINGLE);
 247:BootloaderCDC.c **** }
 248:BootloaderCDC.c **** 
 249:BootloaderCDC.c **** /** Event handler for the USB_UnhandledControlRequest event. This is used to catch standard and cla
 250:BootloaderCDC.c ****  *  control requests that are not handled internally by the USB library (including the CDC control 
 251:BootloaderCDC.c ****  *  which are all issued via the control endpoint), so that they can be handled appropriately for t
 252:BootloaderCDC.c ****  */
 253:BootloaderCDC.c **** void EVENT_USB_Device_UnhandledControlRequest(void)
 254:BootloaderCDC.c **** {
 255:BootloaderCDC.c **** 	/* Process CDC specific control requests */
 256:BootloaderCDC.c **** 	switch (USB_ControlRequest.bRequest)
 257:BootloaderCDC.c **** 	{
 258:BootloaderCDC.c **** 		case REQ_GetLineEncoding:
 259:BootloaderCDC.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_INTERFACE)
 260:BootloaderCDC.c **** 			{
 261:BootloaderCDC.c **** 				Endpoint_ClearSETUP();
 262:BootloaderCDC.c **** 
 263:BootloaderCDC.c **** 				/* Write the line coding data to the control endpoint */
 264:BootloaderCDC.c **** 				Endpoint_Write_Control_Stream_LE(&LineEncoding, sizeof(CDC_Line_Coding_t));
 265:BootloaderCDC.c **** 				Endpoint_ClearOUT();
 266:BootloaderCDC.c **** 			}
 267:BootloaderCDC.c **** 
 268:BootloaderCDC.c **** 			break;
 269:BootloaderCDC.c **** 		case REQ_SetLineEncoding:
 270:BootloaderCDC.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE)
 271:BootloaderCDC.c **** 			{
 272:BootloaderCDC.c **** 				Endpoint_ClearSETUP();
 273:BootloaderCDC.c **** 
 274:BootloaderCDC.c **** 				/* Read the line coding data in from the host into the global struct */
 275:BootloaderCDC.c **** 				Endpoint_Read_Control_Stream_LE(&LineEncoding, sizeof(CDC_Line_Coding_t));
 276:BootloaderCDC.c **** 				Endpoint_ClearIN();
 277:BootloaderCDC.c **** 			}
 278:BootloaderCDC.c **** 
 279:BootloaderCDC.c **** 			break;
 280:BootloaderCDC.c **** 	}
 281:BootloaderCDC.c **** }
 282:BootloaderCDC.c **** 
 283:BootloaderCDC.c **** /** Reads or writes a block of EEPROM or FLASH memory to or from the appropriate CDC data endpoint,
 284:BootloaderCDC.c ****  *  on the AVR910 protocol command issued.
 285:BootloaderCDC.c ****  *
 286:BootloaderCDC.c ****  *  \param[in] Command  Single character AVR910 protocol command indicating what memory operation t
 287:BootloaderCDC.c ****  */
 288:BootloaderCDC.c **** static void ReadWriteMemoryBlock(const uint8_t Command)
 289:BootloaderCDC.c **** {
 290:BootloaderCDC.c **** 	uint16_t BlockSize;
 291:BootloaderCDC.c **** 	char     MemoryType;
 292:BootloaderCDC.c **** 
 293:BootloaderCDC.c **** 	bool     HighByte = false;
 294:BootloaderCDC.c **** 	uint8_t  LowByte  = 0;
 295:BootloaderCDC.c **** 
 296:BootloaderCDC.c **** 	BlockSize  = (FetchNextCommandByte() << 8);
 297:BootloaderCDC.c **** 	BlockSize |=  FetchNextCommandByte();
 298:BootloaderCDC.c **** 
 299:BootloaderCDC.c **** 	MemoryType =  FetchNextCommandByte();
 300:BootloaderCDC.c **** 
 301:BootloaderCDC.c **** 	if ((MemoryType != 'E') && (MemoryType != 'F'))
 302:BootloaderCDC.c **** 	{
 303:BootloaderCDC.c **** 		/* Send error byte back to the host */
 304:BootloaderCDC.c **** 		WriteNextResponseByte('?');
 305:BootloaderCDC.c **** 
 306:BootloaderCDC.c **** 		return;
 307:BootloaderCDC.c **** 	}
 308:BootloaderCDC.c **** 
 309:BootloaderCDC.c **** 	/* Check if command is to read memory */
 310:BootloaderCDC.c **** 	if (Command == 'g')
 311:BootloaderCDC.c **** 	{
 312:BootloaderCDC.c **** 		/* Re-enable RWW section */
 313:BootloaderCDC.c **** 		boot_rww_enable();
 314:BootloaderCDC.c **** 
 315:BootloaderCDC.c **** 		while (BlockSize--)
 316:BootloaderCDC.c **** 		{
 317:BootloaderCDC.c **** 			if (MemoryType == 'F')
 318:BootloaderCDC.c **** 			{
 319:BootloaderCDC.c **** 				/* Read the next FLASH byte from the current FLASH page */
 320:BootloaderCDC.c **** 				#if (FLASHEND > 0xFFFF)
 321:BootloaderCDC.c **** 				WriteNextResponseByte(pgm_read_byte_far(CurrAddress | HighByte));
 322:BootloaderCDC.c **** 				#else
 323:BootloaderCDC.c **** 				WriteNextResponseByte(pgm_read_byte(CurrAddress | HighByte));
 324:BootloaderCDC.c **** 				#endif
 325:BootloaderCDC.c **** 
 326:BootloaderCDC.c **** 				/* If both bytes in current word have been read, increment the address counter */
 327:BootloaderCDC.c **** 				if (HighByte)
 328:BootloaderCDC.c **** 				  CurrAddress += 2;
 329:BootloaderCDC.c **** 
 330:BootloaderCDC.c **** 				HighByte = !HighByte;
 331:BootloaderCDC.c **** 			}
 332:BootloaderCDC.c **** 			else
 333:BootloaderCDC.c **** 			{
 334:BootloaderCDC.c **** 				/* Read the next EEPROM byte into the endpoint */
 335:BootloaderCDC.c **** 				WriteNextResponseByte(eeprom_read_byte((uint8_t*)(intptr_t)(CurrAddress >> 1)));
 336:BootloaderCDC.c **** 
 337:BootloaderCDC.c **** 				/* Increment the address counter after use */
 338:BootloaderCDC.c **** 				CurrAddress += 2;
 339:BootloaderCDC.c **** 			}
 340:BootloaderCDC.c **** 		}
 341:BootloaderCDC.c **** 	}
 342:BootloaderCDC.c **** 	else
 343:BootloaderCDC.c **** 	{
 344:BootloaderCDC.c **** 		uint32_t PageStartAddress = CurrAddress;
 345:BootloaderCDC.c **** 
 346:BootloaderCDC.c **** 		if (MemoryType == 'F')
 347:BootloaderCDC.c **** 		{
 348:BootloaderCDC.c **** 			boot_page_erase(PageStartAddress);
 349:BootloaderCDC.c **** 			boot_spm_busy_wait();
 350:BootloaderCDC.c **** 		}
 351:BootloaderCDC.c **** 
 352:BootloaderCDC.c **** 		while (BlockSize--)
 353:BootloaderCDC.c **** 		{
 354:BootloaderCDC.c **** 			if (MemoryType == 'F')
 355:BootloaderCDC.c **** 			{
 356:BootloaderCDC.c **** 				/* If both bytes in current word have been written, increment the address counter */
 357:BootloaderCDC.c **** 				if (HighByte)
 358:BootloaderCDC.c **** 				{
 359:BootloaderCDC.c **** 					/* Write the next FLASH word to the current FLASH page */
 360:BootloaderCDC.c **** 					boot_page_fill(CurrAddress, ((FetchNextCommandByte() << 8) | LowByte));
 361:BootloaderCDC.c **** 
 362:BootloaderCDC.c **** 					/* Increment the address counter after use */
 363:BootloaderCDC.c **** 					CurrAddress += 2;
 364:BootloaderCDC.c **** 
 365:BootloaderCDC.c **** 					HighByte = false;
 366:BootloaderCDC.c **** 				}
 367:BootloaderCDC.c **** 				else
 368:BootloaderCDC.c **** 				{
 369:BootloaderCDC.c **** 					LowByte = FetchNextCommandByte();
 370:BootloaderCDC.c **** 
 371:BootloaderCDC.c **** 					HighByte = true;
 372:BootloaderCDC.c **** 				}
 373:BootloaderCDC.c **** 			}
 374:BootloaderCDC.c **** 			else
 375:BootloaderCDC.c **** 			{
 376:BootloaderCDC.c **** 				/* Write the next EEPROM byte from the endpoint */
 377:BootloaderCDC.c **** 				eeprom_write_byte((uint8_t*)((intptr_t)(CurrAddress >> 1)), FetchNextCommandByte());
 378:BootloaderCDC.c **** 
 379:BootloaderCDC.c **** 				/* Increment the address counter after use */
 380:BootloaderCDC.c **** 				CurrAddress += 2;
 381:BootloaderCDC.c **** 			}
 382:BootloaderCDC.c **** 		}
 383:BootloaderCDC.c **** 
 384:BootloaderCDC.c **** 		/* If in FLASH programming mode, commit the page after writing */
 385:BootloaderCDC.c **** 		if (MemoryType == 'F')
 386:BootloaderCDC.c **** 		{
 387:BootloaderCDC.c **** 			/* Commit the flash page to memory */
 388:BootloaderCDC.c **** 			boot_page_write(PageStartAddress);
 389:BootloaderCDC.c **** 
 390:BootloaderCDC.c **** 			/* Wait until write operation has completed */
 391:BootloaderCDC.c **** 			boot_spm_busy_wait();
 392:BootloaderCDC.c **** 		}
 393:BootloaderCDC.c **** 
 394:BootloaderCDC.c **** 		/* Send response byte back to the host */
 395:BootloaderCDC.c **** 		WriteNextResponseByte('\r');
 396:BootloaderCDC.c **** 	}
 397:BootloaderCDC.c **** }
 398:BootloaderCDC.c **** 
 399:BootloaderCDC.c **** /** Retrieves the next byte from the host in the CDC data OUT endpoint, and clears the endpoint ban
 400:BootloaderCDC.c ****  *  to allow reception of the next data packet from the host.
 401:BootloaderCDC.c ****  *
 402:BootloaderCDC.c ****  *  \return Next received byte from the host in the CDC data OUT endpoint
 403:BootloaderCDC.c ****  */
 404:BootloaderCDC.c **** static uint8_t FetchNextCommandByte(void)
 405:BootloaderCDC.c **** {
  18               		.loc 1 405 0
  19               		.cfi_startproc
  20               	/* prologue: function */
  21               	/* frame size = 0 */
  22               	/* stack size = 0 */
  23               	.L__stack_usage = 0
  24               	.LVL0:
  25               	.LBB88:
  26               	.LBB89:
  27               		.file 2 "../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h"
   1:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** /*
   2:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****              LUFA Library
   3:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****      Copyright (C) Dean Camera, 2010.
   4:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
   5:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****   dean [at] fourwalledcubicle [dot] com
   6:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****       www.fourwalledcubicle.com
   7:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** */
   8:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
   9:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** /*
  10:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****   Copyright 2010  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
  12:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****   Permission to use, copy, modify, distribute, and sell this
  13:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****   software and its documentation for any purpose is hereby granted
  14:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****   without fee, provided that the above copyright notice appear in
  15:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****   all copies and that both that the copyright notice and this
  16:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****   permission notice and warranty disclaimer appear in supporting
  17:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****   documentation, and that the name of the author not be used in
  18:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****   advertising or publicity pertaining to distribution of the
  19:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****   software without specific, written prior permission.
  20:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
  21:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****   The author disclaim all warranties with regard to this
  22:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****   software, including all implied warranties of merchantability
  23:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****   and fitness.  In no event shall the author be liable for any
  24:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****   special, indirect or consequential damages or any damages
  25:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****   in an action of contract, negligence or other tortious action,
  27:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****   arising out of or in connection with the use or performance of
  28:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****   this software.
  29:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** */
  30:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
  31:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** /** \file
  32:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****  *  \brief USB device endpoint management definitions.
  33:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****  *
  34:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****  *  This file contains structures, function prototypes and macros related to the management of the 
  35:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****  *  data endpoints when the library is initialized in USB device mode.
  36:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****  *
  37:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  38:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  39:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****  */
  40:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
  41:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** /** \ingroup Group_EndpointManagement
  42:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****  *  @defgroup Group_EndpointRW Endpoint Data Reading and Writing
  43:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****  *
  44:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****  *  Functions, macros, variables, enums and types related to data reading and writing from and to e
  45:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****  */
  46:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
  47:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** /** \ingroup Group_EndpointRW
  48:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****  *  @defgroup Group_EndpointPrimitiveRW Read/Write of Primitive Data Types
  49:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****  *
  50:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of primitive 
  51:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****  *  from and to endpoints.
  52:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****  */
  53:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
  54:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** /** \ingroup Group_EndpointManagement
  55:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****  *  @defgroup Group_EndpointPacketManagement Endpoint Packet Management
  56:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****  *
  57:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****  *  Functions, macros, variables, enums and types related to packet management of endpoints.
  58:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****  */
  59:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
  60:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** /** \ingroup Group_USB
  61:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****  *  @defgroup Group_EndpointManagement Endpoint Management
  62:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****  *
  63:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****  *  Functions, macros and enums related to endpoint management when in USB Device mode. This
  64:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****  *  module contains the endpoint management macros, as well as endpoint interrupt and data
  65:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****  *  send/receive functions for various data types.
  66:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****  *
  67:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****  *  @{
  68:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h ****  */
  69:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
  70:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** #ifndef __ENDPOINT_H__
  71:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** #define __ENDPOINT_H__
  72:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
  73:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 	/* Includes: */
  74:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 		#include <avr/io.h>
  75:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 		#include <stdbool.h>
  76:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
  77:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 		#include "../../../Common/Common.h"
  78:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 		#include "../HighLevel/USBTask.h"
  79:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 		#include "USBInterrupt.h"
  80:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
  81:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 	/* Enable C linkage for C++ Compilers: */
  82:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 		#if defined(__cplusplus)
  83:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			extern "C" {
  84:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 		#endif
  85:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
  86:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 	/* Preprocessor Checks: */
  87:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  88:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  89:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 		#endif
  90:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
  91:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 	/* Private Interface - For use in library only: */
  92:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 	#if !defined(__DOXYGEN__)
  93:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 		/* Macros: */
  94:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			#define _ENDPOINT_GET_MAXSIZE(EPIndex)         _ENDPOINT_GET_MAXSIZE2(ENDPOINT_DETAILS_EP ## EPI
  95:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			#define _ENDPOINT_GET_MAXSIZE2(EPDetails)      _ENDPOINT_GET_MAXSIZE3(EPDetails)
  96:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			#define _ENDPOINT_GET_MAXSIZE3(MaxSize, Banks) (MaxSize)
  97:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
  98:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			#define _ENDPOINT_GET_BANKS(EPIndex)           _ENDPOINT_GET_BANKS2(ENDPOINT_DETAILS_EP ## EPInd
  99:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			#define _ENDPOINT_GET_BANKS2(EPDetails)        _ENDPOINT_GET_BANKS3(EPDetails)
 100:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			#define _ENDPOINT_GET_BANKS3(MaxSize, Banks)   (Banks)
 101:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 102:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 103:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_MAXEP             7
 104:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 105:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP0               64,  2
 106:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP1               256, 2
 107:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP2               64,  2
 108:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP3               64,  2
 109:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP4               64,  2
 110:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP5               64,  2
 111:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP6               64,  2
 112:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			#else
 113:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_MAXEP             5
 114:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 115:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP0               64,  2
 116:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP1               64,  1
 117:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP2               64,  1
 118:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP3               64,  2
 119:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP4               64,  2
 120:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			#endif
 121:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 122:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 		/* Inline Functions: */
 123:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes) ATTR_WARN_UNUSED_RESULT A
 124:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			                                                                       ATTR_ALWAYS_INLINE;
 125:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes)
 126:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			{
 127:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				uint8_t  MaskVal    = 0;
 128:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				uint16_t CheckBytes = 8;
 129:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 130:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				while (CheckBytes < Bytes)
 131:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				{
 132:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 					MaskVal++;
 133:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 					CheckBytes <<= 1;
 134:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				}
 135:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 136:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				return (MaskVal << EPSIZE0);
 137:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			}
 138:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 139:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 		/* Function Prototypes: */
 140:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			void Endpoint_ClearEndpoints(void);
 141:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			bool Endpoint_ConfigureEndpoint_Prv(const uint8_t Number,
 142:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			                                    const uint8_t UECFG0XData,
 143:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			                                    const uint8_t UECFG1XData);
 144:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 145:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 	#endif
 146:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 147:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 	/* Public Interface - May be used in end-application: */
 148:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 		/* Macros: */
 149:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Endpoint data direction mask for \ref Endpoint_ConfigureEndpoint(). This indicates that the 
 150:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  should be initialized in the OUT direction - i.e. data flows from host to device.
 151:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 152:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_DIR_OUT                        (0 << EPDIR)
 153:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 154:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Endpoint data direction mask for \ref Endpoint_ConfigureEndpoint(). This indicates that the 
 155:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  should be initialized in the IN direction - i.e. data flows from device to host.
 156:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 157:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_DIR_IN                         (1 << EPDIR)
 158:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 159:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Mask for the bank mode selection for the \ref Endpoint_ConfigureEndpoint() macro. This indic
 160:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  that the endpoint should have one single bank, which requires less USB FIFO memory but resul
 161:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  in slower transfers as only one USB device (the AVR or the host) can access the endpoint's
 162:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  bank at the one time.
 163:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 164:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_BANK_SINGLE                    (0 << EPBK0)
 165:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 166:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Mask for the bank mode selection for the \ref Endpoint_ConfigureEndpoint() macro. This indic
 167:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  that the endpoint should have two banks, which requires more USB FIFO memory but results
 168:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  in faster transfers as one USB device (the AVR or the host) can access one bank while the ot
 169:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  accesses the second bank.
 170:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 171:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_BANK_DOUBLE                    (1 << EPBK0)
 172:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 173:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Endpoint address for the default control endpoint, which always resides in address 0. This i
 174:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  defined for convenience to give more readable code when used with the endpoint macros.
 175:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 176:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_CONTROLEP                      0
 177:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 178:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 179:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				/** Default size of the default control endpoint's bank, until altered by the control endpoint 
 180:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				 *  value in the device descriptor. Not available if the FIXED_CONTROL_ENDPOINT_SIZE token is d
 181:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				 */
 182:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_CONTROLEP_DEFAULT_SIZE     8
 183:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			#endif
 184:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 185:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Endpoint number mask, for masking against endpoint addresses to retrieve the endpoint's
 186:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  numerical address in the device.
 187:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 188:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_EPNUM_MASK                     0x07
 189:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 190:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Endpoint direction mask, for masking against endpoint addresses to retrieve the endpoint's
 191:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  direction for comparing with the ENDPOINT_DESCRIPTOR_DIR_* masks.
 192:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 193:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_EPDIR_MASK                     0x80
 194:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 195:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Endpoint bank size mask, for masking against endpoint addresses to retrieve the endpoint's
 196:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  bank size in the device.
 197:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 198:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_EPSIZE_MASK                    0x7F
 199:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 200:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Maximum size in bytes of a given endpoint.
 201:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 202:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] EPIndex  Endpoint number, a value between 0 and (ENDPOINT_TOTAL_ENDPOINTS - 1)
 203:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 204:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_MAX_SIZE(EPIndex)              _ENDPOINT_GET_MAXSIZE(EPIndex)
 205:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 206:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Indicates the total number of banks supported by the given endpoint.
 207:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 208:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] EPIndex  Endpoint number, a value between 0 and (ENDPOINT_TOTAL_ENDPOINTS - 1)
 209:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 210:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_BANKS_SUPPORTED(EPIndex)       _ENDPOINT_GET_BANKS(EPIndex)
 211:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 212:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			#if !defined(CONTROL_ONLY_DEVICE) || defined(__DOXYGEN__)
 213:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				/** Total number of endpoints (including the default control endpoint at address 0) which may
 214:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				 *  be used in the device. Different USB AVR models support different amounts of endpoints,
 215:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				 *  this value reflects the maximum number of endpoints for the currently selected AVR model.
 216:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				 */
 217:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            ENDPOINT_DETAILS_MAXEP
 218:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			#else
 219:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            1
 220:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			#endif
 221:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 222:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 		/* Enums: */
 223:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Enum for the possible error return codes of the \ref Endpoint_WaitUntilReady() function.
 224:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 225:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointRW
 226:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 227:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			enum Endpoint_WaitUntilReady_ErrorCodes_t
 228:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			{
 229:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_READYWAIT_NoError                 = 0, /**< Endpoint is ready for next packet, no erro
 230:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_READYWAIT_EndpointStalled         = 1, /**< The endpoint was stalled during the stream
 231:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				                                                 *   transfer by the host or device.
 232:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				                                                 */
 233:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_READYWAIT_DeviceDisconnected      = 2,	/**< Device was disconnected from the host whil
 234:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				                                                 *   waiting for the endpoint to become ready.
 235:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				                                                 */
 236:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_READYWAIT_BusSuspended            = 3, /**< The USB bus has been suspended by the host
 237:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				                                                 *   no USB endpoint traffic can occur until th
 238:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				                                                 *   has resumed.
 239:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				                                                 */
 240:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_READYWAIT_Timeout                 = 4, /**< The host failed to accept or send the next
 241:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				                                                 *   within the software timeout period set by 
 242:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				                                                 *   \ref USB_STREAM_TIMEOUT_MS macro.
 243:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				                                                 */
 244:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			};
 245:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 246:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 		/* Inline Functions: */
 247:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Configures the specified endpoint number with the given endpoint type, direction, bank size
 248:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  and banking mode. Once configured, the endpoint may be read from or written to, depending
 249:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  on its direction.
 250:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 251:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Number     Endpoint number to configure. This must be more than 0 and less than
 252:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *                        \ref ENDPOINT_TOTAL_ENDPOINTS.
 253:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 254:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Type       Type of endpoint to configure, a EP_TYPE_* mask. Not all endpoint type
 255:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *                        are available on Low Speed USB devices - refer to the USB 2.0 specific
 256:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 257:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Direction  Endpoint data direction, either \ref ENDPOINT_DIR_OUT or \ref ENDPOINT
 258:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *                        All endpoints (except Control type) are unidirectional - data may only
 259:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *                        from or written to the endpoint bank based on its direction, not both.
 260:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 261:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Size       Size of the endpoint's bank, where packets are stored before they are 
 262:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *                        to the USB host, or after they have been received from the USB host (d
 263:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *                        the endpoint's data direction). The bank size must indicate the maximu
 264:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *                        that the endpoint can handle.
 265:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 266:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Banks      Number of banks to use for the endpoint being configured, an ENDPOINT_
 267:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *                        More banks uses more USB DPRAM, but offers better performance. Isochro
 268:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *                        endpoints <b>must</b> have at least two banks.
 269:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 270:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \note Endpoints <b>must</b> be configured in ascending order, or bank corruption will occur.
 271:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
 272:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 273:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \note Certain models of USB AVR's endpoints may have different maximum packet sizes based on
 274:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *        index - refer to the chosen USB AVR's datasheet to determine the maximum bank size for
 275:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
 276:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 277:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \note The default control endpoint should not be manually configured by the user application
 278:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *        it is automatically configured by the library internally.
 279:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
 280:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 281:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine will automatically select the specified endpoint upon success. Upon failu
 282:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *        which failed to reconfigure correctly will be selected.
 283:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 284:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if the configuration succeeded, false otherwise.
 285:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 286:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Number,
 287:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			                                              const uint8_t Type,
 288:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			                                              const uint8_t Direction,
 289:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			                                              const uint16_t Size,
 290:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			                                              const uint8_t Banks) ATTR_ALWAYS_INLINE;
 291:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Number,
 292:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			                                              const uint8_t Type,
 293:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			                                              const uint8_t Direction,
 294:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			                                              const uint16_t Size,
 295:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			                                              const uint8_t Banks)
 296:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			{
 297:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number, (((Type) << EPTYPE0) | (Direction)),
 298:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				                                      ((1 << ALLOC) | Banks | Endpoint_BytesToEPSizeMask(Size))
 299:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			}
 300:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 301:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Indicates the number of bytes currently stored in the current endpoint's selected bank.
 302:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 303:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \note The return width of this function may differ, depending on the maximum endpoint bank s
 304:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *        of the selected AVR model.
 305:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 306:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointRW
 307:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 308:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Total number of bytes in the currently selected Endpoint's FIFO buffer.
 309:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 310:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE
 311:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void)
 312:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			{
 313:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				#if defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 314:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 					return UEBCX;
 315:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				#elif defined(USB_SERIES_4_AVR)
 316:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 					return (((uint16_t)UEBCHX << 8) | UEBCLX);
 317:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				#elif defined(USB_SERIES_2_AVR)
 318:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 					return UEBCLX;
 319:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				#endif
 320:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			}
 321:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 322:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Get the endpoint address of the currently selected endpoint. This is typically used to save
 323:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  the currently selected endpoint number so that it can be restored after another endpoint has
 324:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  been manipulated.
 325:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 326:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Index of the currently selected endpoint.
 327:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 328:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLI
 329:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
 330:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			{
 331:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 332:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 					return (UENUM & ENDPOINT_EPNUM_MASK);
 333:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				#else
 334:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 					return ENDPOINT_CONTROLEP;
 335:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				#endif
 336:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			}
 337:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 338:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Selects the given endpoint number. If the address from the device descriptors is used, the
 339:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  value should be masked with the \ref ENDPOINT_EPNUM_MASK constant to extract only the endpoi
 340:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  number (and discarding the endpoint direction bit).
 341:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 342:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  Any endpoint operations which do not require the endpoint number to be indicated will operat
 343:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  the currently selected endpoint.
 344:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 345:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] EndpointNumber Endpoint number to select.
 346:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 347:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t EndpointNumber) ATTR_ALWAYS_INLINE;
 348:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t EndpointNumber)
 349:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			{
 350:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 351:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 					UENUM = EndpointNumber;
  28               		.loc 2 351 0
  29 0000 84E0      		ldi r24,lo8(4)
  30 0002 8093 E900 		sts 233,r24
  31 0006 00C0      		rjmp .L2
  32               	.L6:
  33               	.LBE89:
  34               	.LBE88:
  35               	.LBB90:
  36               	.LBB91:
 352:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				#endif
 353:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			}
 354:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 355:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Resets the endpoint bank FIFO. This clears all the endpoint banks and resets the USB control
 356:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  In and Out pointers to the bank's contents.
 357:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 358:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] EndpointNumber Endpoint number whose FIFO buffers are to be reset.
 359:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 360:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ResetFIFO(const uint8_t EndpointNumber) ATTR_ALWAYS_INLINE;
 361:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ResetFIFO(const uint8_t EndpointNumber)
 362:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			{
 363:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				UERST = (1 << EndpointNumber);
 364:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				UERST = 0;
 365:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			}
 366:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 367:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Enables the currently selected endpoint so that data can be sent and received through it to
 368:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  and from a host.
 369:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 370:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \note Endpoints must first be configured properly via \ref Endpoint_ConfigureEndpoint().
 371:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 372:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_EnableEndpoint(void) ATTR_ALWAYS_INLINE;
 373:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_EnableEndpoint(void)
 374:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			{
 375:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				UECONX |= (1 << EPEN);
 376:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			}
 377:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 378:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Disables the currently selected endpoint so that data cannot be sent and received through it
 379:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  to and from a host.
 380:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 381:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_DisableEndpoint(void) ATTR_ALWAYS_INLINE;
 382:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_DisableEndpoint(void)
 383:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			{
 384:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				UECONX &= ~(1 << EPEN);
 385:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			}
 386:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 387:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the currently selected endpoint is enabled, but not necessarily configured.
 388:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 389:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 * \return Boolean True if the currently selected endpoint is enabled, false otherwise.
 390:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 391:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsEnabled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 392:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsEnabled(void)
 393:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			{
 394:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				return ((UECONX & (1 << EPEN)) ? true : false);
 395:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			}
 396:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 397:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the currently selected endpoint may be read from (if data is waiting in the en
 398:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  bank and the endpoint is an OUT direction, or if the bank is not yet full if the endpoint is
 399:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  direction). This function will return false if an error has occurred in the endpoint, if the
 400:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  is an OUT direction and no packet (or an empty packet) has been received, or if the endpoint
 401:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  direction and the endpoint bank is full.
 402:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 403:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 404:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 405:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if the currently selected endpoint may be read from or written to, depe
 406:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 407:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 408:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void)
 409:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			{
 410:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 411:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			}
 412:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 413:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the currently selected endpoint is configured.
 414:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 415:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if the currently selected endpoint has been configured, false otherwise
 416:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 417:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsConfigured(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 418:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsConfigured(void)
 419:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			{
 420:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				return ((UESTA0X & (1 << CFGOK)) ? true : false);
 421:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			}
 422:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 423:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Returns a mask indicating which INTERRUPT type endpoints have interrupted - i.e. their
 424:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  interrupt duration has elapsed. Which endpoints have interrupted can be determined by
 425:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  masking the return value against (1 << {Endpoint Number}).
 426:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 427:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Mask whose bits indicate which endpoints have interrupted.
 428:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 429:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_I
 430:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void)
 431:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			{
 432:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				return UEINT;
 433:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			}
 434:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 435:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the specified endpoint number has interrupted (valid only for INTERRUPT type
 436:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  endpoints).
 437:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 438:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] EndpointNumber  Index of the endpoint whose interrupt flag should be tested.
 439:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 440:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if the specified endpoint has interrupted, false otherwise.
 441:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 442:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t EndpointNumber) ATTR_WARN_UNUSE
 443:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t EndpointNumber)
 444:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			{
 445:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINT & (1 << EndpointNumber)) ? true : false);
 446:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			}
 447:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 448:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the selected IN endpoint is ready for a new packet to be sent to the host.
 449:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 450:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 451:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 452:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if the current endpoint is ready for an IN packet, false otherwise.
 453:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 454:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 455:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsINReady(void)
 456:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			{
 457:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 458:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			}
 459:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 460:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the selected OUT endpoint has received new packet from the host.
 461:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 462:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 463:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 464:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if current endpoint is has received an OUT packet, false otherwise.
 465:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 466:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 467:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsOUTReceived(void)
 468:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			{
 469:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 470:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			}
 471:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 472:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the current CONTROL type endpoint has received a SETUP packet.
 473:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 474:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 475:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 476:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if the selected endpoint has received a SETUP packet, false otherwise.
 477:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 478:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 479:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsSETUPReceived(void)
 480:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			{
 481:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 482:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			}
 483:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 484:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Clears a received SETUP packet on the currently selected CONTROL type endpoint, freeing up t
 485:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  endpoint for the next packet.
 486:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 487:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 488:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 489:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This is not applicable for non CONTROL type endpoints.
 490:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 491:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
 492:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearSETUP(void)
 493:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			{
 494:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				UEINTX &= ~(1 << RXSTPI);
 495:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			}
 496:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 497:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Sends an IN packet to the host on the currently selected endpoint, freeing up the endpoint f
 498:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  next packet and switching to the alternative endpoint bank if double banked.
 499:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 500:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 501:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 502:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
 503:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearIN(void)
 504:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			{
 505:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 506:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 507:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				#else
 508:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~(1 << TXINI);
 509:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				#endif
 510:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			}
 511:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 512:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Acknowledges an OUT packet to the host on the currently selected endpoint, freeing up the en
 513:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  for the next packet and switching to the alternative endpoint bank if double banked.
 514:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 515:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 516:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 517:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
 518:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearOUT(void)
 519:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			{
 520:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 521:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
  37               		.loc 2 521 0
  38 0008 8091 E800 		lds r24,232
  39 000c 8B77      		andi r24,lo8(123)
  40 000e 8093 E800 		sts 232,r24
  41 0012 00C0      		rjmp .L3
  42               	.L5:
  43               	.LBE91:
  44               	.LBE90:
 406:BootloaderCDC.c **** 	/* Select the OUT endpoint so that the next data byte can be read */
 407:BootloaderCDC.c **** 	Endpoint_SelectEndpoint(CDC_RX_EPNUM);
 408:BootloaderCDC.c **** 
 409:BootloaderCDC.c **** 	/* If OUT endpoint empty, clear it and wait for the next packet from the host */
 410:BootloaderCDC.c **** 	while (!(Endpoint_IsReadWriteAllowed()))
 411:BootloaderCDC.c **** 	{
 412:BootloaderCDC.c **** 		Endpoint_ClearOUT();
 413:BootloaderCDC.c **** 
 414:BootloaderCDC.c **** 		while (!(Endpoint_IsOUTReceived()))
 415:BootloaderCDC.c **** 		{
 416:BootloaderCDC.c **** 			if (USB_DeviceState == DEVICE_STATE_Unattached)
  45               		.loc 1 416 0
  46 0014 8EB3      		in r24,62-32
  47 0016 8823      		tst r24
  48 0018 01F0      		breq .L7
  49               	.L3:
  50               	.LBB92:
  51               	.LBB93:
 469:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
  52               		.loc 2 469 0 discriminator 1
  53 001a 8091 E800 		lds r24,232
  54               	.LBE93:
  55               	.LBE92:
 414:BootloaderCDC.c **** 		while (!(Endpoint_IsOUTReceived()))
  56               		.loc 1 414 0 discriminator 1
  57 001e 82FF      		sbrs r24,2
  58 0020 00C0      		rjmp .L5
  59               	.L2:
  60               	.LBB94:
  61               	.LBB95:
 410:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
  62               		.loc 2 410 0 discriminator 1
  63 0022 8091 E800 		lds r24,232
  64               	.LBE95:
  65               	.LBE94:
 410:BootloaderCDC.c **** 	while (!(Endpoint_IsReadWriteAllowed()))
  66               		.loc 1 410 0 discriminator 1
  67 0026 85FF      		sbrs r24,5
  68 0028 00C0      		rjmp .L6
  69               	.LBB96:
  70               	.LBB97:
 522:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				#else
 523:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~(1 << RXOUTI);
 524:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				#endif
 525:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			}
 526:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 527:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Stalls the current endpoint, indicating to the host that a logical problem occurred with the
 528:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  indicated endpoint and that the current transfer sequence should be aborted. This provides a
 529:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  way for devices to indicate invalid commands to the host so that the current transfer can be
 530:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  aborted and the host can begin its own recovery sequence.
 531:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 532:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  The currently selected endpoint remains stalled until either the \ref Endpoint_ClearStall() 
 533:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  is called, or the host issues a CLEAR FEATURE request to the device for the currently select
 534:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  endpoint.
 535:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 536:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 537:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 538:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_StallTransaction(void) ATTR_ALWAYS_INLINE;
 539:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_StallTransaction(void)
 540:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			{
 541:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				UECONX |= (1 << STALLRQ);
 542:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			}
 543:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 544:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Clears the STALL condition on the currently selected endpoint.
 545:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 546:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 547:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 548:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearStall(void) ATTR_ALWAYS_INLINE;
 549:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearStall(void)
 550:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			{
 551:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				UECONX |= (1 << STALLRQC);
 552:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			}
 553:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 554:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the currently selected endpoint is stalled, false otherwise.
 555:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 556:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 557:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 558:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if the currently selected endpoint is stalled, false otherwise.
 559:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 560:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsStalled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 561:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsStalled(void)
 562:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			{
 563:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				return ((UECONX & (1 << STALLRQ)) ? true : false);
 564:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			}
 565:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 566:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Resets the data toggle of the currently selected endpoint. */
 567:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ResetDataToggle(void) ATTR_ALWAYS_INLINE;
 568:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ResetDataToggle(void)
 569:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			{
 570:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				UECONX |= (1 << RSTDT);
 571:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			}
 572:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 573:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Determines the currently selected endpoint's direction.
 574:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 575:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \return The currently selected endpoint's direction, as a ENDPOINT_DIR_* mask.
 576:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 577:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_IN
 578:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void)
 579:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			{
 580:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				return (UECFG0X & ENDPOINT_DIR_IN);
 581:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			}
 582:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 583:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Sets the direction of the currently selected endpoint.
 584:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 585:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] DirectionMask  New endpoint direction, as a ENDPOINT_DIR_* mask.
 586:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 587:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask) ATTR_ALWAYS_INLINE
 588:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask)
 589:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			{
 590:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				UECFG0X = ((UECFG0X & ~ENDPOINT_DIR_IN) | DirectionMask);
 591:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			}
 592:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 593:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Reads one byte from the currently selected endpoint's bank, for OUT direction endpoints.
 594:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 595:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 596:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 597:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Next byte in the currently selected endpoint's FIFO buffer.
 598:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 599:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_Read_Byte(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 600:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_Read_Byte(void)
 601:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			{
 602:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				return UEDATX;
  71               		.loc 2 602 0
  72 002a 8091 F100 		lds r24,241
  73               	.LBE97:
  74               	.LBE96:
 417:BootloaderCDC.c **** 			  return 0;
 418:BootloaderCDC.c **** 		}
 419:BootloaderCDC.c **** 	}
 420:BootloaderCDC.c **** 
 421:BootloaderCDC.c **** 	/* Fetch the next byte from the OUT endpoint */
 422:BootloaderCDC.c **** 	return Endpoint_Read_Byte();
  75               		.loc 1 422 0
  76 002e 0895      		ret
  77               	.L7:
 417:BootloaderCDC.c **** 			  return 0;
  78               		.loc 1 417 0
  79 0030 80E0      		ldi r24,lo8(0)
 423:BootloaderCDC.c **** }
  80               		.loc 1 423 0
  81 0032 0895      		ret
  82               		.cfi_endproc
  83               	.LFE85:
  85               		.section	.text.WriteNextResponseByte,"ax",@progbits
  87               	WriteNextResponseByte:
  88               	.LFB86:
 424:BootloaderCDC.c **** 
 425:BootloaderCDC.c **** /** Writes the next response byte to the CDC data IN endpoint, and sends the endpoint back if neede
 426:BootloaderCDC.c ****  *  bank when full ready for the next byte in the packet to the host.
 427:BootloaderCDC.c ****  *
 428:BootloaderCDC.c ****  *  \param[in] Response  Next response byte to send to the host
 429:BootloaderCDC.c ****  */
 430:BootloaderCDC.c **** static void WriteNextResponseByte(const uint8_t Response)
 431:BootloaderCDC.c **** {
  89               		.loc 1 431 0
  90               		.cfi_startproc
  91               	.LVL1:
  92               	/* prologue: function */
  93               	/* frame size = 0 */
  94               	/* stack size = 0 */
  95               	.L__stack_usage = 0
  96               	.LBB98:
  97               	.LBB99:
 351:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 					UENUM = EndpointNumber;
  98               		.loc 2 351 0
  99 0000 93E0      		ldi r25,lo8(3)
 100 0002 9093 E900 		sts 233,r25
 101               	.LBE99:
 102               	.LBE98:
 103               	.LBB100:
 104               	.LBB101:
 410:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 105               		.loc 2 410 0
 106 0006 9091 E800 		lds r25,232
 107               	.LBE101:
 108               	.LBE100:
 432:BootloaderCDC.c **** 	/* Select the IN endpoint so that the next data byte can be written */
 433:BootloaderCDC.c **** 	Endpoint_SelectEndpoint(CDC_TX_EPNUM);
 434:BootloaderCDC.c **** 
 435:BootloaderCDC.c **** 	/* If IN endpoint full, clear it and wait until ready for the next packet to the host */
 436:BootloaderCDC.c **** 	if (!(Endpoint_IsReadWriteAllowed()))
 109               		.loc 1 436 0
 110 000a 95FD      		sbrc r25,5
 111 000c 00C0      		rjmp .L9
 112               	.LBB102:
 113               	.LBB103:
 506:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 114               		.loc 2 506 0
 115 000e 9091 E800 		lds r25,232
 116 0012 9E77      		andi r25,lo8(126)
 117 0014 9093 E800 		sts 232,r25
 118 0018 00C0      		rjmp .L10
 119               	.L12:
 120               	.LBE103:
 121               	.LBE102:
 437:BootloaderCDC.c **** 	{
 438:BootloaderCDC.c **** 		Endpoint_ClearIN();
 439:BootloaderCDC.c **** 
 440:BootloaderCDC.c **** 		while (!(Endpoint_IsINReady()))
 441:BootloaderCDC.c **** 		{
 442:BootloaderCDC.c **** 			if (USB_DeviceState == DEVICE_STATE_Unattached)
 122               		.loc 1 442 0
 123 001a 9EB3      		in r25,62-32
 124 001c 9923      		tst r25
 125 001e 01F0      		breq .L8
 126               	.L10:
 127               	.LBB104:
 128               	.LBB105:
 457:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 129               		.loc 2 457 0 discriminator 1
 130 0020 9091 E800 		lds r25,232
 131               	.LBE105:
 132               	.LBE104:
 440:BootloaderCDC.c **** 		while (!(Endpoint_IsINReady()))
 133               		.loc 1 440 0 discriminator 1
 134 0024 90FF      		sbrs r25,0
 135 0026 00C0      		rjmp .L12
 136               	.L9:
 137               	.LVL2:
 138               	.LBB106:
 139               	.LBB107:
 603:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			}
 604:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 
 605:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			/** Writes one byte from the currently selected endpoint's bank, for IN direction endpoints.
 606:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 607:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 608:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *
 609:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Byte  Next byte to write into the the currently selected endpoint's FIFO buffer.
 610:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			 */
 611:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Write_Byte(const uint8_t Byte) ATTR_ALWAYS_INLINE;
 612:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Write_Byte(const uint8_t Byte)
 613:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 			{
 614:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = Byte;
 140               		.loc 2 614 0
 141 0028 8093 F100 		sts 241,r24
 142               	.LVL3:
 143               	.L8:
 144 002c 0895      		ret
 145               	.LBE107:
 146               	.LBE106:
 147               		.cfi_endproc
 148               	.LFE86:
 150               		.section	.text.blink,"ax",@progbits
 151               	.global	blink
 153               	blink:
 154               	.LFB78:
  89:BootloaderCDC.c **** void blink(uint8_t b) {
 155               		.loc 1 89 0
 156               		.cfi_startproc
 157               	.LVL4:
 158               	/* prologue: function */
 159               	/* frame size = 0 */
 160               	/* stack size = 0 */
 161               	.L__stack_usage = 0
  90:BootloaderCDC.c ****   BOOTLOADERLED_DDR |= _BV( BOOTLOADERLED);
 162               		.loc 1 90 0
 163 0000 6E9A      		sbi 45-32,6
  91:BootloaderCDC.c ****   while (b--) {
 164               		.loc 1 91 0
 165 0002 00C0      		rjmp .L14
 166               	.LVL5:
 167               	.L15:
 168               	.LBB108:
 169               	.LBB109:
 170               		.file 3 "c:\\program files (x86)\\atmel\\avr tools\\avr toolchain\\bin\\../lib/gcc/avr/4.6.2/../..
   1:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****    All rights reserved.
   5:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 
   6:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****    Redistribution and use in source and binary forms, with or without
   7:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****    modification, are permitted provided that the following conditions are met:
   8:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 
   9:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****    * Redistributions of source code must retain the above copyright
  10:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****      notice, this list of conditions and the following disclaimer.
  11:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 
  12:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****      notice, this list of conditions and the following disclaimer in
  14:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****      the documentation and/or other materials provided with the
  15:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****      distribution.
  16:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 
  17:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****    * Neither the name of the copyright holders nor the names of
  18:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****      contributors may be used to endorse or promote products derived
  19:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****      from this software without specific prior written permission.
  20:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 
  21:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 
  33:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** /* $Id: delay.h.in 2251 2011-09-14 08:20:33Z joerg_wunsch $ */
  34:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 
  35:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** #ifndef _UTIL_DELAY_H_
  36:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** #define _UTIL_DELAY_H_ 1
  37:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 
  38:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** #define __HAS_DELAY_CYCLES 1
  40:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** #endif
  41:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 
  42:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** #include <inttypes.h>
  43:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** #include <util/delay_basic.h>
  44:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** #include <math.h>
  45:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 
  46:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** /** \file */
  47:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****     \code
  49:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****     //#define F_CPU 14.7456E6
  51:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****     #include <util/delay.h>
  52:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****     \endcode
  53:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 
  54:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****     \note As an alternative method, it is possible to pass the
  55:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****     used.
  58:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 
  59:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****     The functions in this header file are wrappers around the basic
  60:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****     convenience functions where actual time values can be specified
  62:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****     that compile-time constant expressions will be eliminated by
  64:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****     compiler optimization so floating-point expressions can be used
  65:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****     frequency passed by the macro F_CPU.
  67:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 
  68:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****     \note In order for these functions to work as intended, compiler
  69:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****     <em>must</em> be an expression that is a known constant at
  71:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****     delay will be much longer (and basically unpredictable), and
  73:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****     applications that otherwise do not use floating-point calculations
  74:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****     will experience severe code bloat by the floating-point library
  75:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****     routines linked into the application.
  76:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 
  77:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****     The functions available allow the specification of microsecond, and
  78:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****     millisecond delays directly, using the application-supplied macro
  79:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 
  81:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** */
  82:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 
  83:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** #if !defined(__DOXYGEN__)
  84:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** #endif
  87:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 
  88:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** #ifndef F_CPU
  89:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** /* prevent compiler error by supplying a default */
  90:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** # define F_CPU 1000000UL
  92:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** #endif
  93:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 
  94:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** #ifndef __OPTIMIZE__
  95:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** #endif
  97:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 
  98:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****   __STDC_HOSTED__
 101:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** #  include <math.h>
 102:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** #endif
 103:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 
 104:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** /**
 105:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****    \ingroup util_delay
 106:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 
 107:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 
 109:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****    The macro F_CPU is supposed to be defined to a
 110:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 
 112:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 
 114:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****    When the user request delay which exceed the maximum possible one,
 115:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****    user will not be informed about decreased resolution.
 119:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 
 120:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****    values greater than the maximal possible delay, overflows results in
 123:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****    no delay i.e., 0ms.
 124:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 
 125:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****    the user gets atleast __us microseconds of delay.
 128:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 
 129:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****    to round down and round to closest integer.
 131:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 
 132:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****    Also, the backward compatible
 136:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****    required for rounding are not available to the compiler then.
 139:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 
 140:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****  */
 141:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** void
 142:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** _delay_ms(double __ms)
 143:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** {
 144:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 	uint16_t __ticks;
 145:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 	double __tmp ; 
 146:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 147:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 148:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h ****   __STDC_HOSTED__
 149:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 	uint32_t __ticks_dc;
 150:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 151:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 152:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 
 153:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 154:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 155:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 
 156:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 157:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 158:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 
 159:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 	#else
 160:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 		//round up by default
 161:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 162:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 	#endif
 163:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 
 164:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/util\delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 171               		.loc 3 164 0
 172 0004 2FEF      		 ldi r18,lo8(319999)
 173 0006 31EE      	    ldi r19,hi8(319999)
 174 0008 44E0      	    ldi r20,hlo8(319999)
 175 000a 2150      	    1:subi r18,1
 176 000c 3040      	    sbci r19,0
 177 000e 4040      	    sbci r20,0
 178 0010 01F4      	    brne 1b
 179 0012 00C0      		rjmp .
 180 0014 0000      		nop
 181               	.LBE109:
 182               	.LBE108:
  93:BootloaderCDC.c ****     BOOTLOADERLED_PORT |= _BV( BOOTLOADERLED);
 183               		.loc 1 93 0
 184 0016 769A      		sbi 46-32,6
 185               	.LVL6:
 186               	.LBB110:
 187               	.LBB111:
 188               		.loc 3 164 0
 189 0018 2FEF      		 ldi r18,lo8(319999)
 190 001a 31EE      	    ldi r19,hi8(319999)
 191 001c 44E0      	    ldi r20,hlo8(319999)
 192 001e 2150      	    1:subi r18,1
 193 0020 3040      	    sbci r19,0
 194 0022 4040      	    sbci r20,0
 195 0024 01F4      	    brne 1b
 196 0026 00C0      		rjmp .
 197 0028 0000      		nop
 198               	.LBE111:
 199               	.LBE110:
  95:BootloaderCDC.c ****     BOOTLOADERLED_PORT &= ~_BV( BOOTLOADERLED); 
 200               		.loc 1 95 0
 201 002a 7698      		cbi 46-32,6
 202               	.LVL7:
 203               	.LBB112:
 204               	.LBB113:
 205               		.loc 3 164 0
 206 002c 2FEF      		 ldi r18,lo8(319999)
 207 002e 31EE      	    ldi r19,hi8(319999)
 208 0030 44E0      	    ldi r20,hlo8(319999)
 209 0032 2150      	    1:subi r18,1
 210 0034 3040      	    sbci r19,0
 211 0036 4040      	    sbci r20,0
 212 0038 01F4      	    brne 1b
 213 003a 00C0      		rjmp .
 214 003c 0000      		nop
 215 003e 8150      		subi r24,lo8(-(-1))
 216               	.LVL8:
 217               	.L14:
 218               	.LBE113:
 219               	.LBE112:
  91:BootloaderCDC.c ****   while (b--) {
 220               		.loc 1 91 0 discriminator 1
 221 0040 8823      		tst r24
 222 0042 01F4      		brne .L15
 223               	/* epilogue start */
  98:BootloaderCDC.c **** }
 224               		.loc 1 98 0
 225 0044 0895      		ret
 226               		.cfi_endproc
 227               	.LFE78:
 229               		.section	.text.USBConnected,"ax",@progbits
 230               	.global	USBConnected
 232               	USBConnected:
 233               	.LFB79:
 100:BootloaderCDC.c **** {
 234               		.loc 1 100 0
 235               		.cfi_startproc
 236               	/* prologue: function */
 237               	/* frame size = 0 */
 238               	/* stack size = 0 */
 239               	.L__stack_usage = 0
 101:BootloaderCDC.c ****   uint8_t f = UDFNUML;
 240               		.loc 1 101 0
 241 0000 2091 E400 		lds r18,228
 242               	.LVL9:
 243               	.LBB114:
 244               	.LBB115:
 245               		.loc 3 164 0
 246 0004 8FED      		 ldi r24,lo8(11999)
 247 0006 9EE2      	    ldi r25,hi8(11999)
 248 0008 0197      	    1:sbiw r24,1
 249 000a 01F4      	    brne 1b
 250 000c 00C0      		rjmp .
 251 000e 0000      		nop
 252               	.LBE115:
 253               	.LBE114:
 103:BootloaderCDC.c ****  return (f != UDFNUML);
 254               		.loc 1 103 0
 255 0010 9091 E400 		lds r25,228
 256 0014 81E0      		ldi r24,lo8(1)
 257 0016 2917      		cp r18,r25
 258 0018 01F4      		brne .L17
 259 001a 80E0      		ldi r24,lo8(0)
 260               	.L17:
 104:BootloaderCDC.c **** }
 261               		.loc 1 104 0
 262 001c 0895      		ret
 263               		.cfi_endproc
 264               	.LFE79:
 266               		.section	.text.SetupHardware,"ax",@progbits
 267               	.global	SetupHardware
 269               	SetupHardware:
 270               	.LFB81:
 214:BootloaderCDC.c **** {
 271               		.loc 1 214 0
 272               		.cfi_startproc
 273               	/* prologue: function */
 274               	/* frame size = 0 */
 275               	/* stack size = 0 */
 276               	.L__stack_usage = 0
 216:BootloaderCDC.c **** 	MCUSR &= ~(1 << WDRF);
 277               		.loc 1 216 0
 278 0000 84B7      		in r24,84-32
 279 0002 877F      		andi r24,lo8(-9)
 280 0004 84BF      		out 84-32,r24
 217:BootloaderCDC.c **** 	wdt_disable();
 281               		.loc 1 217 0
 282 0006 88E1      		ldi r24,lo8(24)
 283               	/* #APP */
 284               	 ;  217 "BootloaderCDC.c" 1
 285 0008 0FB6      		in __tmp_reg__, __SREG__
 286 000a F894      		cli
 287 000c 8093 6000 		sts 96, r24
 288 0010 1092 6000 		sts 96, __zero_reg__
 289 0014 0FBE      		out __SREG__,__tmp_reg__
 290               		
 291               	 ;  0 "" 2
 292               	.LVL10:
 293               	/* #NOAPP */
 294               	.LBB116:
 295               	.LBB117:
 296               		.file 4 "c:\\program files (x86)\\atmel\\avr tools\\avr toolchain\\bin\\../lib/gcc/avr/4.6.2/../..
   1:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /* Copyright (c) 2006, 2007, 2008  Eric B. Weddington
   2:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    All rights reserved.
   3:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
   4:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    Redistribution and use in source and binary forms, with or without
   5:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    modification, are permitted provided that the following conditions are met:
   6:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
   7:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    * Redistributions of source code must retain the above copyright
   8:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      notice, this list of conditions and the following disclaimer.
   9:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    * Redistributions in binary form must reproduce the above copyright
  10:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      notice, this list of conditions and the following disclaimer in
  11:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      the documentation and/or other materials provided with the
  12:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      distribution.
  13:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    * Neither the name of the copyright holders nor the names of
  14:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      contributors may be used to endorse or promote products derived
  15:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      from this software without specific prior written permission.
  16:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  17:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  18:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  19:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  20:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  21:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  22:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  23:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  24:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  25:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  26:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  27:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   POSSIBILITY OF SUCH DAMAGE. */
  28:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  29:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /* $Id: power.h 2254 2011-09-26 15:06:50Z arcanum $ */
  30:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  31:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #ifndef _AVR_POWER_H_
  32:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define _AVR_POWER_H_   1
  33:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  34:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #include <avr/io.h>
  35:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #include <stdint.h>
  36:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  37:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  38:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /** \file */
  39:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /** \defgroup avr_power <avr/power.h>: Power Reduction Management
  40:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  41:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** \code #include <avr/power.h>\endcode
  42:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  43:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** Many AVRs contain a Power Reduction Register (PRR) or Registers (PRRx) that 
  44:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** allow you to reduce power consumption by disabling or enabling various on-board 
  45:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** peripherals as needed.
  46:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  47:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** There are many macros in this header file that provide an easy interface
  48:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** to enable or disable on-board peripherals to reduce power. See the table below.
  49:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  50:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** \note Not all AVR devices have a Power Reduction Register (for example
  51:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** the ATmega128). On those devices without a Power Reduction Register, these 
  52:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** macros are not available.
  53:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  54:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** \note Not all AVR devices contain the same peripherals (for example, the LCD
  55:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** interface), or they will be named differently (for example, USART and 
  56:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** USART0). Please consult your device's datasheet, or the header file, to 
  57:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** find out which macros are applicable to your device.
  58:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  59:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** */
  60:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  61:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  62:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /** \addtogroup avr_power
  63:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  64:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** \anchor avr_powermacros
  65:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** <small>
  66:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** <center>
  67:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** <table border="3">
  68:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
  69:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td width="10%"><strong>Power Macro</strong></td>
  70:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td width="15%"><strong>Description</strong></td>
  71:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td width="75%"><strong>Applicable for device</strong></td>
  72:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
  73:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  74:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
  75:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_aca_disable()</td>
  76:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable The Analog Comparator On PortA </td>
  77:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
  78:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
  79:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  80:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
  81:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_aca_enable()</td>
  82:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable The Analog Comparator On PortA </td>
  83:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
  84:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
  85:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  86:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
  87:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_acb_disable()</td>
  88:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable The Analog Comparator On PortB </td>
  89:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
  90:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
  91:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  92:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
  93:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_acb_enable()</td>
  94:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable The Analog Comparator On PortB </td>
  95:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
  96:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
  97:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
  98:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
  99:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_adc_disable()</td>
 100:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the Analog to Digital Converter module.</td>
 101:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 102:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 103:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 104:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 105:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_adc_enable()</td>
 106:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the Analog to Digital Converter module.</td>
 107:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 108:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 109:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 110:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 111:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_adca_disable()</td>
 112:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the Analog to Digital Converter module On PortA </td>
 113:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 114:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 115:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 116:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 117:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_adca_enable()</td>
 118:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the Analog to Digital Converter module On PortA </td>
 119:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 120:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 121:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 122:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 123:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_adcb_disable()</td>
 124:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the Analog to Digital Converter module On PortB </td>
 125:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 126:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 127:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 128:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 129:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_adcb_enable()</td>
 130:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the Analog to Digital Converter module On PortB </td>
 131:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 132:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 133:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 134:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 135:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_aes_disable()</td>
 136:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the AES module </td>
 137:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
 138:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 139:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 140:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 141:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_aes_enable()</td>
 142:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the AES module </td>
 143:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
 144:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 145:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 146:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 147:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_all_disable()</td>
 148:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable all modules.</td>
 149:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega384C3, ATxmega256A3BU, ATxmega16A4U, ATxmega32A4U, ATxmega64A3U, ATxmega64A4U, ATxmeg
 150:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 151:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 152:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 153:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_all_enable()</td>
 154:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable all modules.</td>
 155:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega384C3, ATxmega256A3BU, ATxmega16A4U, ATxmega32A4U, ATxmega64A3U, ATxmega64A4U, ATxmeg
 156:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 157:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 158:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 159:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_can_disable()</td>
 160:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the CAN module </td>
 161:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega16M1, ATmega32C1, ATmega32M1, ATmega64C1, ATmega64M1</td>
 162:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 163:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 164:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 165:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_can_enable()</td>
 166:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the CAN module </td>
 167:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega16M1, ATmega32C1, ATmega32M1, ATmega64C1, ATmega64M1</td>
 168:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 169:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 170:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 171:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_cinterface_disable()</td>
 172:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the CINTERFACE module </td>
 173:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5790, ATA5790N, ATA5795</td>
 174:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 175:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 176:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 177:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_cinterface_enable()</td>
 178:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the CINTERFACE module </td>
 179:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5790, ATA5790N, ATA5795</td>
 180:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 181:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 182:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 183:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_clock_output_disable()</td>
 184:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Enable clock output module</td>
 185:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 186:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 187:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 188:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 189:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_clock_output_enable()</td>
 190:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Enable clock output module</td>
 191:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 192:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 193:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 194:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 195:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_cpld_disable()</td>
 196:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td> Disable CPLD module </td>
 197:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega32E5</td>
 198:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 199:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 200:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 201:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_cpld_enable()</td>
 202:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td> Enable CPLD module </td>
 203:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega32E5</td>
 204:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 205:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 206:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 207:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_crc_disable()</td>
 208:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Disable CRC module</td>
 209:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 210:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 211:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 212:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 213:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_crc_enable()</td>
 214:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Enable CRC module</td>
 215:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 216:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 217:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 218:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 219:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_crypto_disable()</td>
 220:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the CRYPTO module </td>
 221:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5790, ATA5790N, ATA5795</td>
 222:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 223:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 224:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 225:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_crypto_enable()</td>
 226:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the CRYPTO module </td>
 227:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5790, ATA5790N, ATA5795</td>
 228:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 229:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 230:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 231:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_ctm_disable()</td>
 232:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td> Disable CTM module </td>
 233:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATMXT112SL, ATMXT224, ATMXT224E, ATMXT336S, ATMXT540S, ATMXT540SREVA</td>
 234:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 235:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 236:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 237:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_ctm_enable()</td>
 238:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td> Enable CTM module </td>
 239:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATMXT112SL, ATMXT224, ATMXT224E, ATMXT336S, ATMXT540S, ATMXT540SREVA</td>
 240:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 241:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 242:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 243:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_daca_disable()</td>
 244:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the DAC module on PortA </td>
 245:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
 246:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 247:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 248:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 249:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_daca_enable()</td>
 250:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the DAC module on PortA </td>
 251:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
 252:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 253:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 254:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 255:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_dacb_disable()</td>
 256:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the DAC module on PortB </td>
 257:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
 258:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 259:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 260:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 261:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_dacb_enable()</td>
 262:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the DAC module on PortB </td>
 263:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
 264:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 265:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 266:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 267:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_data_fifo_disable()</td>
 268:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Disable data FIFO</td>
 269:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 270:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 271:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 272:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 273:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_data_fifo_enable()</td>
 274:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Enable data FIFO</td>
 275:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 276:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 277:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 278:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 279:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_dma_disable()</td>
 280:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the DMA module </td>
 281:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
 282:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 283:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 284:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 285:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_dma_enable()</td>
 286:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the DMA module </td>
 287:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
 288:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 289:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 290:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 291:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_ebi_disable()</td>
 292:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the EBI module </td>
 293:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
 294:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 295:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 296:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 297:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_ebi_enable()</td>
 298:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the EBI module </td>
 299:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
 300:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 301:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 302:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 303:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_evsys_disable()</td>
 304:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the EVSYS module </td>
 305:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 306:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 307:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 308:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 309:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_evsys_enable()</td>
 310:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the EVSYS module </td>
 311:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 312:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 313:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 314:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 315:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_hiresc_disable()</td>
 316:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the HIRES module on PortC </td>
 317:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 318:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 319:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 320:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 321:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_hiresc_enable()</td>
 322:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the HIRES module on PortC </td>
 323:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 324:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 325:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 326:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 327:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_hiresd_disable()</td>
 328:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the HIRES module on PortD </td>
 329:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 330:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 331:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 332:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 333:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_hiresd_enable()</td>
 334:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the HIRES module on PortD </td>
 335:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 336:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 337:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 338:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 339:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_hirese_disable()</td>
 340:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the HIRES module on PortE </td>
 341:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 342:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 343:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 344:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 345:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_hirese_enable()</td>
 346:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the HIRES module on PortE </td>
 347:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 348:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 349:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 350:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 351:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_hiresf_disable()</td>
 352:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the HIRES module on PortF </td>
 353:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 354:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 355:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 356:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 357:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_hiresf_enable()</td>
 358:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the HIRES module on PortF </td>
 359:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 360:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 361:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 362:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 363:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_hsspi_disable()</td>
 364:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the HSPPI module </td>
 365:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90SCR100</td>
 366:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 367:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 368:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 369:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_hsspi_enable()</td>
 370:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the HSPPI module </td>
 371:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90SCR100</td>
 372:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 373:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 374:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 375:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_id_scan_disable()</td>
 376:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Disable ID Scan</td>
 377:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 378:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 379:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 380:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 381:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_id_scan_enable()</td>
 382:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Enable ID Scan</td>
 383:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 384:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 385:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 386:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 387:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_irdriver_disable()</td>
 388:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the IRDRIVER module </td>
 389:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5790, ATA5790N, ATA5795</td>
 390:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 391:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 392:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 393:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_irdriver_enable()</td>
 394:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the IRDRIVER module </td>
 395:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5790, ATA5790N, ATA5795</td>
 396:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 397:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 398:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 399:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_kb_disable()</td>
 400:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the KB module </td>
 401:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90SCR100</td>
 402:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 403:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 404:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 405:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_kb_enable()</td>
 406:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the KB module </td>
 407:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90SCR100</td>
 408:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 409:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 410:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 411:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_lcd_disable()</td>
 412:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the LCD module.</td>
 413:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega64B1, ATxmega64B3, ATxmega128B1, ATxmega128B3, ATmega169, ATmega169A, ATmega169P, ATm
 414:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 415:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 416:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 417:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_lcd_enable()</td>
 418:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the LCD module.</td>
 419:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega64B1, ATxmega64B3, ATxmega128B1, ATxmega128B3, ATmega169, ATmega169A, ATmega169P, ATm
 420:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 421:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 422:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 423:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_lfreceiver_disable()</td>
 424:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the LFRECEIVER module </td>
 425:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5790, ATA5790N</td>
 426:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 427:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 428:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 429:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_lfreceiver_enable()</td>
 430:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the LFRECEIVER module </td>
 431:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5790, ATA5790N</td>
 432:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 433:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 434:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 435:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_lin_disable()</td>
 436:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the LIN module </td>
 437:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega16M1, ATmega32C1, ATmega32M1, ATmega64C1, ATmega64M1, ATtiny167, ATtiny87, ATA5505, AT
 438:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 439:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 440:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 441:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_lin_enable()</td>
 442:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the LIN module </td>
 443:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega16M1, ATmega32C1, ATmega32M1, ATmega64C1, ATmega64M1, ATtiny167, ATtiny87, ATA5505, AT
 444:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 445:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 446:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 447:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_pga_disable()</td>
 448:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td> Disable PGA module </td>
 449:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, ATmega256RFA2, ATmega128RFA2, ATmega64RFA2</td>
 450:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 451:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 452:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 453:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_pga_enable()</td>
 454:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td> Enable PGA module </td>
 455:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, ATmega256RFA2, ATmega128RFA2, ATmega64RFA2</td>
 456:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 457:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 458:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 459:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_preamble_rssi_fifo_disable()</td>
 460:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Disable preamble/RSSI FIFO</td>
 461:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 462:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 463:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 464:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 465:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_preamble_rssi_fifo_enable()</td>
 466:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Enable preamble/RSSI FIFO</td>
 467:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 468:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 469:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 470:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 471:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_psc0_disable()</td>
 472:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the Power Stage Controller 0 module.</td>
 473:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B, AT90PWM216, AT90PWM316</td>
 474:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 475:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 476:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 477:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_psc0_enable()</td>
 478:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the Power Stage Controller 0 module.</td>
 479:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B, AT90PWM216, AT90PWM316</td>
 480:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 481:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 482:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 483:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_psc1_disable()</td>
 484:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the Power Stage Controller 1 module.</td>
 485:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B, AT90PWM216, AT90PWM316</td>
 486:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 487:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 488:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 489:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_psc1_enable()</td>
 490:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the Power Stage Controller 1 module.</td>
 491:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B, AT90PWM216, AT90PWM316</td>
 492:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 493:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 494:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 495:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_psc2_disable()</td>
 496:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the Power Stage Controller 2 module.</td>
 497:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B, AT90PWM216, AT90PWM316, AT90PWM81, AT90P
 498:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 499:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 500:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 501:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_psc2_enable()</td>
 502:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the Power Stage Controller 2 module.</td>
 503:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B, AT90PWM216, AT90PWM316, AT90PWM81, AT90P
 504:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 505:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 506:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 507:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_psc_disable()</td>
 508:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the Power Stage Controller module </td>
 509:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega16M1, ATmega32C1, ATmega32M1, ATmega64C1, ATmega64M1</td>
 510:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 511:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 512:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 513:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_psc_enable()</td>
 514:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the Power Stage Controller module </td>
 515:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega16M1, ATmega32C1, ATmega32M1, ATmega64C1, ATmega64M1</td>
 516:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 517:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 518:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 519:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_pscr_disable()</td>
 520:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the Reduced Power Stage Controller module.</td>
 521:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90PWM81, AT90PWM161</td>
 522:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 523:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 524:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 525:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_pscr_enable()</td>
 526:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the Reduced Power Stage Controller module.</td>
 527:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90PWM81, AT90PWM161</td>
 528:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 529:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 530:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 531:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_ram0_disable()</td>
 532:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td> Disable Ram0 module </td>
 533:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, ATmega256RFA2, ATmega128RFA2, ATmega64RFA2</td>
 534:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 535:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 536:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 537:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_ram0_enable()</td>
 538:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td> Enable Ram0 module </td>
 539:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, ATmega256RFA2, ATmega128RFA2, ATmega64RFA2</td>
 540:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 541:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 542:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 543:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_ram1_disable()</td>
 544:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td> Disable Ram1 module </td>
 545:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, ATmega256RFA2, ATmega128RFA2, ATmega64RFA2</td>
 546:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 547:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 548:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 549:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_ram1_enable()</td>
 550:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td> Enable Ram1 module </td>
 551:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, ATmega256RFA2, ATmega128RFA2, ATmega64RFA2</td>
 552:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 553:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 554:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 555:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_ram2_disable()</td>
 556:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td> Disable Ram2 module </td>
 557:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, ATmega256RFA2, ATmega128RFA2, ATmega64RFA2</td>
 558:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 559:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 560:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 561:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_ram2_enable()</td>
 562:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td> Enable Ram2 module </td>
 563:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, ATmega256RFA2, ATmega128RFA2, ATmega64RFA2</td>
 564:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 565:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 566:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 567:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_ram3_disable()</td>
 568:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td> Disable Ram3 module </td>
 569:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, ATmega256RFA2, ATmega128RFA2, ATmega64RFA2</td>
 570:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 571:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 572:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 573:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_ram3_enable()</td>
 574:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td> Enable Ram3 module </td>
 575:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, ATmega256RFA2, ATmega128RFA2, ATmega64RFA2</td>
 576:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 577:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 578:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 579:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_receive_dsp_control_disable()</td>
 580:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Disable Receive DSP control module</td>
 581:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 582:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 583:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 584:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 585:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_receive_dsp_control_enable()</td>
 586:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Enable Receive DSP control module</td>
 587:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 588:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 589:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 590:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 591:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_rssi_buffer_disable()</td>
 592:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Disable RSSI buffer</td>
 593:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 594:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 595:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 596:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 597:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_rssi_buffer_enable()</td>
 598:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Enable RSSI buffer</td>
 599:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 600:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 601:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 602:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 603:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_rtc_disable()</td>
 604:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the RTC module </td>
 605:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 606:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 607:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 608:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 609:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_rtc_enable()</td>
 610:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the RTC module </td>
 611:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 612:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 613:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 614:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 615:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_sci_disable()</td>
 616:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the SCI module </td>
 617:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90SCR100</td>
 618:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 619:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 620:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 621:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_sci_enable()</td>
 622:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the SCI module </td>
 623:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90SCR100</td>
 624:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 625:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 626:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 627:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_sequencer_state_machine_disable()</td>
 628:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Disable power sequencer state machine</td>
 629:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 630:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 631:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 632:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 633:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_sequencer_state_machine_enable()</td>
 634:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Enable power sequencer state machine</td>
 635:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 636:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 637:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 638:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 639:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_spi_disable()</td>
 640:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the Serial Peripheral Interface module.</td>
 641:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 642:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 643:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 644:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 645:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_spi_enable()</td>
 646:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the Serial Peripheral Interface module.</td>
 647:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 648:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 649:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 650:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 651:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_spic_disable()</td>
 652:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the SPI module on PortC </td>
 653:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 654:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 655:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 656:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 657:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_spic_disalbe()</td>
 658:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td> Disable SPI module on PortC </td>
 659:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega32E5</td>
 660:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 661:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 662:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 663:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_spic_enable()</td>
 664:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the SPI module on PortC </td>
 665:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 666:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 667:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 668:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 669:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_spid_disable()</td>
 670:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the SPI module on PortD </td>
 671:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 672:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 673:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 674:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 675:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_spid_enable()</td>
 676:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the SPI module on PortD </td>
 677:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 678:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 679:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 680:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 681:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_spie_disable()</td>
 682:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the SPI module on PortE </td>
 683:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 684:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 685:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 686:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 687:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_spie_enable()</td>
 688:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the SPI module on PortE </td>
 689:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 690:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 691:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 692:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 693:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_spif_disable()</td>
 694:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the SPI module on PortF </td>
 695:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 696:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 697:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 698:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 699:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_spif_enable()</td>
 700:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the SPI module on PortF </td>
 701:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 702:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 703:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 704:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 705:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tc0c_disable()</td>
 706:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the TC0 module on PortC </td>
 707:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 708:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 709:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 710:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 711:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tc0c_enable()</td>
 712:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the TC0 module on PortC </td>
 713:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 714:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 715:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 716:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 717:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tc0d_disable()</td>
 718:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the TC0 module on PortD </td>
 719:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 720:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 721:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 722:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 723:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tc0d_enable()</td>
 724:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the TC0 module on PortD </td>
 725:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 726:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 727:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 728:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 729:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tc0e_disable()</td>
 730:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the TC0 module on PortE </td>
 731:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 732:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 733:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 734:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 735:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tc0e_enable()</td>
 736:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the TC0 module on PortE </td>
 737:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 738:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 739:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 740:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 741:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tc0f_disable()</td>
 742:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the TC0 module on PortF </td>
 743:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 744:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 745:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 746:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 747:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tc0f_enable()</td>
 748:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the TC0 module on PortF </td>
 749:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 750:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 751:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 752:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 753:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tc1c_disable()</td>
 754:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the TC1 module on PortC </td>
 755:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 756:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 757:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 758:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 759:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tc1c_enable()</td>
 760:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the TC1 module on PortC </td>
 761:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 762:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 763:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 764:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 765:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tc1d_disable()</td>
 766:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the TC1 module on PortD </td>
 767:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 768:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 769:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 770:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 771:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tc1d_enable()</td>
 772:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the TC1 module on PortD </td>
 773:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 774:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 775:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 776:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 777:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tc1e_disable()</td>
 778:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the TC1 module on PortE </td>
 779:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 780:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 781:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 782:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 783:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tc1e_enable()</td>
 784:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the TC1 module on PortE </td>
 785:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 786:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 787:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 788:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 789:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tc1f_disable()</td>
 790:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the TC1 module on PortF </td>
 791:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 792:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 793:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 794:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 795:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tc1f_enable()</td>
 796:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the TC1 module on PortF </td>
 797:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 798:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 799:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 800:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 801:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_timer0_disable()</td>
 802:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the Timer 0 module.</td>
 803:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 804:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 805:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 806:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 807:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_timer0_enable()</td>
 808:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the Timer 0 module.</td>
 809:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 810:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 811:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 812:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 813:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_timer1_disable()</td>
 814:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the Timer 1 module.</td>
 815:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 816:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 817:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 818:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 819:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_timer1_enable()</td>
 820:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the Timer 1 module.</td>
 821:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 822:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 823:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 824:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 825:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_timer2_disable()</td>
 826:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the Timer 2 module.</td>
 827:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 828:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 829:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 830:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 831:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_timer2_enable()</td>
 832:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the Timer 2 module.</td>
 833:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 834:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 835:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 836:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 837:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_timer3_disable()</td>
 838:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the Timer 3 module.</td>
 839:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 840:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 841:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 842:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 843:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_timer3_enable()</td>
 844:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the Timer 3 module.</td>
 845:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 846:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 847:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 848:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 849:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_timer4_disable()</td>
 850:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the Timer 4 module.</td>
 851:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 852:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 853:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 854:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 855:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_timer4_enable()</td>
 856:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the Timer 4 module.</td>
 857:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 858:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 859:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 860:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 861:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_timermodulator_disable()</td>
 862:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the TIMERMODULATOR module </td>
 863:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5790, ATA5790N, ATA5795</td>
 864:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 865:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 866:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 867:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_timermodulator_enable()</td>
 868:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the TIMERMODULATOR module </td>
 869:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5790, ATA5790N, ATA5795</td>
 870:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 871:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 872:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 873:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_transceiver_disable()</td>
 874:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td> Disable transceiver module </td>
 875:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, ATmega256RFA2, ATmega128RFA2, ATmega64RFA2</td>
 876:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 877:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 878:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 879:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_transceiver_enable()</td>
 880:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td> Enable transceiver module </td>
 881:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, ATmega256RFA2, ATmega128RFA2, ATmega64RFA2</td>
 882:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 883:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 884:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 885:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_transmit_dsp_control_disable()</td>
 886:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Disable Transmit DSP control module</td>
 887:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 888:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 889:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 890:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 891:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_transmit_dsp_control_enable()</td>
 892:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Enable Transmit DSP control module</td>
 893:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 894:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 895:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 896:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 897:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_twi_disable()</td>
 898:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the Two Wire Interface module.</td>
 899:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 900:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 901:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 902:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 903:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_twi_enable()</td>
 904:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the Two Wire Interface module.</td>
 905:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 906:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 907:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 908:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 909:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_twic_disable()</td>
 910:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Disable the Two Wire Interface module on PortC </td>
 911:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 912:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 913:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 914:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 915:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_twic_enable()</td>
 916:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Enable the Two Wire Interface module on PortC </td>
 917:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 918:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 919:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 920:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 921:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_twid_disable()</td>
 922:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Disable the Two Wire Interface module on PortD </td>
 923:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 924:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 925:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 926:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 927:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_twid_enable()</td>
 928:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Enable the Two Wire Interface module on PortD </td>
 929:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 930:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 931:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 932:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 933:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_twie_disable()</td>
 934:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Disable the Two Wire Interface module on PortE </td>
 935:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 936:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 937:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 938:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 939:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_twie_enable()</td>
 940:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Enable the Two Wire Interface module on PortE </td>
 941:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
 942:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 943:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 944:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 945:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_twif_disable()</td>
 946:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Disable the Two Wire Interface module on PortF </td>
 947:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 948:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 949:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 950:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 951:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_twif_enable()</td>
 952:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Disable the Two Wire Interface module on PortF </td>
 953:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1,
 954:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 955:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 956:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 957:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tx_modulator_disable()</td>
 958:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Disable Tx modulator</td>
 959:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 960:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 961:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 962:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 963:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_tx_modulator_enable()</td>
 964:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Enable Tx modulator</td>
 965:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
 966:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 967:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 968:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 969:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usart0_disable()</td>
 970:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the USART 0 module.</td>
 971:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 972:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 973:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 974:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 975:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usart0_enable()</td>
 976:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the USART 0 module.</td>
 977:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 978:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 979:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 980:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 981:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usart1_disable()</td>
 982:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the USART 1 module.</td>
 983:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 984:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 985:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 986:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 987:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usart1_enable()</td>
 988:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the USART 1 module.</td>
 989:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega256RFR2, ATm
 990:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 991:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 992:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 993:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usart2_disable()</td>
 994:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the USART 2 module.</td>
 995:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
 996:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
 997:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
 998:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
 999:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usart2_enable()</td>
1000:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the USART 2 module.</td>
1001:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
1002:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1003:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1004:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1005:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usart3_disable()</td>
1006:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the USART 3 module.</td>
1007:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
1008:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1009:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1010:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1011:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usart3_enable()</td>
1012:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the USART 3 module.</td>
1013:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
1014:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1015:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1016:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1017:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usart_disable()</td>
1018:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the USART module.</td>
1019:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B, AT90PWM216, AT90PWM316</td>
1020:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1021:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1022:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1023:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usart_enable()</td>
1024:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the USART module.</td>
1025:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B, AT90PWM216, AT90PWM316</td>
1026:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1027:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1028:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1029:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usartc0_disable()</td>
1030:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the USART0 module on PortC </td>
1031:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
1032:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1033:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1034:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1035:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usartc0_enable()</td>
1036:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the USART0 module on PortC </td>
1037:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
1038:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1039:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1040:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1041:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usartc1_disable()</td>
1042:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the USART1 module on PortC </td>
1043:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
1044:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1045:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1046:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1047:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usartc1_enable()</td>
1048:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the USART1 module on PortC </td>
1049:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
1050:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1051:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1052:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1053:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usartd0_disable()</td>
1054:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the USART0 module on PortD </td>
1055:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
1056:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1057:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1058:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1059:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usartd0_enable()</td>
1060:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the USART0 module on PortD </td>
1061:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
1062:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1063:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1064:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1065:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usartd1_disable()</td>
1066:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the USART1 module on PortD </td>
1067:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
1068:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1069:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1070:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1071:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usartd1_enable()</td>
1072:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the USART1 module on PortE </td>
1073:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
1074:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1075:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1076:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1077:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usarte0_disable()</td>
1078:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the USART0 module on PortE </td>
1079:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
1080:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1081:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1082:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1083:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usarte0_enable()</td>
1084:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the USART0 module on PortE </td>
1085:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
1086:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1087:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1088:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1089:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usarte1_disable()</td>
1090:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the USART1 module on PortE </td>
1091:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
1092:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1093:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1094:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1095:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usarte1_enable()</td>
1096:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the USART1 module on PortE </td>
1097:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
1098:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1099:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1100:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1101:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usartf0_disable()</td>
1102:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the USART0 module on PortF </td>
1103:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
1104:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1105:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1106:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1107:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usartf0_enable()</td>
1108:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the USART0 module on PortF </td>
1109:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A4
1110:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1111:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1112:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1113:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usartf1_disable()</td>
1114:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the USART1 module on PortF </td>
1115:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
1116:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1117:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1118:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1119:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usartf1_enable()</td>
1120:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the USART1 module on PortF </td>
1121:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3
1122:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1123:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1124:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1125:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usb_disable()</td>
1126:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the USB module.</td>
1127:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega384C3, ATxmega256A3BU, ATxmega16A4U, ATxmega32A4U, ATxmega64A3U, ATxmega64A4U, ATxmeg
1128:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1129:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1130:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1131:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usb_enable()</td>
1132:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the USB module.</td>
1133:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATxmega384C3, ATxmega256A3BU, ATxmega16A4U, ATxmega32A4U, ATxmega64A3U, ATxmega64A4U, ATxmeg
1134:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1135:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1136:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1137:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usbh_disable()</td>
1138:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the USBH module </td>
1139:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90SCR100</td>
1140:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1141:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1142:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1143:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usbh_enable()</td>
1144:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the USBH module </td>
1145:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>AT90SCR100</td>
1146:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1147:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1148:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1149:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usi_disable()</td>
1150:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the Universal Serial Interface module.</td>
1151:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATtiny24, ATtiny24A, ATtiny44, ATtiny44A, ATtiny84, ATtiny84A, ATtiny25, ATtiny45, ATtiny85,
1152:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1153:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1154:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1155:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_usi_enable()</td>
1156:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the Universal Serial Interface module.</td>
1157:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATtiny24, ATtiny24A, ATtiny44, ATtiny44A, ATtiny84, ATtiny84A, ATtiny25, ATtiny45, ATtiny85,
1158:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1159:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1160:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1161:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_vadc_disable()</td>
1162:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Disable the Voltage ADC module.</td>
1163:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega406, ATmega32HVB, ATmega32HVBREVB, ATmega16HVB, ATmega16HVBREVB, ATmega26HVG, ATmega48
1164:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1165:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1166:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1167:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_vadc_enable()</td>
1168:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****      <td>Enable the Voltage ADC module.</td>
1169:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega406, ATmega32HVB, ATmega32HVBREVB, ATmega16HVB, ATmega16HVBREVB, ATmega26HVG, ATmega48
1170:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1171:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1172:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1173:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_vmonitor_disable()</td>
1174:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the VMONITOR module </td>
1175:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5790, ATA5790N, ATA5795</td>
1176:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1177:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1178:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1179:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_vmonitor_enable()</td>
1180:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the VMONITOR module </td>
1181:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5790, ATA5790N, ATA5795</td>
1182:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1183:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1184:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1185:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_voltage_monitor_disable()</td>
1186:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Disable voltage monitor module</td>
1187:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
1188:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1189:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1190:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1191:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_voltage_monitor_enable()</td>
1192:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td>Enable voltage monitor module</td>
1193:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATA5831</td>
1194:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1195:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1196:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1197:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_vrm_disable()</td>
1198:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Disable the VRM module </td>
1199:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega32HVB, ATmega32HVBREVB, ATmega16HVB, ATmega16HVBREVB, ATmega26HVG, ATmega48HVF</td>
1200:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1201:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1202:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   <tr>
1203:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>power_vrm_enable()</td>
1204:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     <td> Enable the VRM module </td>
1205:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****    <td>ATmega32HVB, ATmega32HVBREVB, ATmega16HVB, ATmega16HVBREVB, ATmega26HVG, ATmega48HVF</td>
1206:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   </tr>
1207:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** </table>
1208:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** </center>
1209:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** </small>
1210:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1211:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** @} */
1212:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1213:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** // Xmega A series has AES, EBI and DMA bits
1214:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** // Include any other device on need basis
1215:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_ATxmega16A4__) \
1216:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega16A4U__) \
1217:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega32A4U__) \
1218:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega32A4__) \
1219:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A1__) \
1220:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A1U__) \
1221:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A3__) \
1222:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A3U__) \
1223:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A4U__) \
1224:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A1__) \
1225:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A1U__) \
1226:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A3__) \
1227:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A3U__) \
1228:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A4U__) \
1229:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega192A3__) \
1230:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega192A3U__) \
1231:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega256A3__) \
1232:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega256A3U__) \
1233:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega256A3B__) \
1234:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega256A3BU__) \
1235:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega384C3__)
1236:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1237:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1238:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aes_enable()  (PR_PRGEN &= (uint8_t)~(PR_AES_bm))
1239:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aes_disable() (PR_PRGEN |= (uint8_t)PR_AES_bm)
1240:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1241:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_ebi_enable()  (PR_PRGEN &= (uint8_t)~(PR_EBI_bm))
1242:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_ebi_disable() (PR_PRGEN |= (uint8_t)PR_EBI_bm)
1243:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1244:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_dma_enable()    (PR_PRGEN &= (uint8_t)~(PR_DMA_bm))
1245:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_dma_disable()   (PR_PRGEN |= (uint8_t)PR_DMA_bm)
1246:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1247:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_daca_enable()     (PR_PRPA &= (uint8_t)~(PR_DAC_bm))
1248:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_daca_disable()    (PR_PRPA |= (uint8_t)PR_DAC_bm)
1249:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_dacb_enable()     (PR_PRPB &= (uint8_t)~(PR_DAC_bm))
1250:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_dacb_disable()    (PR_PRPB |= (uint8_t)PR_DAC_bm)
1251:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1252:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc1_enable()  (PR_PRPC &= (uint8_t)~(PR_USART1_bm))
1253:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc1_disable() (PR_PRPC |= (uint8_t)PR_USART1_bm)
1254:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartd1_enable()  (PR_PRPD &= (uint8_t)~(PR_USART1_bm))
1255:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartd1_disable() (PR_PRPD |= (uint8_t)PR_USART1_bm)
1256:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usarte1_enable()  (PR_PRPE &= (uint8_t)~(PR_USART1_bm))
1257:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usarte1_disable() (PR_PRPE |= (uint8_t)PR_USART1_bm)
1258:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartf1_enable()  (PR_PRPF &= (uint8_t)~(PR_USART1_bm))
1259:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartf1_disable() (PR_PRPF |= (uint8_t)PR_USART1_bm)
1260:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1261:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_ATxmega384C3__) \
1262:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega256A3BU__) \
1263:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega16A4U__) \
1264:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega32A4U__) \
1265:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A3U__) \
1266:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A4U__) \
1267:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A3U__) \
1268:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A4U__) \
1269:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega192A3U__) \
1270:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega256A3U__) 
1271:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1272:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usb_enable()   (PR_PRGEN &= (uint8_t)~(PR_USB_bm))
1273:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usb_disable()  (PR_PRGEN &= (uint8_t)(PR_USB_bm))
1274:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1275:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
1276:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do { \
1277:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRGEN &= (uint8_t)~(PR_AES_bm|PR_EBI_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm|PR_USB_bm); \
1278:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPA &= (uint8_t)~(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1279:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPB &= (uint8_t)~(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1280:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPC &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1281:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPD &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1282:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPE &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1283:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPF &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1284:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** } while(0)
1285:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1286:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
1287:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do { \
1288:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRGEN |= (uint8_t)(PR_AES_bm|PR_EBI_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm|PR_USB_bm); \
1289:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPA |= (uint8_t)(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1290:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPB |= (uint8_t)(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1291:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1292:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPD |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1293:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPE |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1294:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPF |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1295:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** } while(0)
1296:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1297:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #else
1298:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1299:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
1300:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do { \
1301:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRGEN &= (uint8_t)~(PR_AES_bm|PR_EBI_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
1302:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPA &= (uint8_t)~(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1303:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPB &= (uint8_t)~(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1304:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPC &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1305:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPD &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1306:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPE &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1307:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPF &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1308:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** } while(0)
1309:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1310:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1311:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
1312:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do { \
1313:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRGEN|= (uint8_t)(PR_AES_bm|PR_EBI_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
1314:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPA |= (uint8_t)(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1315:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPB |= (uint8_t)(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1316:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1317:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPD |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1318:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPE |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1319:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPF |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1320:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** } while(0)
1321:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #endif
1322:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1323:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #endif
1324:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1325:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_ATxmega16C4__) \
1326:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega32C4__) \
1327:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64C3__) \
1328:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128C3__) \
1329:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega192C3__) \
1330:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega256C3__) 
1331:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1332:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usb_enable()   (PR_PRGEN &= (uint8_t)~(PR_USB_bm))
1333:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usb_disable()  (PR_PRGEN &= (uint8_t)(PR_USB_bm))
1334:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1335:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aes_enable()  (PR_PRGEN &= (uint8_t)~(PR_AES_bm))
1336:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aes_disable() (PR_PRGEN |= (uint8_t)PR_AES_bm)
1337:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1338:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rtc_enable()  (PR_PRGEN &= (uint8_t)~(PR_RTC_bm))
1339:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rtc_disable() (PR_PRGEN |= (uint8_t)PR_RTC_bm)
1340:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1341:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_evsys_enable()    (PR_PRGEN &= (uint8_t)~(PR_EVSYS_bm))
1342:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_evsys_disable()   (PR_PRGEN |= (uint8_t)PR_EVSYS_bm)
1343:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1344:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_dma_enable()    (PR_PRGEN &= (uint8_t)~(PR_DMA_bm))
1345:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_dma_disable()   (PR_PRGEN |= (uint8_t)PR_DMA_bm)
1346:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1347:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adca_enable()     (PR_PRPA &= (uint8_t)~(PR_ADC_bm))
1348:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adca_disable()    (PR_PRPA |= (uint8_t)PR_ADC_bm)
1349:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1350:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aca_enable()      (PR_PRPA &= (uint8_t)~(PR_AC_bm))
1351:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aca_disable()     (PR_PRPA |= (uint8_t)PR_AC_bm)
1352:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1353:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twic_enable()     (PR_PRPC &= (uint8_t)~(PR_TWI_bm))
1354:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twic_disable()    (PR_PRPC |= (uint8_t)PR_TWI_bm)
1355:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twie_enable()     (PR_PRPE &= (uint8_t)~(PR_TWI_bm))
1356:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twie_disable()    (PR_PRPE |= (uint8_t)PR_TWI_bm)
1357:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1358:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc1_enable()  (PR_PRPC &= (uint8_t)~(PR_USART1_bm))
1359:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc1_disable() (PR_PRPC |= (uint8_t)PR_USART1_bm)
1360:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1361:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc0_enable()  (PR_PRPC &= (uint8_t)~(PR_USART0_bm))
1362:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc0_disable() (PR_PRPC |= (uint8_t)PR_USART0_bm)
1363:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartd0_enable()  (PR_PRPD &= (uint8_t)~(PR_USART0_bm))
1364:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartd0_disable() (PR_PRPD |= (uint8_t)PR_USART0_bm)
1365:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usarte0_enable()  (PR_PRPE &= (uint8_t)~(PR_USART0_bm))
1366:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usarte0_disable() (PR_PRPE |= (uint8_t)PR_USART0_bm)
1367:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartf0_enable()  (PR_PRPF &= (uint8_t)~(PR_USART0_bm))
1368:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartf0_disable() (PR_PRPF |= (uint8_t)PR_USART0_bm)
1369:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1370:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spic_enable()     (PR_PRPC &= (uint8_t)~(PR_SPI_bm))
1371:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spic_disable()    (PR_PRPC |= (uint8_t)PR_SPI_bm)
1372:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spid_enable()     (PR_PRPD &= (uint8_t)~(PR_SPI_bm))
1373:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spid_disable()    (PR_PRPD |= (uint8_t)PR_SPI_bm)
1374:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1375:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresc_enable()   (PR_PRPC &= (uint8_t)~(PR_HIRES_bm))
1376:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresc_disable()  (PR_PRPC |= (uint8_t)PR_HIRES_bm)
1377:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1378:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC1_bm))
1379:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1c_disable()    (PR_PRPC |= (uint8_t)PR_TC1_bm)
1380:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1381:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC0_bm))
1382:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0c_disable()    (PR_PRPC |= (uint8_t)PR_TC0_bm)
1383:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0d_enable()     (PR_PRPD &= (uint8_t)~(PR_TC0_bm))
1384:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0d_disable()    (PR_PRPD |= (uint8_t)PR_TC0_bm)
1385:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0e_enable()     (PR_PRPE &= (uint8_t)~(PR_TC0_bm))
1386:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0e_disable()    (PR_PRPE |= (uint8_t)PR_TC0_bm)
1387:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0f_enable()     (PR_PRPF &= (uint8_t)~(PR_TC0_bm))
1388:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0f_disable()    (PR_PRPF |= (uint8_t)PR_TC0_bm)
1389:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1390:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
1391:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do { \
1392:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRGEN &= (uint8_t)~(PR_USB_bm|PR_AES_bm|PR_DMA_bm|PR_RTC_bm|PR_EVSYS_bm); \
1393:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPA &= (uint8_t)~(PR_ADC_bm|PR_AC_bm); \
1394:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPC &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_USART1_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1395:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPD &= (uint8_t)~(PR_USART0_bm|PR_SPI_bm|PR_TC0_bm); \
1396:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPE &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_TC0_bm); \
1397:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPF &= (uint8_t)~(PR_USART0_bm|PR_TC0_bm); \
1398:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     } while(0)
1399:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1400:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
1401:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do { \
1402:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRGEN |= (uint8_t)(PR_USB_bm|PR_AES_bm|PR_DMA_bm|PR_RTC_bm|PR_EVSYS_bm); \
1403:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPA |= (uint8_t)(PR_ADC_bm|PR_AC_bm); \
1404:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_USART1_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1405:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPD |= (uint8_t)(PR_USART0_bm|PR_SPI_bm|PR_TC0_bm); \
1406:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPE |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_TC0_bm); \
1407:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPF |= (uint8_t)(PR_USART0_bm|PR_TC0_bm); \
1408:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     } while(0)
1409:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1410:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #endif
1411:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1412:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_ATxmega16A4__) \
1413:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega16A4U__) \
1414:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega16D4__) \
1415:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega32A4__) \
1416:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega32A4U__) \
1417:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega32D4__) \
1418:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A1__) \
1419:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A1U__) \
1420:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A3__) \
1421:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A3U__) \
1422:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A4U__) \
1423:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64D3__) \
1424:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A1__) \
1425:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A1U__) \
1426:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A3__) \
1427:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A3U__) \
1428:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A4U__) \
1429:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128D3__) \
1430:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega192A3__) \
1431:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega192A3U__) \
1432:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega192D3__) \
1433:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega256A3__) \
1434:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega256A3U__) \
1435:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega256A3B__) \
1436:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega256A3BU__) \
1437:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega384C3__)
1438:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1439:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1440:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rtc_enable()  (PR_PRGEN &= (uint8_t)~(PR_RTC_bm))
1441:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rtc_disable() (PR_PRGEN |= (uint8_t)PR_RTC_bm)
1442:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1443:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_evsys_enable()    (PR_PRGEN &= (uint8_t)~(PR_EVSYS_bm))
1444:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_evsys_disable()   (PR_PRGEN |= (uint8_t)PR_EVSYS_bm)
1445:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1446:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adca_enable()     (PR_PRPA &= (uint8_t)~(PR_ADC_bm))
1447:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adca_disable()    (PR_PRPA |= (uint8_t)PR_ADC_bm)
1448:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adcb_enable()     (PR_PRPB &= (uint8_t)~(PR_ADC_bm))
1449:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adcb_disable()    (PR_PRPB |= (uint8_t)PR_ADC_bm)
1450:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1451:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aca_enable()      (PR_PRPA &= (uint8_t)~(PR_AC_bm))
1452:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aca_disable()     (PR_PRPA |= (uint8_t)PR_AC_bm)
1453:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_acb_enable()      (PR_PRPB &= (uint8_t)~(PR_AC_bm))
1454:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_acb_disable()     (PR_PRPB |= (uint8_t)PR_AC_bm)
1455:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1456:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twic_enable()     (PR_PRPC &= (uint8_t)~(PR_TWI_bm))
1457:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twic_disable()    (PR_PRPC |= (uint8_t)PR_TWI_bm)
1458:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twid_enable()     (PR_PRPD &= (uint8_t)~(PR_TWI_bm))
1459:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twid_disable()    (PR_PRPD |= (uint8_t)PR_TWI_bm)
1460:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twie_enable()     (PR_PRPE &= (uint8_t)~(PR_TWI_bm))
1461:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twie_disable()    (PR_PRPE |= (uint8_t)PR_TWI_bm)
1462:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twif_enable()     (PR_PRPF &= (uint8_t)~(PR_TWI_bm))
1463:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twif_disable()    (PR_PRPF |= (uint8_t)PR_TWI_bm)
1464:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1465:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc0_enable()  (PR_PRPC &= (uint8_t)~(PR_USART0_bm))
1466:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc0_disable() (PR_PRPC |= (uint8_t)PR_USART0_bm)
1467:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartd0_enable()  (PR_PRPD &= (uint8_t)~(PR_USART0_bm))
1468:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartd0_disable() (PR_PRPD |= (uint8_t)PR_USART0_bm)
1469:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usarte0_enable()  (PR_PRPE &= (uint8_t)~(PR_USART0_bm))
1470:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usarte0_disable() (PR_PRPE |= (uint8_t)PR_USART0_bm)
1471:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartf0_enable()  (PR_PRPF &= (uint8_t)~(PR_USART0_bm))
1472:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartf0_disable() (PR_PRPF |= (uint8_t)PR_USART0_bm)
1473:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1474:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spic_enable()     (PR_PRPC &= (uint8_t)~(PR_SPI_bm))
1475:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spic_disable()    (PR_PRPC |= (uint8_t)PR_SPI_bm)
1476:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spid_enable()     (PR_PRPD &= (uint8_t)~(PR_SPI_bm))
1477:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spid_disable()    (PR_PRPD |= (uint8_t)PR_SPI_bm)
1478:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spie_enable()     (PR_PRPE &= (uint8_t)~(PR_SPI_bm))
1479:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spie_disable()    (PR_PRPE |= (uint8_t)PR_SPI_bm)
1480:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spif_enable()     (PR_PRPF &= (uint8_t)~(PR_SPI_bm))
1481:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spif_disable()    (PR_PRPF |= (uint8_t)PR_SPI_bm)
1482:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1483:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresc_enable()   (PR_PRPC &= (uint8_t)~(PR_HIRES_bm))
1484:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresc_disable()  (PR_PRPC |= (uint8_t)PR_HIRES_bm)
1485:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresd_enable()   (PR_PRPD &= (uint8_t)~(PR_HIRES_bm))
1486:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresd_disable()  (PR_PRPD |= (uint8_t)PR_HIRES_bm)
1487:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hirese_enable()   (PR_PRPE &= (uint8_t)~(PR_HIRES_bm))
1488:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hirese_disable()  (PR_PRPE |= (uint8_t)PR_HIRES_bm)
1489:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresf_enable()   (PR_PRPF &= (uint8_t)~(PR_HIRES_bm))
1490:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresf_disable()  (PR_PRPF |= (uint8_t)PR_HIRES_bm)
1491:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1492:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC1_bm))
1493:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1c_disable()    (PR_PRPC |= (uint8_t)PR_TC1_bm)
1494:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1d_enable()     (PR_PRPD &= (uint8_t)~(PR_TC1_bm))
1495:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1d_disable()    (PR_PRPD |= (uint8_t)PR_TC1_bm)
1496:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1e_enable()     (PR_PRPE &= (uint8_t)~(PR_TC1_bm))
1497:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1e_disable()    (PR_PRPE |= (uint8_t)PR_TC1_bm)
1498:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1f_enable()     (PR_PRPF &= (uint8_t)~(PR_TC1_bm))
1499:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1f_disable()    (PR_PRPF |= (uint8_t)PR_TC1_bm)
1500:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1501:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC0_bm))
1502:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0c_disable()    (PR_PRPC |= (uint8_t)PR_TC0_bm)
1503:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0d_enable()     (PR_PRPD &= (uint8_t)~(PR_TC0_bm))
1504:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0d_disable()    (PR_PRPD |= (uint8_t)PR_TC0_bm)
1505:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0e_enable()     (PR_PRPE &= (uint8_t)~(PR_TC0_bm))
1506:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0e_disable()    (PR_PRPE |= (uint8_t)PR_TC0_bm)
1507:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0f_enable()     (PR_PRPF &= (uint8_t)~(PR_TC0_bm))
1508:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0f_disable()    (PR_PRPF |= (uint8_t)PR_TC0_bm)
1509:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1510:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #endif
1511:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1512:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_ATxmega64D4__) \
1513:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128D4__) 
1514:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1515:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rtc_enable()  (PR_PRGEN &= (uint8_t)~(PR_RTC_bm))
1516:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rtc_disable() (PR_PRGEN |= (uint8_t)PR_RTC_bm)
1517:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1518:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_evsys_enable()    (PR_PRGEN &= (uint8_t)~(PR_EVSYS_bm))
1519:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_evsys_disable()   (PR_PRGEN |= (uint8_t)PR_EVSYS_bm)
1520:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1521:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adca_enable()     (PR_PRPA &= (uint8_t)~(PR_ADC_bm))
1522:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adca_disable()    (PR_PRPA |= (uint8_t)PR_ADC_bm)
1523:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1524:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aca_enable()      (PR_PRPA &= (uint8_t)~(PR_AC_bm))
1525:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aca_disable()     (PR_PRPA |= (uint8_t)PR_AC_bm)
1526:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1527:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twic_enable()     (PR_PRPC &= (uint8_t)~(PR_TWI_bm))
1528:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twic_disable()    (PR_PRPC |= (uint8_t)PR_TWI_bm)
1529:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twie_enable()     (PR_PRPE &= (uint8_t)~(PR_TWI_bm))
1530:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twie_disable()    (PR_PRPE |= (uint8_t)PR_TWI_bm)
1531:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1532:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc0_enable()  (PR_PRPC &= (uint8_t)~(PR_USART0_bm))
1533:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc0_disable() (PR_PRPC |= (uint8_t)PR_USART0_bm)
1534:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartd0_enable()  (PR_PRPD &= (uint8_t)~(PR_USART0_bm))
1535:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartd0_disable() (PR_PRPD |= (uint8_t)PR_USART0_bm)
1536:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usarte0_enable()  (PR_PRPE &= (uint8_t)~(PR_USART0_bm))
1537:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usarte0_disable() (PR_PRPE |= (uint8_t)PR_USART0_bm)
1538:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartf0_enable()  (PR_PRPF &= (uint8_t)~(PR_USART0_bm))
1539:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartf0_disable() (PR_PRPF |= (uint8_t)PR_USART0_bm)
1540:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1541:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spic_enable()     (PR_PRPC &= (uint8_t)~(PR_SPI_bm))
1542:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spic_disable()    (PR_PRPC |= (uint8_t)PR_SPI_bm)
1543:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spid_enable()     (PR_PRPD &= (uint8_t)~(PR_SPI_bm))
1544:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spid_disable()    (PR_PRPD |= (uint8_t)PR_SPI_bm)
1545:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1546:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresc_enable()   (PR_PRPC &= (uint8_t)~(PR_HIRES_bm))
1547:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresc_disable()  (PR_PRPC |= (uint8_t)PR_HIRES_bm)
1548:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1549:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC1_bm))
1550:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1c_disable()    (PR_PRPC |= (uint8_t)PR_TC1_bm)
1551:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1552:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC0_bm))
1553:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0c_disable()    (PR_PRPC |= (uint8_t)PR_TC0_bm)
1554:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0d_enable()     (PR_PRPD &= (uint8_t)~(PR_TC0_bm))
1555:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0d_disable()    (PR_PRPD |= (uint8_t)PR_TC0_bm)
1556:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0e_enable()     (PR_PRPE &= (uint8_t)~(PR_TC0_bm))
1557:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0e_disable()    (PR_PRPE |= (uint8_t)PR_TC0_bm)
1558:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0f_enable()     (PR_PRPF &= (uint8_t)~(PR_TC0_bm))
1559:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0f_disable()    (PR_PRPF |= (uint8_t)PR_TC0_bm)
1560:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1561:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
1562:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do { \
1563:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRGEN &= (uint8_t)~(PR_RTC_bm|PR_EVSYS_bm); \
1564:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPA &= (uint8_t)~(PR_ADC_bm|PR_AC_bm); \
1565:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPC &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1566:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPD &= (uint8_t)~(PR_USART0_bm|PR_SPI_bm|PR_TC0_bm); \
1567:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPE &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_TC0_bm); \
1568:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPF &= (uint8_t)~(PR_USART0_bm|PR_TC0_bm); \
1569:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     } while(0)
1570:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1571:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
1572:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do { \
1573:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRGEN |= (uint8_t)(PR_RTC_bm|PR_EVSYS_bm); \
1574:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPA |= (uint8_t)(PR_ADC_bm|PR_AC_bm); \
1575:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1576:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPD |= (uint8_t)(PR_USART0_bm|PR_SPI_bm|PR_TC0_bm); \
1577:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPE |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_TC0_bm); \
1578:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPF |= (uint8_t)(PR_USART0_bm|PR_TC0_bm); \
1579:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     } while(0)
1580:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1581:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #endif
1582:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1583:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_ATxmega16D4__) \
1584:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega32D4__) \
1585:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64D3__) \
1586:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128D3__) \
1587:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega192D3__) 
1588:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1589:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
1590:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do { \
1591:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRGEN &= (uint8_t)~(PR_RTC_bm|PR_EVSYS_bm); \
1592:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPA &= (uint8_t)~(PR_ADC_bm|PR_AC_bm); \
1593:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPB &= (uint8_t)~(PR_ADC_bm|PR_AC_bm); \
1594:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPC &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1595:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPD &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1596:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPE &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1597:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPF &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1598:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** } while(0)
1599:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1600:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1601:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
1602:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do { \
1603:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRGEN|= (uint8_t)(PR_EBI_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
1604:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPA |= (uint8_t)(PR_ADC_bm|PR_AC_bm); \
1605:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPB |= (uint8_t)(PR_ADC_bm|PR_AC_bm); \
1606:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1607:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPD |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1608:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPE |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1609:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPF |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1610:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** } while(0)
1611:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1612:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1613:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATxmega32E5__)
1614:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1615:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_cpld_enable()     (PR_PRGEN &= (uint8_t)~(PR_CPLD_bm))
1616:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_cpld_disable()    (PR_PRGEN |= (uint8_t)PR_CPLD_bm)
1617:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1618:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rtc_enable()      (PR_PRGEN &= (uint8_t)~(PR_RTC_bm)) 
1619:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rtc_disable()     (PR_PRGEN |= (uint8_t)PR_RTC_bm)
1620:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1621:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_evsys_enable()    (PR_PRGEN &= (uint8_t)~(PR_EVSYS_bm)) 
1622:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_evsys_disable()   (PR_PRGEN |= (uint8_t)PR_EVSYS_bm)
1623:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1624:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_dma_enable()      (PR_PRGEN &= (uint8_t)~(PR_DMA_bm))
1625:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_dma_disable()     (PR_PRGEN |= (uint8_t)PR_DMA_bm)
1626:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1627:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_daca_enable()      (PR_PRPA  &= (uint8_t)~(PR_DAC_bm))
1628:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_daca_disable()     (PR_PRPA  |= (uint8_t)PR_DAC_bm)
1629:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1630:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adca_enable()      (PR_PRPA  &= (uint8_t)~(PR_ADC_bm))
1631:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adca_disable()     (PR_PRPA  |= (uint8_t)PR_ADC_bm)
1632:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1633:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aca_enable()       (PR_PRPA  &= (uint8_t)~(PR_AC_bm))
1634:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aca_disable()      (PR_PRPA  |= (uint8_t)PR_AC_bm)
1635:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1636:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twic_enable()      (PR_PRPC  &= (uint8_t)~(PR_TWI_bm))
1637:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twic_disable()     (PR_PRPC  |= (uint8_t)PR_TWI_bm)
1638:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1639:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc0_enable()   (PR_PRPC  &= (uint8_t)~(PR_USART0_bm))
1640:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc0_disable()  (PR_PRPC  |= (uint8_t)PR_USART0_bm)
1641:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1642:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spic_enable()      (PR_PRPC  &= (uint8_t)~(PR_SPI_bm))
1643:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spic_disalbe()     (PR_PRPC  |= (uint8_t)PR_SPI_bm)
1644:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1645:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresc_enable()    (PR_PRPC  &= (uint8_t)~(PR_HIRES_bm))
1646:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresc_disable()   (PR_PRPC  |= (uint8_t)PR_HIRES_bm)
1647:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1648:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1c_enable()      (PR_PRPC  &= (uint8_t)~(PR_TC1_bm))
1649:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1c_disable()     (PR_PRPC  |= (uint8_t)PR_TC1_bm)
1650:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1651:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0c_enable()      (PR_PRPC  &= (uint8_t)~(PR_TC0_bm))
1652:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0c_disable()     (PR_PRPC  |= (uint8_t)PR_TC0_bm)
1653:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1654:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartd0_enable()   (PR_PRPD  &= (uint8_t)~(PR_USART0_bm))  
1655:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartd0_disable()  (PR_PRPD  |= (uint8_t)PR_USART0_bm)
1656:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1657:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1d_enable()      (PR_PRPC  &= (uint8_t)~(PR_TC1_bm)) 
1658:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1d_disable()     (PR_PRPC  |= (uint8_t)PR_TC1_bm) 
1659:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1660:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
1661:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do { \
1662:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRGEN &= (uint8_t)~(PR_RTC_bm|PR_EVSYS_bm|PR_CPLD_bm|PR_DMA_bm); \
1663:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPA  &= (uint8_t)~(PR_ADC_bm|PR_AC_bm|PR_DAC_bm); \
1664:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPC  &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1665:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPD  &= (uint8_t)~(PR_USART0_bm|PR_TC1_bm); \
1666:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** } while(0)
1667:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1668:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1669:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
1670:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do { \
1671:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRGEN|= (uint8_t)(PR_CPLD_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
1672:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPA |= (uint8_t)(PR_ADC_bm|PR_AC_bm|PR_DAC_bm); \
1673:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1674:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPD |= (uint8_t)(PR_USART0_bm|PR_TC1_bm); \
1675:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** } while(0)
1676:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1677:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1678:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined (__AVR_ATxmega64B1__) \
1679:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined (__AVR_ATxmega64B3__) \
1680:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined (__AVR_ATxmega128B1__) \
1681:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined (__AVR_ATxmega128B3__) 
1682:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_lcd_enable()  (PR_PRGEN &= (uint8_t)~(PR_LCD_bm))
1683:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_lcd_disable() (PR_PRGEN |= (uint8_t)PR_LCD_bm)
1684:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1685:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usb_enable()  (PR_PRGEN &= (uint8_t)~(PR_USB_bm))
1686:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usb_disable() (PR_PRGEN |= (uint8_t)PR_USB_bm)
1687:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1688:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aes_enable()  (PR_PRGEN &= (uint8_t)~(PR_AES_bm))
1689:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aes_disable() (PR_PRGEN |= (uint8_t)PR_AES_bm)
1690:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1691:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rtc_enable()  (PR_PRGEN &= (uint8_t)~(PR_RTC_bm))
1692:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rtc_disable() (PR_PRGEN |= (uint8_t)PR_RTC_bm)
1693:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1694:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_evsys_enable()    (PR_PRGEN &= (uint8_t)~(PR_EVSYS_bm))
1695:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_evsys_disable()   (PR_PRGEN |= (uint8_t)PR_EVSYS_bm)
1696:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1697:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_dma_enable()    (PR_PRGEN &= (uint8_t)~(PR_DMA_bm))
1698:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_dma_disable()   (PR_PRGEN |= (uint8_t)PR_DMA_bm)
1699:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1700:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adca_enable()     (PR_PRPA &= (uint8_t)~(PR_ADC_bm))
1701:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adca_disable()    (PR_PRPA |= (uint8_t)PR_ADC_bm)
1702:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adcb_enable()     (PR_PRPB &= (uint8_t)~(PR_ADC_bm))
1703:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adcb_disable()    (PR_PRPB |= (uint8_t)PR_ADC_bm)
1704:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1705:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aca_enable()      (PR_PRPA &= (uint8_t)~(PR_AC_bm))
1706:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aca_disable()     (PR_PRPA |= (uint8_t)PR_AC_bm)
1707:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_acb_enable()      (PR_PRPB &= (uint8_t)~(PR_AC_bm))
1708:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_acb_disable()     (PR_PRPB |= (uint8_t)PR_AC_bm)
1709:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1710:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twic_enable()     (PR_PRPC &= (uint8_t)~(PR_TWI_bm))
1711:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twic_disable()    (PR_PRPC |= (uint8_t)PR_TWI_bm)
1712:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1713:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc0_enable()  (PR_PRPC &= (uint8_t)~(PR_USART0_bm))
1714:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc0_disable() (PR_PRPC |= (uint8_t)PR_USART0_bm)
1715:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usarte0_enable()  (PR_PRPE &= (uint8_t)~(PR_USART0_bm))
1716:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usarte0_disable() (PR_PRPE |= (uint8_t)PR_USART0_bm)
1717:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1718:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spic_enable()     (PR_PRPC &= (uint8_t)~(PR_SPI_bm))
1719:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spic_disable()    (PR_PRPC |= (uint8_t)PR_SPI_bm)
1720:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1721:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresc_enable()     (PR_PRPC &= (uint8_t)~(PR_HIRES_bm))
1722:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresc_disable()    (PR_PRPC |= (uint8_t)PR_HIRES_bm)
1723:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1724:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC1_bm))
1725:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1c_disable()    (PR_PRPC |= (uint8_t)PR_TC1_bm)
1726:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1727:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0c_enable()  (PR_PRPC &= (uint8_t)~(PR_TC0_bm))
1728:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0c_disable() (PR_PRPC |= (uint8_t)PR_TC0_bm)
1729:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0e_enable()  (PR_PRPE &= (uint8_t)~(PR_TC0_bm))
1730:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0e_disable() (PR_PRPE |= (uint8_t)PR_TC0_bm)
1731:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1732:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
1733:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do { \
1734:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRGEN &= (uint8_t)~(PR_LCD_bm|PR_USB_bm|PR_AES_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
1735:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPA &= (uint8_t)~(PR_ADC_bm|PR_AC_bm); \
1736:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPB &= (uint8_t)~(PR_ADC_bm|PR_AC_bm); \
1737:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPC &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1738:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPE &= (uint8_t)~(PR_USART0_bm|PR_TC0_bm); \
1739:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     } while(0)
1740:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1741:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
1742:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do { \
1743:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRGEN |= (uint8_t)(PR_LCD_bm|PR_USB_bm|PR_AES_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
1744:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPA |= (uint8_t)(PR_ADC_bm|PR_AC_bm); \
1745:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPB |= (uint8_t)(PR_ADC_bm|PR_AC_bm); \
1746:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1747:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPE |= (uint8_t)(PR_USART0_bm|PR_TC0_bm); \
1748:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     } while(0)
1749:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1750:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined (__AVR_ATMXT112SL__) \
1751:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined (__AVR_ATMXT224__) \
1752:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined (__AVR_ATMXT224E__) \
1753:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined (__AVR_ATMXT336S__) \
1754:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined (__AVR_ATMXT540S__) \
1755:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined (__AVR_ATMXT540SREVA__)
1756:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1757:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_ctm_enable()  (PR_PRGEN &= (uint8_t)~(PR_CTM_bm))
1758:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_ctm_disable() (PR_PRGEN |= (uint8_t)PR_CTM_bm)
1759:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1760:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aes_enable()  (PR_PRGEN &= (uint8_t)~(PR_AES_bm))
1761:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aes_disable() (PR_PRGEN |= (uint8_t)PR_AES_bm)
1762:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1763:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_ebi_enable()  (PR_PRGEN &= (uint8_t)~(PR_EBI_bm))
1764:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_ebi_disable() (PR_PRGEN |= (uint8_t)PR_EBI_bm)
1765:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1766:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rtc_enable()  (PR_PRGEN &= (uint8_t)~(PR_RTC_bm))
1767:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rtc_disable() (PR_PRGEN |= (uint8_t)PR_RTC_bm)
1768:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1769:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_evsys_enable()    (PR_PRGEN &= (uint8_t)~(PR_EVSYS_bm))
1770:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_evsys_disable()   (PR_PRGEN |= (uint8_t)PR_EVSYS_bm)
1771:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1772:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_dma_enable()    (PR_PRGEN &= (uint8_t)~(PR_DMA_bm))
1773:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_dma_disable()   (PR_PRGEN |= (uint8_t)PR_DMA_bm)
1774:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1775:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_daca_enable()     (PR_PRPA &= (uint8_t)~(PR_DAC_bm))
1776:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_daca_disable()    (PR_PRPA |= (uint8_t)PR_DAC_bm)
1777:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_dacb_enable()     (PR_PRPB &= (uint8_t)~(PR_DAC_bm))
1778:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_dacb_disable()    (PR_PRPB |= (uint8_t)PR_DAC_bm)
1779:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1780:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adca_enable()     (PR_PRPA &= (uint8_t)~(PR_ADC_bm))
1781:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adca_disable()    (PR_PRPA |= (uint8_t)PR_ADC_bm)
1782:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adcb_enable()     (PR_PRPB &= (uint8_t)~(PR_ADC_bm))
1783:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adcb_disable()    (PR_PRPB |= (uint8_t)PR_ADC_bm)
1784:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1785:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aca_enable()      (PR_PRPA &= (uint8_t)~(PR_AC_bm))
1786:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aca_disable()     (PR_PRPA |= (uint8_t)PR_AC_bm)
1787:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_acb_enable()      (PR_PRPB &= (uint8_t)~(PR_AC_bm))
1788:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_acb_disable()     (PR_PRPB |= (uint8_t)PR_AC_bm)
1789:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1790:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twic_enable()     (PR_PRPC &= (uint8_t)~(PR_TWI_bm))
1791:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twic_disable()    (PR_PRPC |= (uint8_t)PR_TWI_bm)
1792:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twid_enable()     (PR_PRPD &= (uint8_t)~(PR_TWI_bm))
1793:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twid_disable()    (PR_PRPD |= (uint8_t)PR_TWI_bm)
1794:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twie_enable()     (PR_PRPE &= (uint8_t)~(PR_TWI_bm))
1795:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twie_disable()    (PR_PRPE |= (uint8_t)PR_TWI_bm)
1796:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twif_enable()     (PR_PRPF &= (uint8_t)~(PR_TWI_bm))
1797:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twif_disable()    (PR_PRPF |= (uint8_t)PR_TWI_bm)
1798:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1799:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc1_enable()  (PR_PRPC &= (uint8_t)~(PR_USART1_bm))
1800:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc1_disable() (PR_PRPC |= (uint8_t)PR_USART1_bm)
1801:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartd1_enable()  (PR_PRPD &= (uint8_t)~(PR_USART1_bm))
1802:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartd1_disable() (PR_PRPD |= (uint8_t)PR_USART1_bm)
1803:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usarte1_enable()  (PR_PRPE &= (uint8_t)~(PR_USART1_bm))
1804:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usarte1_disable() (PR_PRPE |= (uint8_t)PR_USART1_bm)
1805:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartf1_enable()  (PR_PRPF &= (uint8_t)~(PR_USART1_bm))
1806:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartf1_disable() (PR_PRPF |= (uint8_t)PR_USART1_bm)
1807:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1808:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc0_enable()  (PR_PRPC &= (uint8_t)~(PR_USART0_bm))
1809:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartc0_disable() (PR_PRPC |= (uint8_t)PR_USART0_bm)
1810:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartd0_enable()  (PR_PRPD &= (uint8_t)~(PR_USART0_bm))
1811:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartd0_disable() (PR_PRPD |= (uint8_t)PR_USART0_bm)
1812:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usarte0_enable()  (PR_PRPE &= (uint8_t)~(PR_USART0_bm))
1813:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usarte0_disable() (PR_PRPE |= (uint8_t)PR_USART0_bm)
1814:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartf0_enable()  (PR_PRPF &= (uint8_t)~(PR_USART0_bm))
1815:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usartf0_disable() (PR_PRPF |= (uint8_t)PR_USART0_bm)
1816:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1817:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spic_enable()     (PR_PRPC &= (uint8_t)~(PR_SPI_bm))
1818:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spic_disable()    (PR_PRPC |= (uint8_t)PR_SPI_bm)
1819:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spid_enable()     (PR_PRPD &= (uint8_t)~(PR_SPI_bm))
1820:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spid_disable()    (PR_PRPD |= (uint8_t)PR_SPI_bm)
1821:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spie_enable()     (PR_PRPE &= (uint8_t)~(PR_SPI_bm))
1822:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spie_disable()    (PR_PRPE |= (uint8_t)PR_SPI_bm)
1823:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spif_enable()     (PR_PRPF &= (uint8_t)~(PR_SPI_bm))
1824:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spif_disable()    (PR_PRPF |= (uint8_t)PR_SPI_bm)
1825:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1826:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresc_enable()     (PR_PRPC &= (uint8_t)~(PR_HIRES_bm))
1827:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresc_disable()    (PR_PRPC |= (uint8_t)PR_HIRES_bm)
1828:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresd_enable()     (PR_PRPD &= (uint8_t)~(PR_HIRES_bm))
1829:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresd_disable()    (PR_PRPD |= (uint8_t)PR_HIRES_bm)
1830:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hirese_enable()     (PR_PRPE &= (uint8_t)~(PR_HIRES_bm))
1831:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hirese_disable()    (PR_PRPE |= (uint8_t)PR_HIRES_bm)
1832:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresf_enable()     (PR_PRPF &= (uint8_t)~(PR_HIRES_bm))
1833:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hiresf_disable()    (PR_PRPF |= (uint8_t)PR_HIRES_bm)
1834:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1835:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC1_bm))
1836:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1c_disable()    (PR_PRPC |= (uint8_t)PR_TC1_bm)
1837:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1d_enable()     (PR_PRPD &= (uint8_t)~(PR_TC1_bm))
1838:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1d_disable()    (PR_PRPD |= (uint8_t)PR_TC1_bm)
1839:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1e_enable()     (PR_PRPE &= (uint8_t)~(PR_TC1_bm))
1840:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1e_disable()    (PR_PRPE |= (uint8_t)PR_TC1_bm)
1841:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1f_enable()     (PR_PRPF &= (uint8_t)~(PR_TC1_bm))
1842:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc1f_disable()    (PR_PRPF |= (uint8_t)PR_TC1_bm)
1843:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1844:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0c_enable()  (PR_PRPC &= (uint8_t)~(PR_TC0_bm))
1845:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0c_disable() (PR_PRPC |= (uint8_t)PR_TC0_bm)
1846:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0d_enable()  (PR_PRPD &= (uint8_t)~(PR_TC0_bm))
1847:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0d_disable() (PR_PRPD |= (uint8_t)PR_TC0_bm)
1848:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0e_enable()  (PR_PRPE &= (uint8_t)~(PR_TC0_bm))
1849:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0e_disable() (PR_PRPE |= (uint8_t)PR_TC0_bm)
1850:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0f_enable()  (PR_PRPF &= (uint8_t)~(PR_TC0_bm))
1851:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tc0f_disable() (PR_PRPF |= (uint8_t)PR_TC0_bm)
1852:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1853:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
1854:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do { \
1855:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRGEN &= (uint8_t)~(PR_CTM_bm|PR_EBI_bm|PR_AES_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
1856:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPA &= (uint8_t)~(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1857:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPB &= (uint8_t)~(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1858:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPC &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1859:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPD &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1860:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPE &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1861:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPF &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1862:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     } while(0)
1863:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1864:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
1865:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do { \
1866:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRGEN |= (uint8_t)(PR_CTM_bm|PR_EBI_bm|PR_AES_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
1867:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPA |= (uint8_t)(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1868:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPB |= (uint8_t)(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1869:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1870:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPD |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1871:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPE |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1872:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PR_PRPF |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1873:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     } while(0)
1874:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1875:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega640__) \
1876:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega1280__) \
1877:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega1281__) \
1878:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega2560__) \
1879:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega2561__) 
1880:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1881:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
1882:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
1883:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1884:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
1885:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
1886:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1887:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
1888:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
1889:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1890:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
1891:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
1892:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1893:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
1894:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
1895:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1896:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
1897:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
1898:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1899:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
1900:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
1901:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1902:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer4_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM4))
1903:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer4_disable()  (PRR1 |= (uint8_t)(1 << PRTIM4))
1904:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1905:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer5_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM5))
1906:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer5_disable()  (PRR1 |= (uint8_t)(1 << PRTIM5))
1907:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1908:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
1909:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
1910:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1911:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
1912:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
1913:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1914:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart2_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART2))
1915:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart2_disable()  (PRR1 |= (uint8_t)(1 << PRUSART2))
1916:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1917:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart3_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART3))
1918:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart3_disable()  (PRR1 |= (uint8_t)(1 << PRUSART3))
1919:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1920:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
1921:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
1922:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRU
1923:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTIM5)|(1<<PRUSART1)|(1<<PRUSART2)|
1924:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
1925:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1926:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
1927:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
1928:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRUS
1929:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTIM5)|(1<<PRUSART1)|(1<<PRUSART2)|(
1930:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
1931:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1932:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1933:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega128RFA1__)
1934:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1935:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
1936:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
1937:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1938:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
1939:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
1940:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1941:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
1942:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
1943:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1944:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
1945:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
1946:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1947:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
1948:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
1949:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1950:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
1951:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
1952:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1953:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
1954:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
1955:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1956:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer4_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM4))
1957:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer4_disable()  (PRR1 |= (uint8_t)(1 << PRTIM4))
1958:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1959:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer5_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM5))
1960:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer5_disable()  (PRR1 |= (uint8_t)(1 << PRTIM5))
1961:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1962:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
1963:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
1964:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1965:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
1966:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
1967:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1968:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
1969:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
1970:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRU
1971:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTIM5)|(1<<PRUSART1)); \
1972:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
1973:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1974:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
1975:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
1976:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRUS
1977:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTIM5)|(1<<PRUSART1)); \
1978:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
1979:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1980:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega256RFR2__) \
1981:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega128RFR2__) \
1982:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega64RFR2__) \
1983:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega256RFA2__) \
1984:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega128RFA2__) \
1985:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega64RFA2__) 
1986:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1987:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()           (PRR0 &= (uint8_t)~(1 << PRADC))
1988:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()          (PRR0 |= (uint8_t)(1 << PRADC))
1989:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1990:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()        (PRR0 &= (uint8_t)~(1 << PRUSART0))
1991:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()       (PRR0 |= (uint8_t)(1 << PRUSART0))
1992:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1993:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()           (PRR0 &= (uint8_t)~(1 << PRSPI))
1994:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()          (PRR0 |= (uint8_t)(1 << PRSPI))
1995:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1996:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()        (PRR0 &= (uint8_t)~(1 << PRTIM1))
1997:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()       (PRR0 |= (uint8_t)(1 << PRTIM1))
1998:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
1999:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_pga_enable()           (PRR0 &= (uint8_t)~(1 << PRPGA))
2000:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_pga_disable()          (PRR0 |= (uint8_t)(1 << PRPGA))
2001:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2002:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()        (PRR0 &= (uint8_t)~(1 << PRTIM0))
2003:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()       (PRR0 |= (uint8_t)(1 << PRTIM0))
2004:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2005:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()        (PRR0 &= (uint8_t)~(1 << PRTIM2))
2006:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()       (PRR0 |= (uint8_t)(1 << PRTIM2))
2007:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2008:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()           (PRR0 &= (uint8_t)~(1 << PRTWI))
2009:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()          (PRR0 |= (uint8_t)(1 << PRTWI))
2010:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2011:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_enable()        (PRR1 &= (uint8_t)~(1 << PRUSART1))
2012:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_disable()       (PRR1 |= (uint8_t)(1 << PRUSART1))
2013:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2014:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_enable()        (PRR1 &= (uint8_t)~(1 << PRTIM3))
2015:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_disable()       (PRR1 |= (uint8_t)(1 << PRTIM3))
2016:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2017:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer4_enable()        (PRR1 &= (uint8_t)~(1 << PRTIM4))
2018:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer4_disable()       (PRR1 |= (uint8_t)(1 << PRTIM4))
2019:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2020:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer5_enable()        (PRR1 &= (uint8_t)~(1 << PRTIM5))
2021:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer5_disable()       (PRR1 |= (uint8_t)(1 << PRTIM5))
2022:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2023:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_transceiver_enable()   (PRR1 &= (uint8_t)~(1 << PRTRX24))
2024:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_transceiver_disable()  (PRR1 |= (uint8_t)(1 << PRTRX24))
2025:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2026:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_ram0_enable()          (PRR2 &= (uint8_t)~(1 << PRRAM0))
2027:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_ram0_disable()         (PRR2 |= (uint8_t)(1 << PRRAM0))
2028:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2029:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_ram1_enable()          (PRR2 &= (uint8_t)~(1 << PRRAM1))
2030:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_ram1_disable()         (PRR2 |= (uint8_t)(1 << PRRAM1))
2031:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2032:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_ram2_enable()          (PRR2 &= (uint8_t)~(1 << PRRAM2))
2033:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_ram2_disable()         (PRR2 |= (uint8_t)(1 << PRRAM2))
2034:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2035:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_ram3_enable()          (PRR2 &= (uint8_t)~(1 << PRRAM3))
2036:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_ram3_disable()         (PRR2 |= (uint8_t)(1 << PRRAM3))
2037:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2038:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
2039:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2040:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRU
2041:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~((1<<PRUSART1)|(1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTRX24)); \
2042:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR2 &= (uint8_t)~((1<<PRRAM0)|(1<<PRRAM1)|(1<<PRRAM2)|(1<<PRRAM3)); \
2043:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2044:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2045:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
2046:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2047:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRUS
2048:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)((1<<PRUSART1)|(1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTRX24)); \
2049:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR2 |= (uint8_t)((1<<PRRAM0)|(1<<PRRAM1)|(1<<PRRAM2)|(1<<PRRAM3)); \
2050:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2051:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2052:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_AT90USB646__) \
2053:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90USB647__) \
2054:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90USB1286__) \
2055:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90USB1287__)
2056:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2057:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
2058:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
2059:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2060:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
2061:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
2062:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2063:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
2064:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
2065:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2066:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2067:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2068:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2069:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2070:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2071:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2072:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
2073:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
2074:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2075:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
2076:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
2077:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2078:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
2079:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
2080:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2081:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
2082:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
2083:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2084:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
2085:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2086:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)); \
2087:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
2088:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2089:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2090:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
2091:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2092:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)); \
2093:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
2094:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2095:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2096:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2097:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega32U4__) \
2098:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega16U4__)
2099:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2100:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2101:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
2102:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
2103:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2104:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
2105:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
2106:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2107:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
2108:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
2109:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2110:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
2111:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
2112:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2113:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2114:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2115:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2116:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2117:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2118:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2119:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
2120:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
2121:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2122:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
2123:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
2124:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2125:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
2126:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
2127:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2128:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
2129:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
2130:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2131:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
2132:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2133:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRUSART0)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<P
2134:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
2135:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2136:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2137:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
2138:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2139:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRUSART0)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PR
2140:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
2141:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2142:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2143:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2144:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega32U6__)
2145:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2146:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2147:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
2148:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
2149:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2150:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
2151:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
2152:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2153:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
2154:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
2155:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2156:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2157:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2158:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2159:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2160:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2161:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2162:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
2163:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
2164:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2165:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
2166:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
2167:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2168:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
2169:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
2170:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2171:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
2172:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
2173:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2174:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
2175:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2176:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)); \
2177:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
2178:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2179:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2180:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
2181:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2182:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)); \
2183:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
2184:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2185:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2186:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2187:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_AT90PWM1__)
2188:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2189:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2190:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2191:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2192:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
2193:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
2194:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2195:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
2196:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
2197:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2198:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2199:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2200:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2201:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /* Power Stage Controller 0 */
2202:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_psc0_enable()     (PRR &= (uint8_t)~(1 << PRPSC0))
2203:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_psc0_disable()    (PRR |= (uint8_t)(1 << PRPSC0))
2204:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2205:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /* Power Stage Controller 1 */
2206:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_psc1_enable()     (PRR &= (uint8_t)~(1 << PRPSC1))
2207:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_psc1_disable()    (PRR |= (uint8_t)(1 << PRPSC1))
2208:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2209:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /* Power Stage Controller 2 */
2210:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_psc2_enable()     (PRR &= (uint8_t)~(1 << PRPSC2))
2211:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_psc2_disable()    (PRR |= (uint8_t)(1 << PRPSC2))
2212:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2213:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)|(1
2214:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<
2215:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2216:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2217:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_AT90PWM2__) \
2218:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM2B__) \
2219:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM3__) \
2220:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM3B__) \
2221:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM216__) \
2222:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM316__)
2223:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2224:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2225:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2226:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2227:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
2228:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
2229:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2230:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_AT90PWM216__) || defined(__AVR_AT90PWM316__)
2231:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2232:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart_enable()    (PRR &= (uint8_t)~(1 << PRUSART))
2233:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart_disable()   (PRR |= (uint8_t)(1 << PRUSART))
2234:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2235:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #else
2236:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2237:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart_enable()    (PRR &= (uint8_t)~(1 << PRUSART0))
2238:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart_disable()   (PRR |= (uint8_t)(1 << PRUSART0))
2239:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2240:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #endif
2241:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2242:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
2243:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
2244:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2245:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2246:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2247:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2248:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /* Power Stage Controller 0 */
2249:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_psc0_enable()     (PRR &= (uint8_t)~(1 << PRPSC0))
2250:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_psc0_disable()    (PRR |= (uint8_t)(1 << PRPSC0))
2251:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2252:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /* Power Stage Controller 1 */
2253:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_psc1_enable()     (PRR &= (uint8_t)~(1 << PRPSC1))
2254:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_psc1_disable()    (PRR |= (uint8_t)(1 << PRPSC1))
2255:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2256:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /* Power Stage Controller 2 */
2257:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_psc2_enable()     (PRR &= (uint8_t)~(1 << PRPSC2))
2258:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_psc2_disable()    (PRR |= (uint8_t)(1 << PRPSC2))
2259:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2260:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_AT90PWM216__) || defined(__AVR_AT90PWM316__)
2261:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2262:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART)|(1<<PRTIM0)|(
2263:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART)|(1<<PRTIM0)|(1
2264:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2265:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #else
2266:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2267:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|
2268:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|(
2269:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2270:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #endif
2271:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2272:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2273:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_AT90PWM81__) \
2274:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM161__)
2275:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2276:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2277:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2278:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2279:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
2280:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
2281:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2282:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2283:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2284:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2285:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /* Reduced Power Stage Controller */
2286:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_pscr_enable()     (PRR &= (uint8_t)~(1 << PRPSCR))
2287:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_pscr_disable()    (PRR |= (uint8_t)(1 << PRPSCR))
2288:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2289:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /* Power Stage Controller 2 */
2290:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_psc2_enable()     (PRR &= (uint8_t)~(1 << PRPSC2))
2291:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_psc2_disable()    (PRR |= (uint8_t)(1 << PRPSC2))
2292:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2293:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTIM1)|(1<<PRPSCR)|(1
2294:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTIM1)|(1<<PRPSCR)|(1<
2295:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2296:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2297:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega165__) \
2298:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega165A__) \
2299:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega165P__) \
2300:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega165PA__) \
2301:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega325__) \
2302:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega325A__) \
2303:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega325P__) \
2304:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega325PA__) \
2305:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3250__) \
2306:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3250A__) \
2307:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3250P__) \
2308:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3250PA__) \
2309:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega645__) \
2310:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega645A__) \
2311:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega645P__) \
2312:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6450__) \
2313:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6450A__) \
2314:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6450P__)
2315:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2316:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2317:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2318:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2319:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
2320:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
2321:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2322:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()   (PRR &= (uint8_t)~(1 << PRUSART0))
2323:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()  (PRR |= (uint8_t)(1 << PRUSART0))
2324:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2325:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2326:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2327:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2328:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM1))
2329:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM1)))
2330:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2331:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2332:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega169__) \
2333:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega169A__) \
2334:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega169P__) \
2335:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega169PA__) \
2336:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega329__) \
2337:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega329A__) \
2338:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega329P__) \
2339:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega329PA__) \
2340:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3290__) \
2341:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3290A__) \
2342:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3290P__) \
2343:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3290PA__) \
2344:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega649__) \
2345:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega649A__) \
2346:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega649P__) \
2347:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6490__) \
2348:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6490A__) \
2349:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6490P__)
2350:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2351:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2352:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2353:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2354:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
2355:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
2356:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2357:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()   (PRR &= (uint8_t)~(1 << PRUSART0))
2358:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()  (PRR |= (uint8_t)(1 << PRUSART0))
2359:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2360:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2361:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2362:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2363:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_lcd_enable()      (PRR &= (uint8_t)~(1 << PRLCD))
2364:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_lcd_disable()     (PRR |= (uint8_t)(1 << PRLCD))
2365:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2366:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM1)|
2367:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM1)|(
2368:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2369:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2370:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega164A__) \
2371:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega164P__) \
2372:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega324A__) \
2373:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega324P__) \
2374:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega324PA__) \
2375:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega644P__) \
2376:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega644A__) \
2377:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega644PA__)
2378:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2379:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
2380:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
2381:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2382:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
2383:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
2384:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2385:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
2386:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
2387:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2388:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART1))
2389:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_disable()  (PRR0 |= (uint8_t)(1 << PRUSART1))
2390:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2391:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2392:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2393:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2394:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2395:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2396:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2397:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
2398:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
2399:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2400:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
2401:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
2402:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2403:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRUSART
2404:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRUSART1
2405:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2406:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2407:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega644__) \
2408:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega164PA__)
2409:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2410:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
2411:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
2412:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2413:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
2414:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
2415:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2416:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
2417:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
2418:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2419:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2420:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2421:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2422:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2423:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2424:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2425:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
2426:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
2427:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2428:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
2429:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
2430:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2431:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)
2432:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|
2433:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2434:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2435:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega406__)
2436:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2437:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
2438:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
2439:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2440:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2441:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2442:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2443:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2444:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2445:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2446:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /* Voltage ADC */
2447:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_vadc_enable()     (PRR0 &= (uint8_t)~(1 << PRVADC))
2448:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_vadc_disable()    (PRR0 |= (uint8_t)(1 << PRVADC))
2449:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2450:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR0 &= (uint8_t)~((1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRVADC))
2451:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR0 |= (uint8_t)((1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRVADC)))
2452:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2453:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2454:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega48__) \
2455:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega48A__) \
2456:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega48PA__) \
2457:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega48P__) \
2458:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega88__) \
2459:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega88A__) \
2460:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega88P__) \
2461:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega88PA__) \
2462:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega168__) \
2463:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega168A__) \
2464:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega168P__) \
2465:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega168PA__) \
2466:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega328__) \
2467:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega328P__) \
2468:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny828__) \
2469:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny841__)
2470:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2471:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2472:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2473:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2474:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
2475:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
2476:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2477:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()   (PRR &= (uint8_t)~(1 << PRUSART0))
2478:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()  (PRR |= (uint8_t)(1 << PRUSART0))
2479:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2480:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_ATtiny841__)
2481:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2482:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_enable()   (PRR &= (uint8_t)~(1 << PRUSART1))
2483:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_disable()  (PRR |= (uint8_t)(1 << PRUSART1))
2484:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2485:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #endif
2486:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2487:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
2488:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
2489:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2490:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2491:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2492:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2493:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #if !defined(__AVR_ATtiny828__)
2494:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2495:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()   (PRR &= (uint8_t)~(1 << PRTIM2))
2496:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()  (PRR |= (uint8_t)(1 << PRTIM2))
2497:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2498:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #endif
2499:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2500:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR &= (uint8_t)~(1 << PRTWI))
2501:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR |= (uint8_t)(1 << PRTWI))
2502:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2503:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_ATtiny828__)
2504:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2505:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|
2506:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|(
2507:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2508:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATtiny841__)
2509:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2510:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()	(PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRUSART1)|(1<
2511:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()      (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRUSART1
2512:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2513:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #else
2514:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2515:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|
2516:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|(
2517:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2518:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #endif
2519:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2520:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATtiny48__) \
2521:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny88__)
2522:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2523:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2524:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2525:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2526:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
2527:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
2528:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2529:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
2530:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
2531:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2532:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2533:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2534:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2535:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR &= (uint8_t)~(1 << PRTWI))
2536:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR |= (uint8_t)(1 << PRTWI))
2537:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2538:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)|(1
2539:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<
2540:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2541:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****   
2542:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATtiny24__) \
2543:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny24A__) \
2544:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny44__) \
2545:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny44A__) \
2546:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny84__) \
2547:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny84A__) \
2548:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny25__) \
2549:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny45__) \
2550:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny85__) \
2551:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny261__) \
2552:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny261A__) \
2553:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny461__) \
2554:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny461A__) \
2555:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny861__) \
2556:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny861A__) \
2557:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny43U__)
2558:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2559:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2560:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2561:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2562:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
2563:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
2564:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2565:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2566:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2567:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2568:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /* Universal Serial Interface */
2569:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usi_enable()      (PRR &= (uint8_t)~(1 << PRUSI))
2570:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usi_disable()     (PRR |= (uint8_t)(1 << PRUSI))
2571:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2572:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRUSI)))
2573:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRUSI)))
2574:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2575:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega1284__)
2576:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2577:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
2578:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
2579:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2580:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
2581:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
2582:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2583:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
2584:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
2585:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2586:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2587:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2588:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2589:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2590:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2591:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2592:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
2593:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
2594:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2595:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
2596:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
2597:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2598:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
2599:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
2600:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2601:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
2602:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2603:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRU
2604:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~(1<<PRTIM3); \
2605:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2606:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2607:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
2608:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2609:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRUS
2610:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)(1<<PRTIM3); \
2611:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2612:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2613:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega1284P__)
2614:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2615:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2616:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
2617:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
2618:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2619:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
2620:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
2621:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2622:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
2623:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
2624:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2625:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2626:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2627:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2628:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2629:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2630:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2631:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
2632:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
2633:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2634:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
2635:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
2636:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2637:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
2638:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
2639:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2640:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART1))
2641:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_disable()  (PRR0 |= (uint8_t)(1 << PRUSART1))
2642:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2643:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
2644:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2645:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRU
2646:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~(1<<PRTIM3); \
2647:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2648:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2649:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
2650:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2651:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRUS
2652:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)(1<<PRTIM3); \
2653:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2654:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2655:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2656:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega32HVB__) \
2657:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega32HVBREVB__) \
2658:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega16HVB__) \
2659:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega16HVBREVB__) \
2660:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega26HVG__) \
2661:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega48HVF__)
2662:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2663:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2664:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
2665:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
2666:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2667:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2668:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2669:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2670:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2671:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2672:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2673:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /* Voltage ADC */
2674:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_vadc_enable()     (PRR0 &= (uint8_t)~(1 << PRVADC))
2675:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_vadc_disable()    (PRR0 |= (uint8_t)(1 << PRVADC))
2676:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2677:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
2678:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
2679:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2680:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_vrm_enable()      (PRR0 &= (uint8_t)~(1 << PRVRM))
2681:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_vrm_disable()     (PRR0 |= (uint8_t)(1 << PRVRM))
2682:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2683:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR0 &= (uint8_t)~((1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRVADC)|
2684:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR0 |= (uint8_t)((1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRVADC)|(
2685:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2686:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2687:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined (__AVR_ATA5790__) \
2688:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined (__AVR_ATA5790N__) \
2689:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined (__AVR_ATA5795__)
2690:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2691:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** // Enable the voltage monitor 
2692:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_vmonitor_enable()          (PRR0 &= (uint8_t)~(1 << PRVM))
2693:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_vmonitor_disable()         (PRR0 |= (uint8_t)(1 << PRVM))
2694:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2695:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_irdriver_enable()          (PRR0 &= (uint8_t)~(1 << PRDS))
2696:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_irdriver_disable()         (PRR0 |= (uint8_t)(1 << PRDS))
2697:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2698:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_crypto_enable()            (PRR0 &= (uint8_t)~(1 << PRCU))
2699:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_crypto_disable()           (PRR0 |= (uint8_t)(1 << PRCU))
2700:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2701:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timermodulator_enable()    (PRR0 &= (uint8_t)~(1 << PRTM))
2702:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timermodulator_disable()   (PRR0 |= (uint8_t)(1 << PRTM))
2703:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2704:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()            (PRR0 &= (uint8_t)~(1 << PRT1))
2705:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()           (PRR0 |= (uint8_t)(1 << PRT1))
2706:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2707:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()            (PRR0 &= (uint8_t)~(1 << PRT2))
2708:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()           (PRR0 |= (uint8_t)(1 << PRT2))
2709:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2710:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_enable()            (PRR0 &= (uint8_t)~(1 << PRT3))
2711:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_disable()           (PRR0 |= (uint8_t)(1 << PRT3))
2712:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2713:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()               (PRR1 &= (uint8_t)~(1 << PRSPI))
2714:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()              (PRR1 |= (uint8_t)(1 << PRSPI))
2715:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2716:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_cinterface_enable()        (PRR1 &= (uint8_t)~(1 << PRCI))
2717:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_cinterface_disable()       (PRR1 |= (uint8_t)(1 << PRCI))
2718:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2719:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_ATA5790__) \
2720:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATA5790N__)
2721:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2722:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_lfreceiver_enable()        (PRR0 &= (uint8_t)~(1 << PRLFR))            
2723:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_lfreceiver_disable()       (PRR0 |= (uint8_t)(1 << PRLFR))            
2724:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2725:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
2726:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2727:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRVM)|(1<<PRDS)|(1<<PRCU)|(1<<PRTM)|(1<<PRT3)|(1<<PRT2)|(1<<PRT1)|(1<<PR
2728:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~((1<<PRSPI)|(1<<PRCI)); \
2729:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2730:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2731:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
2732:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2733:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRVM)|(1<<PRDS)|(1<<PRCU)|(1<<PRTM)|(1<<PRT3)|(1<<PRT2)|(1<<PRT1)|(1<<PRL
2734:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)((1<<PRSPI)|(1<<PRCI)); \
2735:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2736:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2737:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATA5795__)
2738:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2739:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
2740:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2741:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRVM)|(1<<PRDS)|(1<<PRCU)|(1<<PRTM)|(1<<PRT3)|(1<<PRT2)|(1<<PRT1)); \
2742:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~((1<<PRSPI)|(1<<PRCI)); \
2743:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2744:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2745:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
2746:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2747:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRVM)|(1<<PRDS)|(1<<PRCU)|(1<<PRTM)|(1<<PRT3)|(1<<PRT2)|(1<<PRT1)); \
2748:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)((1<<PRSPI)|(1<<PRCI)); \
2749:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2750:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2751:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #endif
2752:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2753:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATA5831__)
2754:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2755:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_clock_output_enable()     (PRR0 &= (uint8_t)~(1 << PRCO))
2756:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_clock_output_disable()    (PRR0 |= (uint8_t)(1 << PRCO))
2757:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2758:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_voltage_monitor_enable()  (PRR0 &= (uint8_t)~(1 << PRVM))
2759:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_voltage_monitor_disable() (PRR0 |= (uint8_t)(1 << PRVM))
2760:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2761:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_crc_enable()              (PRR0 &= (uint8_t)~(1 << PRCRC))
2762:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_crc_disable()             (PRR0 |= (uint8_t)(1 << PRCRC))
2763:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2764:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_transmit_dsp_control_enable()     (PRR0 &= (uint8_t)~(1 << PRTXDC))
2765:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_transmit_dsp_control_disable()    (PRR0 |= (uint8_t)(1 << PRTXDC))
2766:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2767:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_receive_dsp_control_enable()      (PRR0 &= (uint8_t)~(1 << PRRXDC))
2768:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_receive_dsp_control_disable()     (PRR0 |= (uint8_t)(1 << PRRXDC))
2769:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2770:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()              (PRR0 &= (uint8_t)~(1 << PRSPI))
2771:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()             (PRR0 |= (uint8_t)(1 << PRSPI))
2772:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2773:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()           (PRR1 &= (uint8_t)~(1 << PRT1))
2774:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()          (PRR1 |= (uint8_t)(1 << PRT1))
2775:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2776:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()           (PRR1 &= (uint8_t)~(1 << PRT2))
2777:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()          (PRR1 |= (uint8_t)(1 << PRT2))
2778:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2779:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_enable()           (PRR1 &= (uint8_t)~(1 << PRT3))
2780:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer3_disable()          (PRR1 |= (uint8_t)(1 << PRT3))
2781:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2782:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer4_enable()           (PRR1 &= (uint8_t)~(1 << PRT4))
2783:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer4_disable()          (PRR1 |= (uint8_t)(1 << PRT4))
2784:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2785:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer5_enable()           (PRR1 &= (uint8_t)~(1 << PRT5))
2786:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer5_disable()          (PRR1 |= (uint8_t)(1 << PRT5))
2787:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2788:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_sequencer_state_machine_enable()  (PRR2 &= (uint8_t)~(1 << PRSSM))
2789:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_sequencer_state_machine_disable() (PRR2 |= (uint8_t)(1 << PRSSM))
2790:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2791:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tx_modulator_enable()     (PRR2 &= (uint8_t)~(1 << PRTM))
2792:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_tx_modulator_disable()    (PRR2 |= (uint8_t)(1 << PRTM))
2793:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2794:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rssi_buffer_enable()      (PRR2 &= (uint8_t)~(1 << PRRS))
2795:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rssi_buffer_disable()     (PRR2 |= (uint8_t)(1 << PRRS))
2796:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2797:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_id_scan_enable()          (PRR2 &= (uint8_t)~(1 << PRIDS))
2798:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_id_scan_disable()         (PRR2 |= (uint8_t)(1 << PRIDS))
2799:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2800:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_data_fifo_enable()        (PRR2 &= (uint8_t)~(1 << PRDF))
2801:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_data_fifo_disable()       (PRR2 |= (uint8_t)(1 << PRDF))
2802:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2803:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_preamble_rssi_fifo_enable()       (PRR2 &= (uint8_t)~(1 << PRSF))
2804:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_preamble_rssi_fifo_disable()      (PRR2 |= (uint8_t)(1 << PRSF))
2805:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2806:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rx_buffer_A_enable()      (PRR2 &= (uint8_t)~(1 << PRXA))
2807:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rx_buffer_A_disable()     (PRR2 |= (uint8_t)(1 << PRXA))
2808:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2809:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rx_buffer_B_enable()      (PRR2 &= (uint8_t)~(1 << PRXB))
2810:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_rx_buffer_B_disable()     (PRR2 |= (uint8_t)(1 << PRXB))
2811:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2812:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
2813:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2814:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1 << PRCO) | (1 << PRVM) | (1 << PRCRC) | (1 << PRTXDC) | (1 << PRRXDC) | (
2815:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~((1 << PRT1) | (1 << PRT2) | (1 << PRT3) | (1 << PRT4) | (1 << PRT5)); \
2816:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR2 &= (uint8_t)~((1 << PRSSM) | (1 << PRTM) | (1 << PRRS) | (1 << PRIDS) | (1 << PRDF) | (1 <
2817:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2818:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2819:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
2820:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2821:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1 << PRCO) | (1 << PRVM) | (1 << PRCRC) | (1 << PRTXDC) | (1 << PRRXDC) | (1
2822:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)((1 << PRT1) | (1 << PRT2) | (1 << PRT3) | (1 << PRT4) | (1 << PRT5)); \
2823:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR2 |= (uint8_t)((1 << PRSSM) | (1 << PRTM) | (1 << PRRS) | (1 << PRIDS) | (1 << PRDF) | (1 <<
2824:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2825:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2826:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega64HVE__)
2827:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2828:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2829:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_lin_enable()      (PRR0 &= (uint8_t)~(1 << PRLIN))
2830:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_lin_disable()     (PRR0 |= (uint8_t)(1 << PRLIN))
2831:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2832:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2833:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2834:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2835:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2836:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2837:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2838:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
2839:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
2840:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2841:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR0 &= (uint8_t)~((1<<PRLIN)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRSPI)))
2842:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR0 |= (uint8_t)((1<<PRLIN)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRSPI)))
2843:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2844:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega16M1__) \
2845:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega32C1__) \
2846:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega32M1__) \
2847:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega64C1__) \
2848:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega64M1__)
2849:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2850:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2851:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2852:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2853:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_lin_enable()      (PRR &= (uint8_t)~(1 << PRLIN))
2854:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_lin_disable()     (PRR |= (uint8_t)(1 << PRLIN))
2855:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2856:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
2857:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
2858:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2859:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
2860:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
2861:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2862:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2863:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2864:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2865:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_psc_enable()      (PRR &= (uint8_t)~(1 << PRPSC))
2866:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_psc_disable()     (PRR |= (uint8_t)(1 << PRPSC))
2867:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2868:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_can_enable()      (PRR &= (uint8_t)~(1 << PRCAN))
2869:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_can_disable()     (PRR |= (uint8_t)(1 << PRCAN))
2870:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2871:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRLIN)|(1<<PRSPI)|(1<<PRTIM0)|(1<
2872:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRLIN)|(1<<PRSPI)|(1<<PRTIM0)|(1<<
2873:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2874:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2875:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATtiny167__) \
2876:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny87__) \
2877:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATA5505__) \
2878:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATA5272__)
2879:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2880:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2881:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2882:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2883:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usi_enable()      (PRR &= (uint8_t)~(1 << PRUSI))
2884:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usi_disable()     (PRR |= (uint8_t)(1 << PRUSI))
2885:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2886:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
2887:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
2888:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2889:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2890:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2891:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2892:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
2893:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
2894:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2895:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_lin_enable()      (PRR &= (uint8_t)~(1 << PRLIN))
2896:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_lin_disable()     (PRR |= (uint8_t)(1 << PRLIN))
2897:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2898:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRUSI)|(1<<PRTIM0)|(1<<PRTIM1)|(1
2899:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRUSI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<
2900:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2901:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2902:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATtiny1634__)
2903:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2904:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2905:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2906:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2907:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()      (PRR &= (uint8_t)~(1 << PRUSART0))
2908:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()     (PRR |= (uint8_t)(1 << PRUSART0))
2909:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2910:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_enable()      (PRR &= (uint8_t)~(1 << PRUSART1))
2911:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_disable()     (PRR |= (uint8_t)(1 << PRUSART1))
2912:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2913:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usi_enable()      (PRR &= (uint8_t)~(1 << PRUSI))
2914:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usi_disable()     (PRR |= (uint8_t)(1 << PRUSI))
2915:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2916:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
2917:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
2918:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2919:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2920:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2921:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2922:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR &= (uint8_t)~(1 << PRTWI))
2923:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR |= (uint8_t)(1 << PRTWI))
2924:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2925:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1 << PRTWI)|(1 << PRUSI)|(1 << PRTIM0)|(1 << PR
2926:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1 << PRTWI)|(1 << PRUSI)|(1 << PRTIM0)|(1 << PRT
2927:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2928:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2929:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_AT90USB82__) \
2930:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90USB162__) \
2931:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega8U2__) \
2932:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega16U2__) \
2933:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega32U2__)
2934:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2935:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
2936:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
2937:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2938:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2939:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2940:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2941:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2942:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2943:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2944:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
2945:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
2946:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2947:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
2948:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
2949:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2950:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
2951:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2952:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)); \
2953:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~((1<<PRUSB)|(1<<PRUSART1)); \
2954:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2955:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2956:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
2957:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
2958:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)); \
2959:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)((1<<PRUSB)|(1<<PRUSART1)); \
2960:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
2961:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2962:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2963:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_AT90SCR100__)
2964:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2965:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
2966:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
2967:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2968:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
2969:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
2970:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2971:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2972:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2973:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2974:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2975:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2976:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2977:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
2978:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
2979:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2980:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
2981:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
2982:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2983:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usbh_enable()     (PRR1 &= (uint8_t)~(1 << PRUSBH))
2984:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usbh_disable()    (PRR1 |= (uint8_t)(1 << PRUSBH))
2985:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2986:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
2987:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
2988:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2989:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hsspi_enable()    (PRR1 &= (uint8_t)~(1 << PRHSSPI))
2990:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_hsspi_disable()   (PRR1 |= (uint8_t)(1 << PRHSSPI))
2991:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2992:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_sci_enable()      (PRR1 &= (uint8_t)~(1 << PRSCI))
2993:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_sci_disable()     (PRR1 |= (uint8_t)(1 << PRSCI))
2994:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2995:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aes_enable()      (PRR1 &= (uint8_t)~(1 << PRAES))
2996:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_aes_disable()     (PRR1 |= (uint8_t)(1 << PRAES))
2997:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
2998:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_kb_enable()       (PRR1 &= (uint8_t)~(1 << PRKB))
2999:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_kb_disable()      (PRR1 |= (uint8_t)(1 << PRKB))
3000:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3001:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
3002:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
3003:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRUSART0)|(1<<PRSPI)|(1<<PRTIM1)|(1<<PRTIM0)|(1<<PRTIM2)|(1<<PRTWI)); \
3004:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~((1<<PRUSBH)|(1<<PRUSB)|(1<<PRHSSPI)|(1<<PRSCI)|(1<<PRAES)|(1<<PRKB)); \
3005:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
3006:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3007:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
3008:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** do{ \
3009:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRUSART0)|(1<<PRSPI)|(1<<PRTIM1)|(1<<PRTIM0)|(1<<PRTIM2)|(1<<PRTWI)); \
3010:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)((1<<PRUSBH)|(1<<PRUSB)|(1<<PRHSSPI)|(1<<PRSCI)|(1<<PRAES)|(1<<PRKB)); \
3011:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** }while(0)
3012:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3013:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3014:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATtiny4__) \
3015:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny5__) \
3016:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny9__) \
3017:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny10__) \
3018:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny13A__) \
3019:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3020:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()   (PRR &= (uint8_t)~(1 << PRADC))
3021:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()  (PRR |= (uint8_t)(1 << PRADC))
3022:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3023:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
3024:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
3025:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3026:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRTIM0)))
3027:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRTIM0)))
3028:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3029:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3030:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATtiny20__) \
3031:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny40__)
3032:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3033:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()   (PRR &= (uint8_t)~(1 << PRADC))
3034:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()  (PRR |= (uint8_t)(1 << PRADC))
3035:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3036:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
3037:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
3038:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3039:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
3040:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
3041:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3042:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()   (PRR &= (uint8_t)~(1 << PRSPI))
3043:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()  (PRR |= (uint8_t)(1 << PRSPI))
3044:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3045:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()   (PRR &= (uint8_t)~(1 << PRTWI))
3046:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()  (PRR |= (uint8_t)(1 << PRTWI))
3047:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3048:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRSPI)|(1
3049:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRSPI)|(1<
3050:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3051:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #endif
3052:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3053:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3054:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_AT90CAN32__) \
3055:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90CAN64__) \
3056:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90CAN128__) \
3057:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM1__) \
3058:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM2__) \
3059:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM2B__) \
3060:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM3__) \
3061:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM3B__) \
3062:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM81__) \
3063:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM161__) \
3064:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM216__) \
3065:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM316__) \
3066:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90SCR100__) \
3067:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90USB646__) \
3068:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90USB647__) \
3069:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90USB82__) \
3070:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90USB1286__) \
3071:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90USB1287__) \
3072:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90USB162__) \
3073:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATA5505__) \
3074:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATA5272__) \
3075:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega1280__) \
3076:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega1281__) \
3077:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega1284__) \
3078:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega128RFA1__) \
3079:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega128RFA2__) \
3080:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega128RFR2__) \
3081:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega1284P__) \
3082:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega162__) \
3083:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega164A__) \
3084:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega164P__) \
3085:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega164PA__) \
3086:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega165__) \
3087:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega165A__) \
3088:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega165P__) \
3089:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega165PA__) \
3090:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega168__) \
3091:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega168A__) \
3092:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega168P__) \
3093:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega168PA__) \
3094:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega169__) \
3095:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega169A__) \
3096:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega169P__) \
3097:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega169PA__) \
3098:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega16M1__) \
3099:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega16U2__) \
3100:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega324PA__) \
3101:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega16U4__) \
3102:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega2560__) \
3103:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega2561__) \
3104:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega256RFA2__) \
3105:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega256RFR2__) \
3106:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega324A__) \
3107:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega324P__) \
3108:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega325__) \
3109:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega325A__) \
3110:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega325P__) \
3111:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega325PA__) \
3112:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3250__) \
3113:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3250A__) \
3114:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3250P__) \
3115:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3250PA__) \
3116:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega328__) \
3117:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega328P__) \
3118:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega329__) \
3119:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega329A__) \
3120:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega329P__) \
3121:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega329PA__) \
3122:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3290__) \
3123:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3290A__) \
3124:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3290P__) \
3125:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3290PA__) \
3126:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega32C1__) \
3127:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega32M1__) \
3128:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega32U2__) \
3129:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega32U4__) \
3130:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega32U6__) \
3131:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega48__) \
3132:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega48A__) \
3133:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega48PA__) \
3134:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega48P__) \
3135:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega640__) \
3136:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega649P__) \
3137:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega644__) \
3138:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega644A__) \
3139:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega644P__) \
3140:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega644PA__) \
3141:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega645__) \
3142:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega645A__) \
3143:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega645P__) \
3144:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6450__) \
3145:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6450A__) \
3146:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6450P__) \
3147:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega649__) \
3148:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega649A__) \
3149:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega64M1__) \
3150:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega64C1__) \
3151:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega88A__) \
3152:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega88PA__) \
3153:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6490__) \
3154:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6490A__) \
3155:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6490P__) \
3156:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega64RFA2__) \
3157:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega64RFR2__) \
3158:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega88__) \
3159:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega88P__) \
3160:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega8U2__) \
3161:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega16U2__) \
3162:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega32U2__) \
3163:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny48__) \
3164:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny88__) \
3165:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny87__) \
3166:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny167__) \
3167:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__DOXYGEN__)
3168:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3169:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3170:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /** \addtogroup avr_power
3171:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3172:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** Some of the newer AVRs contain a System Clock Prescale Register (CLKPR) that
3173:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** allows you to decrease the system clock frequency and the power consumption
3174:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** when the need for processing power is low. Below are two macros and an
3175:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** enumerated type that can be used to interface to the Clock Prescale Register.
3176:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3177:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** \note Not all AVR devices have a Clock Prescale Register. On those devices
3178:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** without a Clock Prescale Register, these macros are not available.
3179:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** */
3180:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3181:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3182:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /** \addtogroup avr_power
3183:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** \code 
3184:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** typedef enum
3185:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** {
3186:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_1 = 0,
3187:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_2 = 1,
3188:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_4 = 2,
3189:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_8 = 3,
3190:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_16 = 4,
3191:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_32 = 5,
3192:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_64 = 6,
3193:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_128 = 7,
3194:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_256 = 8,
3195:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_1_rc = 15, // ATmega128RFA1 only
3196:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** } clock_div_t;
3197:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** \endcode
3198:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** Clock prescaler setting enumerations.
3199:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3200:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** */
3201:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** typedef enum
3202:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** {
3203:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_1 = 0,
3204:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_2 = 1,
3205:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_4 = 2,
3206:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_8 = 3,
3207:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_16 = 4,
3208:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_32 = 5,
3209:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_64 = 6,
3210:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_128 = 7,
3211:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     clock_div_256 = 8
3212:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_ATmega128RFA1__) \
3213:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega256RFA2__) \
3214:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega128RFA2__) \
3215:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega64RFA2__) \
3216:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega256RFR2__) \
3217:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega128RFR2__) \
3218:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega64RFR2__)
3219:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     , clock_div_1_rc = 15
3220:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** #endif
3221:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** } clock_div_t;
3222:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3223:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3224:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** static __inline__ void clock_prescale_set(clock_div_t) __attribute__((__always_inline__));
3225:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3226:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** /** \addtogroup avr_power
3227:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** \code clock_prescale_set(x) \endcode
3228:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3229:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** Set the clock prescaler register select bits, selecting a system clock
3230:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** division setting. This function is inlined, even if compiler
3231:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** optimizations are disabled.
3232:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** 
3233:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** The type of x is clock_div_t.
3234:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** */
3235:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** void clock_prescale_set(clock_div_t __x)
3236:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h **** {
3237:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     uint8_t __tmp = _BV(CLKPCE);
3238:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../../avr/include/avr\power.h ****     __asm__ __volatile__ (
 297               		.loc 4 3238 0
 298 0016 90E0      		ldi r25,lo8(0)
 299 0018 80E8      		ldi r24,lo8(-128)
 300               	/* #APP */
 301               	 ;  3238 "c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.6.2/../../../..
 302 001a 0FB6      		in __tmp_reg__,__SREG__
 303 001c F894      		cli
 304 001e 8093 6100 		sts 97, r24
 305 0022 9093 6100 		sts 97, r25
 306 0026 0FBE      		out __SREG__, __tmp_reg__
 307               	 ;  0 "" 2
 308               	/* #NOAPP */
 309               	.LBE117:
 310               	.LBE116:
 223:BootloaderCDC.c **** 	MCUCR = (1 << IVCE);
 311               		.loc 1 223 0
 312 0028 81E0      		ldi r24,lo8(1)
 313 002a 85BF      		out 85-32,r24
 224:BootloaderCDC.c **** 	MCUCR = (1 << IVSEL);
 314               		.loc 1 224 0
 315 002c 82E0      		ldi r24,lo8(2)
 316 002e 85BF      		out 85-32,r24
 227:BootloaderCDC.c **** 	USB_Init();
 317               		.loc 1 227 0
 318 0030 0E94 0000 		call USB_Init
 319               	/* epilogue start */
 228:BootloaderCDC.c **** }
 320               		.loc 1 228 0
 321 0034 0895      		ret
 322               		.cfi_endproc
 323               	.LFE81:
 325               		.section	.text.EVENT_USB_Device_ConfigurationChanged,"ax",@progbits
 326               	.global	EVENT_USB_Device_ConfigurationChanged
 328               	EVENT_USB_Device_ConfigurationChanged:
 329               	.LFB82:
 234:BootloaderCDC.c **** {
 330               		.loc 1 234 0
 331               		.cfi_startproc
 332               	/* prologue: function */
 333               	/* frame size = 0 */
 334               	/* stack size = 0 */
 335               	.L__stack_usage = 0
 336               	.LVL11:
 337               	.LBB118:
 338               	.LBB119:
 297:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number, (((Type) << EPTYPE0) | (Direction)),
 339               		.loc 2 297 0
 340 0000 82E0      		ldi r24,lo8(2)
 341 0002 61EC      		ldi r22,lo8(-63)
 342 0004 42E0      		ldi r20,lo8(2)
 343 0006 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 344               	.LVL12:
 345               	.LBE119:
 346               	.LBE118:
 347               	.LBB120:
 348               	.LBB121:
 349 000a 83E0      		ldi r24,lo8(3)
 350 000c 61E8      		ldi r22,lo8(-127)
 351 000e 42E1      		ldi r20,lo8(18)
 352 0010 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 353               	.LVL13:
 354               	.LBE121:
 355               	.LBE120:
 356               	.LBB122:
 357               	.LBB123:
 358 0014 84E0      		ldi r24,lo8(4)
 359 0016 60E8      		ldi r22,lo8(-128)
 360 0018 42E1      		ldi r20,lo8(18)
 361 001a 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 362               	/* epilogue start */
 363               	.LBE123:
 364               	.LBE122:
 247:BootloaderCDC.c **** }
 365               		.loc 1 247 0
 366 001e 0895      		ret
 367               		.cfi_endproc
 368               	.LFE82:
 370               		.section	.text.EVENT_USB_Device_UnhandledControlRequest,"ax",@progbits
 371               	.global	EVENT_USB_Device_UnhandledControlRequest
 373               	EVENT_USB_Device_UnhandledControlRequest:
 374               	.LFB83:
 254:BootloaderCDC.c **** {
 375               		.loc 1 254 0
 376               		.cfi_startproc
 377               	/* prologue: function */
 378               	/* frame size = 0 */
 379               	/* stack size = 0 */
 380               	.L__stack_usage = 0
 256:BootloaderCDC.c **** 	switch (USB_ControlRequest.bRequest)
 381               		.loc 1 256 0
 382 0000 8091 0000 		lds r24,USB_ControlRequest+1
 383 0004 8032      		cpi r24,lo8(32)
 384 0006 01F0      		breq .L22
 385 0008 8132      		cpi r24,lo8(33)
 386 000a 01F4      		brne .L20
 259:BootloaderCDC.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_INTERFACE)
 387               		.loc 1 259 0
 388 000c 8091 0000 		lds r24,USB_ControlRequest
 389 0010 813A      		cpi r24,lo8(-95)
 390 0012 01F4      		brne .L20
 391               	.LBB124:
 392               	.LBB125:
 494:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				UEINTX &= ~(1 << RXSTPI);
 393               		.loc 2 494 0
 394 0014 8091 E800 		lds r24,232
 395 0018 877F      		andi r24,lo8(-9)
 396 001a 8093 E800 		sts 232,r24
 397               	.LBE125:
 398               	.LBE124:
 264:BootloaderCDC.c **** 				Endpoint_Write_Control_Stream_LE(&LineEncoding, sizeof(CDC_Line_Coding_t));
 399               		.loc 1 264 0
 400 001e 80E0      		ldi r24,lo8(LineEncoding)
 401 0020 90E0      		ldi r25,hi8(LineEncoding)
 402 0022 67E0      		ldi r22,lo8(7)
 403 0024 70E0      		ldi r23,hi8(7)
 404 0026 0E94 0000 		call Endpoint_Write_Control_Stream_LE
 405               	.LBB126:
 406               	.LBB127:
 521:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 407               		.loc 2 521 0
 408 002a 8091 E800 		lds r24,232
 409 002e 8B77      		andi r24,lo8(123)
 410 0030 8093 E800 		sts 232,r24
 411 0034 0895      		ret
 412               	.L22:
 413               	.LBE127:
 414               	.LBE126:
 270:BootloaderCDC.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE)
 415               		.loc 1 270 0
 416 0036 8091 0000 		lds r24,USB_ControlRequest
 417 003a 8132      		cpi r24,lo8(33)
 418 003c 01F4      		brne .L20
 419               	.LBB128:
 420               	.LBB129:
 494:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				UEINTX &= ~(1 << RXSTPI);
 421               		.loc 2 494 0
 422 003e 8091 E800 		lds r24,232
 423 0042 877F      		andi r24,lo8(-9)
 424 0044 8093 E800 		sts 232,r24
 425               	.LBE129:
 426               	.LBE128:
 275:BootloaderCDC.c **** 				Endpoint_Read_Control_Stream_LE(&LineEncoding, sizeof(CDC_Line_Coding_t));
 427               		.loc 1 275 0
 428 0048 80E0      		ldi r24,lo8(LineEncoding)
 429 004a 90E0      		ldi r25,hi8(LineEncoding)
 430 004c 67E0      		ldi r22,lo8(7)
 431 004e 70E0      		ldi r23,hi8(7)
 432 0050 0E94 0000 		call Endpoint_Read_Control_Stream_LE
 433               	.LBB130:
 434               	.LBB131:
 506:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 435               		.loc 2 506 0
 436 0054 8091 E800 		lds r24,232
 437 0058 8E77      		andi r24,lo8(126)
 438 005a 8093 E800 		sts 232,r24
 439               	.L20:
 440 005e 0895      		ret
 441               	.LBE131:
 442               	.LBE130:
 443               		.cfi_endproc
 444               	.LFE83:
 446               		.data
 447               	.LC0:
 448 0000 4C55 4641 		.string	"LUFACDC"
 448      4344 4300 
 449               		.section	.text.CDC_Task,"ax",@progbits
 450               	.global	CDC_Task
 452               	CDC_Task:
 453               	.LFB87:
 443:BootloaderCDC.c **** 			  return;
 444:BootloaderCDC.c **** 		}
 445:BootloaderCDC.c **** 	}
 446:BootloaderCDC.c **** 
 447:BootloaderCDC.c **** 	/* Write the next byte to the OUT endpoint */
 448:BootloaderCDC.c **** 	Endpoint_Write_Byte(Response);
 449:BootloaderCDC.c **** }
 450:BootloaderCDC.c **** 
 451:BootloaderCDC.c **** /** Task to read in AVR910 commands from the CDC data OUT endpoint, process them, perform the requi
 452:BootloaderCDC.c ****  *  and send the appropriate response back to the host.
 453:BootloaderCDC.c ****  */
 454:BootloaderCDC.c **** void CDC_Task(void)
 455:BootloaderCDC.c **** {
 454               		.loc 1 455 0
 455               		.cfi_startproc
 456 0000 4F92      		push r4
 457               	.LCFI0:
 458               		.cfi_def_cfa_offset 3
 459               		.cfi_offset 4, -2
 460 0002 5F92      		push r5
 461               	.LCFI1:
 462               		.cfi_def_cfa_offset 4
 463               		.cfi_offset 5, -3
 464 0004 6F92      		push r6
 465               	.LCFI2:
 466               		.cfi_def_cfa_offset 5
 467               		.cfi_offset 6, -4
 468 0006 7F92      		push r7
 469               	.LCFI3:
 470               		.cfi_def_cfa_offset 6
 471               		.cfi_offset 7, -5
 472 0008 8F92      		push r8
 473               	.LCFI4:
 474               		.cfi_def_cfa_offset 7
 475               		.cfi_offset 8, -6
 476 000a 9F92      		push r9
 477               	.LCFI5:
 478               		.cfi_def_cfa_offset 8
 479               		.cfi_offset 9, -7
 480 000c AF92      		push r10
 481               	.LCFI6:
 482               		.cfi_def_cfa_offset 9
 483               		.cfi_offset 10, -8
 484 000e BF92      		push r11
 485               	.LCFI7:
 486               		.cfi_def_cfa_offset 10
 487               		.cfi_offset 11, -9
 488 0010 CF92      		push r12
 489               	.LCFI8:
 490               		.cfi_def_cfa_offset 11
 491               		.cfi_offset 12, -10
 492 0012 DF92      		push r13
 493               	.LCFI9:
 494               		.cfi_def_cfa_offset 12
 495               		.cfi_offset 13, -11
 496 0014 EF92      		push r14
 497               	.LCFI10:
 498               		.cfi_def_cfa_offset 13
 499               		.cfi_offset 14, -12
 500 0016 FF92      		push r15
 501               	.LCFI11:
 502               		.cfi_def_cfa_offset 14
 503               		.cfi_offset 15, -13
 504 0018 0F93      		push r16
 505               	.LCFI12:
 506               		.cfi_def_cfa_offset 15
 507               		.cfi_offset 16, -14
 508 001a 1F93      		push r17
 509               	.LCFI13:
 510               		.cfi_def_cfa_offset 16
 511               		.cfi_offset 17, -15
 512 001c CF93      		push r28
 513               	.LCFI14:
 514               		.cfi_def_cfa_offset 17
 515               		.cfi_offset 28, -16
 516 001e DF93      		push r29
 517               	.LCFI15:
 518               		.cfi_def_cfa_offset 18
 519               		.cfi_offset 29, -17
 520               	/* prologue: function */
 521               	/* frame size = 0 */
 522               	/* stack size = 16 */
 523               	.L__stack_usage = 16
 524               	.LVL14:
 525               	.LBB166:
 526               	.LBB167:
 351:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 					UENUM = EndpointNumber;
 527               		.loc 2 351 0
 528 0020 84E0      		ldi r24,lo8(4)
 529 0022 8093 E900 		sts 233,r24
 530               	.LBE167:
 531               	.LBE166:
 532               	.LBB168:
 533               	.LBB169:
 469:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 534               		.loc 2 469 0
 535 0026 8091 E800 		lds r24,232
 536               	.LBE169:
 537               	.LBE168:
 456:BootloaderCDC.c **** 	/* Select the OUT endpoint */
 457:BootloaderCDC.c **** 	Endpoint_SelectEndpoint(CDC_RX_EPNUM);
 458:BootloaderCDC.c **** 
 459:BootloaderCDC.c **** 	/* Check if endpoint has a command in it sent from the host */
 460:BootloaderCDC.c **** 	if (Endpoint_IsOUTReceived())
 538               		.loc 1 460 0
 539 002a 82FF      		sbrs r24,2
 540 002c 00C0      		rjmp .L24
 541               	.LBB170:
 461:BootloaderCDC.c **** 	{
 462:BootloaderCDC.c **** 	  // adafruit mods - we are still processing data
 463:BootloaderCDC.c **** 	  boottimeout = 0;
 542               		.loc 1 463 0
 543 002e 1092 0000 		sts boottimeout,__zero_reg__
 464:BootloaderCDC.c **** 
 465:BootloaderCDC.c **** 
 466:BootloaderCDC.c **** 		/* Read in the bootloader command (first byte sent from host) */
 467:BootloaderCDC.c **** 		uint8_t Command = FetchNextCommandByte();
 544               		.loc 1 467 0
 545 0032 0E94 0000 		call FetchNextCommandByte
 546 0036 082F      		mov r16,r24
 547               	.LVL15:
 468:BootloaderCDC.c **** 
 469:BootloaderCDC.c **** 		if ((Command == 'L') || (Command == 'P') || (Command == 'T') || (Command == 'E'))
 548               		.loc 1 469 0
 549 0038 8C34      		cpi r24,lo8(76)
 550 003a 01F4      		brne .+2
 551 003c 00C0      		rjmp .L91
 552               		.loc 1 469 0 is_stmt 0 discriminator 1
 553 003e 8035      		cpi r24,lo8(80)
 554 0040 01F4      		brne .+2
 555 0042 00C0      		rjmp .L91
 556 0044 8435      		cpi r24,lo8(84)
 557 0046 01F0      		breq .L27
 558 0048 8534      		cpi r24,lo8(69)
 559 004a 01F4      		brne .L28
 470:BootloaderCDC.c **** 		{
 471:BootloaderCDC.c **** 			if (Command == 'E')
 472:BootloaderCDC.c **** 			  RunBootloader = false;
 560               		.loc 1 472 0 is_stmt 1
 561 004c 1092 0000 		sts RunBootloader,__zero_reg__
 562 0050 00C0      		rjmp .L91
 563               	.L27:
 473:BootloaderCDC.c **** 			else if (Command == 'T')
 474:BootloaderCDC.c **** 			  FetchNextCommandByte();
 564               		.loc 1 474 0
 565 0052 0E94 0000 		call FetchNextCommandByte
 566               	.LVL16:
 567 0056 00C0      		rjmp .L91
 568               	.L28:
 475:BootloaderCDC.c **** 
 476:BootloaderCDC.c **** 			/* Send confirmation byte back to the host */
 477:BootloaderCDC.c **** 			WriteNextResponseByte('\r');
 478:BootloaderCDC.c **** 		}
 479:BootloaderCDC.c **** 		else if (Command == 't')
 569               		.loc 1 479 0
 570 0058 8437      		cpi r24,lo8(116)
 571 005a 01F4      		brne .L30
 480:BootloaderCDC.c **** 		{
 481:BootloaderCDC.c **** 			/* Return ATMEGA128 part code - this is only to allow AVRProg to use the bootloader */
 482:BootloaderCDC.c **** 			WriteNextResponseByte(0x44);
 572               		.loc 1 482 0
 573 005c 84E4      		ldi r24,lo8(68)
 574 005e 0E94 0000 		call WriteNextResponseByte
 483:BootloaderCDC.c **** 			WriteNextResponseByte(0x00);
 575               		.loc 1 483 0
 576 0062 80E0      		ldi r24,lo8(0)
 577 0064 00C0      		rjmp .L89
 578               	.L30:
 484:BootloaderCDC.c **** 		}
 485:BootloaderCDC.c **** 		else if (Command == 'a')
 579               		.loc 1 485 0
 580 0066 8136      		cpi r24,lo8(97)
 581 0068 01F4      		brne .L31
 486:BootloaderCDC.c **** 		{
 487:BootloaderCDC.c **** 			/* Indicate auto-address increment is supported */
 488:BootloaderCDC.c **** 			WriteNextResponseByte('Y');
 582               		.loc 1 488 0
 583 006a 89E5      		ldi r24,lo8(89)
 584 006c 00C0      		rjmp .L89
 585               	.L31:
 489:BootloaderCDC.c **** 		}
 490:BootloaderCDC.c **** 		else if (Command == 'A')
 586               		.loc 1 490 0
 587 006e 8134      		cpi r24,lo8(65)
 588 0070 01F4      		brne .L32
 491:BootloaderCDC.c **** 		{
 492:BootloaderCDC.c **** 			/* Set the current address to that given by the host */
 493:BootloaderCDC.c **** 			CurrAddress   = (FetchNextCommandByte() << 9);
 589               		.loc 1 493 0
 590 0072 0E94 0000 		call FetchNextCommandByte
 591 0076 382F      		mov r19,r24
 592 0078 330F      		lsl r19
 593 007a 20E0      		ldi r18,lo8(0)
 594 007c 6901      		movw r12,r18
 595 007e EE24      		clr r14
 596 0080 D7FC      		sbrc r13,7
 597 0082 E094      		com r14
 598 0084 FE2C      		mov r15,r14
 599 0086 C092 0000 		sts CurrAddress,r12
 600 008a D092 0000 		sts CurrAddress+1,r13
 601 008e E092 0000 		sts CurrAddress+2,r14
 602 0092 F092 0000 		sts CurrAddress+3,r15
 494:BootloaderCDC.c **** 			CurrAddress  |= (FetchNextCommandByte() << 1);
 603               		.loc 1 494 0
 604 0096 0E94 0000 		call FetchNextCommandByte
 605 009a 90E0      		ldi r25,lo8(0)
 606 009c 880F      		lsl r24
 607 009e 991F      		rol r25
 608 00a0 AA27      		clr r26
 609 00a2 97FD      		sbrc r25,7
 610 00a4 A095      		com r26
 611 00a6 BA2F      		mov r27,r26
 612 00a8 8C29      		or r24,r12
 613 00aa 9D29      		or r25,r13
 614 00ac AE29      		or r26,r14
 615 00ae BF29      		or r27,r15
 616 00b0 00C0      		rjmp .L94
 617               	.L32:
 495:BootloaderCDC.c **** 
 496:BootloaderCDC.c **** 			/* Send confirmation byte back to the host */
 497:BootloaderCDC.c **** 			WriteNextResponseByte('\r');
 498:BootloaderCDC.c **** 		}
 499:BootloaderCDC.c **** 		else if (Command == 'p')
 618               		.loc 1 499 0
 619 00b2 8037      		cpi r24,lo8(112)
 620 00b4 01F4      		brne .L33
 500:BootloaderCDC.c **** 		{
 501:BootloaderCDC.c **** 			/* Indicate serial programmer back to the host */
 502:BootloaderCDC.c **** 			WriteNextResponseByte('S');
 621               		.loc 1 502 0
 622 00b6 83E5      		ldi r24,lo8(83)
 623 00b8 00C0      		rjmp .L89
 624               	.L33:
 503:BootloaderCDC.c **** 		}
 504:BootloaderCDC.c **** 		else if (Command == 'S')
 625               		.loc 1 504 0
 626 00ba 8335      		cpi r24,lo8(83)
 627 00bc 01F4      		brne .L34
 628 00be C0E0      		ldi r28,lo8(.LC0)
 629 00c0 D0E0      		ldi r29,hi8(.LC0)
 630 00c2 17E0      		ldi r17,lo8(7)
 631               	.L35:
 632               	.LBB171:
 505:BootloaderCDC.c **** 		{
 506:BootloaderCDC.c **** 			/* Write the 7-byte software identifier to the endpoint */
 507:BootloaderCDC.c **** 			for (uint8_t CurrByte = 0; CurrByte < 7; CurrByte++)
 508:BootloaderCDC.c **** 			  WriteNextResponseByte(SOFTWARE_IDENTIFIER[CurrByte]);
 633               		.loc 1 508 0 discriminator 2
 634 00c4 8991      		ld r24,Y+
 635 00c6 0E94 0000 		call WriteNextResponseByte
 636 00ca 1150      		subi r17,lo8(-(-1))
 507:BootloaderCDC.c **** 			for (uint8_t CurrByte = 0; CurrByte < 7; CurrByte++)
 637               		.loc 1 507 0 discriminator 2
 638 00cc 01F4      		brne .L35
 639 00ce 00C0      		rjmp .L29
 640               	.LVL17:
 641               	.L34:
 642               	.LBE171:
 509:BootloaderCDC.c **** 		}
 510:BootloaderCDC.c **** 		else if (Command == 'V')
 643               		.loc 1 510 0
 644 00d0 8635      		cpi r24,lo8(86)
 645 00d2 01F4      		brne .L36
 511:BootloaderCDC.c **** 		{
 512:BootloaderCDC.c **** 			WriteNextResponseByte('0' + BOOTLOADER_VERSION_MAJOR);
 646               		.loc 1 512 0
 647 00d4 81E3      		ldi r24,lo8(49)
 648 00d6 0E94 0000 		call WriteNextResponseByte
 513:BootloaderCDC.c **** 			WriteNextResponseByte('0' + BOOTLOADER_VERSION_MINOR);
 649               		.loc 1 513 0
 650 00da 80E3      		ldi r24,lo8(48)
 651 00dc 00C0      		rjmp .L89
 652               	.L36:
 514:BootloaderCDC.c **** 		}
 515:BootloaderCDC.c **** 		else if (Command == 's')
 653               		.loc 1 515 0
 654 00de 8337      		cpi r24,lo8(115)
 655 00e0 01F4      		brne .L37
 516:BootloaderCDC.c **** 		{
 517:BootloaderCDC.c **** 			WriteNextResponseByte(AVR_SIGNATURE_3);
 656               		.loc 1 517 0
 657 00e2 87E8      		ldi r24,lo8(-121)
 658 00e4 0E94 0000 		call WriteNextResponseByte
 518:BootloaderCDC.c **** 			WriteNextResponseByte(AVR_SIGNATURE_2);
 659               		.loc 1 518 0
 660 00e8 85E9      		ldi r24,lo8(-107)
 661 00ea 0E94 0000 		call WriteNextResponseByte
 519:BootloaderCDC.c **** 			WriteNextResponseByte(AVR_SIGNATURE_1);
 662               		.loc 1 519 0
 663 00ee 8EE1      		ldi r24,lo8(30)
 664 00f0 00C0      		rjmp .L89
 665               	.L37:
 520:BootloaderCDC.c **** 		}
 521:BootloaderCDC.c **** 		else if (Command == 'b')
 666               		.loc 1 521 0
 667 00f2 8236      		cpi r24,lo8(98)
 668 00f4 01F4      		brne .L38
 522:BootloaderCDC.c **** 		{
 523:BootloaderCDC.c **** 			WriteNextResponseByte('Y');
 669               		.loc 1 523 0
 670 00f6 89E5      		ldi r24,lo8(89)
 671 00f8 0E94 0000 		call WriteNextResponseByte
 524:BootloaderCDC.c **** 
 525:BootloaderCDC.c **** 			/* Send block size to the host */
 526:BootloaderCDC.c **** 			WriteNextResponseByte(SPM_PAGESIZE >> 8);
 672               		.loc 1 526 0
 673 00fc 80E0      		ldi r24,lo8(0)
 674 00fe 0E94 0000 		call WriteNextResponseByte
 527:BootloaderCDC.c **** 			WriteNextResponseByte(SPM_PAGESIZE & 0xFF);
 675               		.loc 1 527 0
 676 0102 80E8      		ldi r24,lo8(-128)
 677 0104 00C0      		rjmp .L89
 678               	.L38:
 528:BootloaderCDC.c **** 		}
 529:BootloaderCDC.c **** 		else if (Command == 'e')
 679               		.loc 1 529 0
 680 0106 8536      		cpi r24,lo8(101)
 681 0108 01F4      		brne .L39
 682 010a E0E0      		ldi r30,lo8(0)
 683 010c F0E0      		ldi r31,hi8(0)
 684               	.LBB172:
 530:BootloaderCDC.c **** 		{
 531:BootloaderCDC.c **** 			/* Clear the application section of flash */
 532:BootloaderCDC.c **** 			for (uint32_t CurrFlashAddress = 0; CurrFlashAddress < BOOT_START_ADDR; CurrFlashAddress++)
 533:BootloaderCDC.c **** 			{
 534:BootloaderCDC.c **** 				boot_page_erase(CurrFlashAddress);
 685               		.loc 1 534 0
 686 010e 93E0      		ldi r25,lo8(3)
 535:BootloaderCDC.c **** 				boot_spm_busy_wait();
 536:BootloaderCDC.c **** 				boot_page_write(CurrFlashAddress);
 687               		.loc 1 536 0
 688 0110 85E0      		ldi r24,lo8(5)
 689               	.L42:
 534:BootloaderCDC.c **** 				boot_page_erase(CurrFlashAddress);
 690               		.loc 1 534 0
 691               	/* #APP */
 692               	 ;  534 "BootloaderCDC.c" 1
 693 0112 9093 5700 		sts 87, r25
 694 0116 E895      		spm
 695               		
 696               	 ;  0 "" 2
 697               	/* #NOAPP */
 698               	.L40:
 535:BootloaderCDC.c **** 				boot_spm_busy_wait();
 699               		.loc 1 535 0 discriminator 1
 700 0118 07B6      		in __tmp_reg__,87-32
 701 011a 00FC      		sbrc __tmp_reg__,0
 702 011c 00C0      		rjmp .L40
 703               		.loc 1 536 0
 704               	/* #APP */
 705               	 ;  536 "BootloaderCDC.c" 1
 706 011e 8093 5700 		sts 87, r24
 707 0122 E895      		spm
 708               		
 709               	 ;  0 "" 2
 710               	/* #NOAPP */
 711               	.L41:
 537:BootloaderCDC.c **** 				boot_spm_busy_wait();
 712               		.loc 1 537 0 discriminator 1
 713 0124 07B6      		in __tmp_reg__,87-32
 714 0126 00FC      		sbrc __tmp_reg__,0
 715 0128 00C0      		rjmp .L41
 716               		.loc 1 537 0 is_stmt 0
 717 012a EF57      		subi r30,lo8(-(129))
 718 012c FF4F      		sbci r31,hi8(-(129))
 532:BootloaderCDC.c **** 			for (uint32_t CurrFlashAddress = 0; CurrFlashAddress < BOOT_START_ADDR; CurrFlashAddress++)
 719               		.loc 1 532 0 is_stmt 1
 720 012e 20E7      		ldi r18,hi8(28767)
 721 0130 EF35      		cpi r30,lo8(28767)
 722 0132 F207      		cpc r31,r18
 723 0134 01F4      		brne .L42
 724 0136 00C0      		rjmp .L91
 725               	.LVL18:
 726               	.L39:
 727               	.LBE172:
 538:BootloaderCDC.c **** 
 539:BootloaderCDC.c **** 				CurrFlashAddress += SPM_PAGESIZE;
 540:BootloaderCDC.c **** 			}
 541:BootloaderCDC.c **** 
 542:BootloaderCDC.c **** 			/* Send confirmation byte back to the host */
 543:BootloaderCDC.c **** 			WriteNextResponseByte('\r');
 544:BootloaderCDC.c **** 		}
 545:BootloaderCDC.c **** 		else if (Command == 'l')
 728               		.loc 1 545 0
 729 0138 8C36      		cpi r24,lo8(108)
 730 013a 01F4      		brne .L43
 731               	.LBB173:
 546:BootloaderCDC.c **** 		{
 547:BootloaderCDC.c **** 			/* Set the lock bits to those given by the host */
 548:BootloaderCDC.c **** 			boot_lock_bits_set(FetchNextCommandByte());
 732               		.loc 1 548 0
 733 013c 0E94 0000 		call FetchNextCommandByte
 734               	.LVL19:
 735 0140 8095      		com r24
 736               	.LVL20:
 737 0142 99E0      		ldi r25,lo8(9)
 738               	/* #APP */
 739               	 ;  548 "BootloaderCDC.c" 1
 740 0144 E1E0      		ldi r30, 1
 741 0146 F0E0      		ldi r31, 0
 742 0148 082E      		mov r0, r24
 743 014a 9093 5700 		sts 87, r25
 744 014e E895      		spm
 745               		
 746               	 ;  0 "" 2
 747               	/* #NOAPP */
 748 0150 00C0      		rjmp .L91
 749               	.LVL21:
 750               	.L43:
 751               	.LBE173:
 549:BootloaderCDC.c **** 
 550:BootloaderCDC.c **** 			/* Send confirmation byte back to the host */
 551:BootloaderCDC.c **** 			WriteNextResponseByte('\r');
 552:BootloaderCDC.c **** 		}
 553:BootloaderCDC.c **** 		else if (Command == 'r')
 752               		.loc 1 553 0
 753 0152 8237      		cpi r24,lo8(114)
 754 0154 01F4      		brne .L44
 755               	.LBB174:
 554:BootloaderCDC.c **** 		{
 555:BootloaderCDC.c **** 			WriteNextResponseByte(boot_lock_fuse_bits_get(GET_LOCK_BITS));
 756               		.loc 1 555 0
 757 0156 E1E0      		ldi r30,lo8(1)
 758 0158 F0E0      		ldi r31,hi8(1)
 759 015a 00C0      		rjmp .L92
 760               	.L44:
 761               	.LBE174:
 556:BootloaderCDC.c **** 		}
 557:BootloaderCDC.c **** 		else if (Command == 'F')
 762               		.loc 1 557 0
 763 015c 8634      		cpi r24,lo8(70)
 764 015e 01F4      		brne .L45
 765               	.LBB175:
 558:BootloaderCDC.c **** 		{
 559:BootloaderCDC.c **** 			WriteNextResponseByte(boot_lock_fuse_bits_get(GET_LOW_FUSE_BITS));
 766               		.loc 1 559 0
 767 0160 E0E0      		ldi r30,lo8(0)
 768 0162 F0E0      		ldi r31,hi8(0)
 769 0164 00C0      		rjmp .L92
 770               	.L45:
 771               	.LBE175:
 560:BootloaderCDC.c **** 		}
 561:BootloaderCDC.c **** 		else if (Command == 'N')
 772               		.loc 1 561 0
 773 0166 8E34      		cpi r24,lo8(78)
 774 0168 01F4      		brne .L46
 775               	.LBB176:
 562:BootloaderCDC.c **** 		{
 563:BootloaderCDC.c **** 			WriteNextResponseByte(boot_lock_fuse_bits_get(GET_HIGH_FUSE_BITS));
 776               		.loc 1 563 0
 777 016a E3E0      		ldi r30,lo8(3)
 778 016c F0E0      		ldi r31,hi8(3)
 779 016e 00C0      		rjmp .L92
 780               	.L46:
 781               	.LBE176:
 564:BootloaderCDC.c **** 		}
 565:BootloaderCDC.c **** 		else if (Command == 'Q')
 782               		.loc 1 565 0
 783 0170 8135      		cpi r24,lo8(81)
 784 0172 01F4      		brne .L47
 785               	.LBB177:
 566:BootloaderCDC.c **** 		{
 567:BootloaderCDC.c **** 			WriteNextResponseByte(boot_lock_fuse_bits_get(GET_EXTENDED_FUSE_BITS));
 786               		.loc 1 567 0
 787 0174 E2E0      		ldi r30,lo8(2)
 788 0176 F0E0      		ldi r31,hi8(2)
 789               	.L92:
 790 0178 89E0      		ldi r24,lo8(9)
 791               	/* #APP */
 792               	 ;  567 "BootloaderCDC.c" 1
 793 017a 8093 5700 		sts 87, r24
 794 017e 8491      		lpm r24, Z
 795               		
 796               	 ;  0 "" 2
 797               	.LVL22:
 798               	/* #NOAPP */
 799 0180 00C0      		rjmp .L89
 800               	.LVL23:
 801               	.L47:
 802               	.LBE177:
 568:BootloaderCDC.c **** 		}
 569:BootloaderCDC.c **** 		else if (Command == 'C')
 803               		.loc 1 569 0
 804 0182 8334      		cpi r24,lo8(67)
 805 0184 01F4      		brne .L48
 570:BootloaderCDC.c **** 		{
 571:BootloaderCDC.c **** 			/* Write the high byte to the current flash page */
 572:BootloaderCDC.c **** 			boot_page_fill(CurrAddress, FetchNextCommandByte());
 806               		.loc 1 572 0
 807 0186 C091 0000 		lds r28,CurrAddress
 808 018a D091 0000 		lds r29,CurrAddress+1
 809 018e 0E94 0000 		call FetchNextCommandByte
 810 0192 90E0      		ldi r25,lo8(0)
 811 0194 21E0      		ldi r18,lo8(1)
 812 0196 FE01      		movw r30,r28
 813               	/* #APP */
 814               	 ;  572 "BootloaderCDC.c" 1
 815 0198 0C01      		movw  r0, r24
 816 019a 2093 5700 		sts 87, r18
 817 019e E895      		spm
 818 01a0 1124      		clr  r1
 819               		
 820               	 ;  0 "" 2
 821               	/* #NOAPP */
 822 01a2 00C0      		rjmp .L91
 823               	.L48:
 573:BootloaderCDC.c **** 
 574:BootloaderCDC.c **** 			/* Send confirmation byte back to the host */
 575:BootloaderCDC.c **** 			WriteNextResponseByte('\r');
 576:BootloaderCDC.c **** 		}
 577:BootloaderCDC.c **** 		else if (Command == 'c')
 824               		.loc 1 577 0
 825 01a4 8336      		cpi r24,lo8(99)
 826 01a6 01F4      		brne .L49
 578:BootloaderCDC.c **** 		{
 579:BootloaderCDC.c **** 			/* Write the low byte to the current flash page */
 580:BootloaderCDC.c **** 			boot_page_fill(CurrAddress | 1, FetchNextCommandByte());
 827               		.loc 1 580 0
 828 01a8 C091 0000 		lds r28,CurrAddress
 829 01ac D091 0000 		lds r29,CurrAddress+1
 830 01b0 C160      		ori r28,lo8(1)
 831 01b2 0E94 0000 		call FetchNextCommandByte
 832 01b6 90E0      		ldi r25,lo8(0)
 833 01b8 21E0      		ldi r18,lo8(1)
 834 01ba FE01      		movw r30,r28
 835               	/* #APP */
 836               	 ;  580 "BootloaderCDC.c" 1
 837 01bc 0C01      		movw  r0, r24
 838 01be 2093 5700 		sts 87, r18
 839 01c2 E895      		spm
 840 01c4 1124      		clr  r1
 841               		
 842               	 ;  0 "" 2
 843               	/* #NOAPP */
 844 01c6 00C0      		rjmp .L93
 845               	.L49:
 581:BootloaderCDC.c **** 
 582:BootloaderCDC.c **** 			/* Increment the address */
 583:BootloaderCDC.c **** 			CurrAddress += 2;
 584:BootloaderCDC.c **** 
 585:BootloaderCDC.c **** 			/* Send confirmation byte back to the host */
 586:BootloaderCDC.c **** 			WriteNextResponseByte('\r');
 587:BootloaderCDC.c **** 		}
 588:BootloaderCDC.c **** 		else if (Command == 'm')
 846               		.loc 1 588 0
 847 01c8 8D36      		cpi r24,lo8(109)
 848 01ca 01F4      		brne .L50
 589:BootloaderCDC.c **** 		{
 590:BootloaderCDC.c **** 			/* Commit the flash page to memory */
 591:BootloaderCDC.c **** 			boot_page_write(CurrAddress);
 849               		.loc 1 591 0
 850 01cc E091 0000 		lds r30,CurrAddress
 851 01d0 F091 0000 		lds r31,CurrAddress+1
 852 01d4 85E0      		ldi r24,lo8(5)
 853               	/* #APP */
 854               	 ;  591 "BootloaderCDC.c" 1
 855 01d6 8093 5700 		sts 87, r24
 856 01da E895      		spm
 857               		
 858               	 ;  0 "" 2
 859               	/* #NOAPP */
 860               	.L51:
 592:BootloaderCDC.c **** 
 593:BootloaderCDC.c **** 			/* Wait until write operation has completed */
 594:BootloaderCDC.c **** 			boot_spm_busy_wait();
 861               		.loc 1 594 0 discriminator 1
 862 01dc 07B6      		in __tmp_reg__,87-32
 863 01de 00FC      		sbrc __tmp_reg__,0
 864 01e0 00C0      		rjmp .L51
 865 01e2 00C0      		rjmp .L91
 866               	.L50:
 595:BootloaderCDC.c **** 
 596:BootloaderCDC.c **** 			/* Send confirmation byte back to the host */
 597:BootloaderCDC.c **** 			WriteNextResponseByte('\r');
 598:BootloaderCDC.c **** 		}
 599:BootloaderCDC.c **** 		else if ((Command == 'B') || (Command == 'g'))
 867               		.loc 1 599 0
 868 01e4 8234      		cpi r24,lo8(66)
 869 01e6 01F0      		breq .L52
 870               		.loc 1 599 0 is_stmt 0 discriminator 1
 871 01e8 8736      		cpi r24,lo8(103)
 872 01ea 01F0      		breq .+2
 873 01ec 00C0      		rjmp .L53
 874               	.L52:
 875               	.LVL24:
 876               	.LBB178:
 877               	.LBB179:
 296:BootloaderCDC.c **** 	BlockSize  = (FetchNextCommandByte() << 8);
 878               		.loc 1 296 0 is_stmt 1
 879 01ee 0E94 0000 		call FetchNextCommandByte
 880 01f2 C82E      		mov r12,r24
 881               	.LVL25:
 297:BootloaderCDC.c **** 	BlockSize |=  FetchNextCommandByte();
 882               		.loc 1 297 0
 883 01f4 0E94 0000 		call FetchNextCommandByte
 884               	.LVL26:
 885 01f8 C82F      		mov r28,r24
 886               	.LVL27:
 299:BootloaderCDC.c **** 	MemoryType =  FetchNextCommandByte();
 887               		.loc 1 299 0
 888 01fa 0E94 0000 		call FetchNextCommandByte
 889               	.LVL28:
 890 01fe 182F      		mov r17,r24
 891               	.LVL29:
 301:BootloaderCDC.c **** 	if ((MemoryType != 'E') && (MemoryType != 'F'))
 892               		.loc 1 301 0
 893 0200 8554      		subi r24,lo8(-(-69))
 894               	.LVL30:
 895 0202 8230      		cpi r24,lo8(2)
 896 0204 00F0      		brlo .+2
 897 0206 00C0      		rjmp .L88
 898               	.L54:
 296:BootloaderCDC.c **** 	BlockSize  = (FetchNextCommandByte() << 8);
 899               		.loc 1 296 0
 900 0208 3C2D      		mov r19,r12
 901 020a 20E0      		ldi r18,lo8(0)
 297:BootloaderCDC.c **** 	BlockSize |=  FetchNextCommandByte();
 902               		.loc 1 297 0
 903 020c D0E0      		ldi r29,lo8(0)
 904 020e C22B      		or r28,r18
 905 0210 D32B      		or r29,r19
 906               	.LVL31:
 310:BootloaderCDC.c **** 	if (Command == 'g')
 907               		.loc 1 310 0
 908 0212 0736      		cpi r16,lo8(103)
 909 0214 01F0      		breq .+2
 910 0216 00C0      		rjmp .L55
 313:BootloaderCDC.c **** 		boot_rww_enable();
 911               		.loc 1 313 0
 912 0218 81E1      		ldi r24,lo8(17)
 913               	/* #APP */
 914               	 ;  313 "BootloaderCDC.c" 1
 915 021a 8093 5700 		sts 87, r24
 916 021e E895      		spm
 917               		
 918               	 ;  0 "" 2
 293:BootloaderCDC.c **** 	bool     HighByte = false;
 919               		.loc 1 293 0
 920               	/* #NOAPP */
 921 0220 00E0      		ldi r16,lo8(0)
 330:BootloaderCDC.c **** 				HighByte = !HighByte;
 922               		.loc 1 330 0
 923 0222 CC24      		clr r12
 924 0224 C394      		inc r12
 925 0226 00C0      		rjmp .L56
 926               	.LVL32:
 927               	.L60:
 317:BootloaderCDC.c **** 			if (MemoryType == 'F')
 928               		.loc 1 317 0
 929 0228 1634      		cpi r17,lo8(70)
 930 022a 01F4      		brne .L57
 931               	.LVL33:
 932               	.LBB180:
 323:BootloaderCDC.c **** 				WriteNextResponseByte(pgm_read_byte(CurrAddress | HighByte));
 933               		.loc 1 323 0
 934 022c E02F      		mov r30,r16
 935 022e F0E0      		ldi r31,lo8(0)
 936 0230 8091 0000 		lds r24,CurrAddress
 937 0234 9091 0000 		lds r25,CurrAddress+1
 938               	.LVL34:
 939 0238 E82B      		or r30,r24
 940 023a F92B      		or r31,r25
 941               	/* #APP */
 942               	 ;  323 "BootloaderCDC.c" 1
 943 023c 8491      		lpm r24, Z
 944               		
 945               	 ;  0 "" 2
 946               	.LVL35:
 947               	/* #NOAPP */
 948               	.LBE180:
 949 023e 0E94 0000 		call WriteNextResponseByte
 950               	.LVL36:
 327:BootloaderCDC.c **** 				if (HighByte)
 951               		.loc 1 327 0
 952 0242 0023      		tst r16
 953 0244 01F0      		breq .L58
 954               	.LVL37:
 328:BootloaderCDC.c **** 				  CurrAddress += 2;
 955               		.loc 1 328 0
 956 0246 8091 0000 		lds r24,CurrAddress
 957 024a 9091 0000 		lds r25,CurrAddress+1
 958 024e A091 0000 		lds r26,CurrAddress+2
 959 0252 B091 0000 		lds r27,CurrAddress+3
 960 0256 0296      		adiw r24,2
 961 0258 A11D      		adc r26,__zero_reg__
 962 025a B11D      		adc r27,__zero_reg__
 963 025c 8093 0000 		sts CurrAddress,r24
 964 0260 9093 0000 		sts CurrAddress+1,r25
 965 0264 A093 0000 		sts CurrAddress+2,r26
 966 0268 B093 0000 		sts CurrAddress+3,r27
 967               	.LVL38:
 968               	.L58:
 330:BootloaderCDC.c **** 				HighByte = !HighByte;
 969               		.loc 1 330 0
 970 026c 0C25      		eor r16,r12
 971               	.LVL39:
 972 026e 00C0      		rjmp .L59
 973               	.L57:
 335:BootloaderCDC.c **** 				WriteNextResponseByte(eeprom_read_byte((uint8_t*)(intptr_t)(CurrAddress >> 1)));
 974               		.loc 1 335 0
 975 0270 8091 0000 		lds r24,CurrAddress
 976 0274 9091 0000 		lds r25,CurrAddress+1
 977 0278 A091 0000 		lds r26,CurrAddress+2
 978 027c B091 0000 		lds r27,CurrAddress+3
 979 0280 B695      		lsr r27
 980 0282 A795      		ror r26
 981 0284 9795      		ror r25
 982 0286 8795      		ror r24
 983 0288 0E94 0000 		call __eerd_byte_m32u4
 984 028c 0E94 0000 		call WriteNextResponseByte
 338:BootloaderCDC.c **** 				CurrAddress += 2;
 985               		.loc 1 338 0
 986 0290 8091 0000 		lds r24,CurrAddress
 987 0294 9091 0000 		lds r25,CurrAddress+1
 988 0298 A091 0000 		lds r26,CurrAddress+2
 989 029c B091 0000 		lds r27,CurrAddress+3
 990 02a0 0296      		adiw r24,2
 991 02a2 A11D      		adc r26,__zero_reg__
 992 02a4 B11D      		adc r27,__zero_reg__
 993 02a6 8093 0000 		sts CurrAddress,r24
 994 02aa 9093 0000 		sts CurrAddress+1,r25
 995 02ae A093 0000 		sts CurrAddress+2,r26
 996 02b2 B093 0000 		sts CurrAddress+3,r27
 997               	.L59:
 998 02b6 2197      		sbiw r28,1
 999               	.LVL40:
 1000               	.L56:
 315:BootloaderCDC.c **** 		while (BlockSize--)
 1001               		.loc 1 315 0
 1002 02b8 2097      		sbiw r28,0
 1003 02ba 01F0      		breq .+2
 1004 02bc 00C0      		rjmp .L60
 1005 02be 00C0      		rjmp .L29
 1006               	.LVL41:
 1007               	.L55:
 1008               	.LBB181:
 344:BootloaderCDC.c **** 		uint32_t PageStartAddress = CurrAddress;
 1009               		.loc 1 344 0
 1010 02c0 4090 0000 		lds r4,CurrAddress
 1011 02c4 5090 0000 		lds r5,CurrAddress+1
 1012 02c8 6090 0000 		lds r6,CurrAddress+2
 1013 02cc 7090 0000 		lds r7,CurrAddress+3
 346:BootloaderCDC.c **** 		if (MemoryType == 'F')
 1014               		.loc 1 346 0
 1015 02d0 1634      		cpi r17,lo8(70)
 1016 02d2 01F0      		breq .+2
 1017 02d4 00C0      		rjmp .L77
 348:BootloaderCDC.c **** 			boot_page_erase(PageStartAddress);
 1018               		.loc 1 348 0
 1019 02d6 83E0      		ldi r24,lo8(3)
 1020 02d8 F201      		movw r30,r4
 1021               	/* #APP */
 1022               	 ;  348 "BootloaderCDC.c" 1
 1023 02da 8093 5700 		sts 87, r24
 1024 02de E895      		spm
 1025               		
 1026               	 ;  0 "" 2
 1027               	/* #NOAPP */
 1028               	.L62:
 349:BootloaderCDC.c **** 			boot_spm_busy_wait();
 1029               		.loc 1 349 0
 1030 02e0 07B6      		in __tmp_reg__,87-32
 1031 02e2 00FC      		sbrc __tmp_reg__,0
 1032 02e4 00C0      		rjmp .L62
 1033 02e6 00C0      		rjmp .L77
 1034               	.LVL42:
 1035               	.L66:
 354:BootloaderCDC.c **** 			if (MemoryType == 'F')
 1036               		.loc 1 354 0
 1037 02e8 1634      		cpi r17,lo8(70)
 1038 02ea 01F4      		brne .L63
 357:BootloaderCDC.c **** 				if (HighByte)
 1039               		.loc 1 357 0
 1040 02ec 0023      		tst r16
 1041 02ee 01F0      		breq .L64
 360:BootloaderCDC.c **** 					boot_page_fill(CurrAddress, ((FetchNextCommandByte() << 8) | LowByte));
 1042               		.loc 1 360 0
 1043 02f0 C090 0000 		lds r12,CurrAddress
 1044 02f4 D090 0000 		lds r13,CurrAddress+1
 1045 02f8 0E94 0000 		call FetchNextCommandByte
 1046 02fc 982E      		mov r9,r24
 1047 02fe 8824      		clr r8
 1048 0300 8B2D      		mov r24,r11
 1049 0302 90E0      		ldi r25,lo8(0)
 1050 0304 8829      		or r24,r8
 1051 0306 9929      		or r25,r9
 1052 0308 F601      		movw r30,r12
 1053               	/* #APP */
 1054               	 ;  360 "BootloaderCDC.c" 1
 1055 030a 0C01      		movw  r0, r24
 1056 030c A092 5700 		sts 87, r10
 1057 0310 E895      		spm
 1058 0312 1124      		clr  r1
 1059               		
 1060               	 ;  0 "" 2
 363:BootloaderCDC.c **** 					CurrAddress += 2;
 1061               		.loc 1 363 0
 1062               	/* #NOAPP */
 1063 0314 8091 0000 		lds r24,CurrAddress
 1064 0318 9091 0000 		lds r25,CurrAddress+1
 1065 031c A091 0000 		lds r26,CurrAddress+2
 1066 0320 B091 0000 		lds r27,CurrAddress+3
 1067 0324 0296      		adiw r24,2
 1068 0326 A11D      		adc r26,__zero_reg__
 1069 0328 B11D      		adc r27,__zero_reg__
 1070 032a 8093 0000 		sts CurrAddress,r24
 1071 032e 9093 0000 		sts CurrAddress+1,r25
 1072 0332 A093 0000 		sts CurrAddress+2,r26
 1073 0336 B093 0000 		sts CurrAddress+3,r27
 1074               	.LVL43:
 365:BootloaderCDC.c **** 					HighByte = false;
 1075               		.loc 1 365 0
 1076 033a 00E0      		ldi r16,lo8(0)
 1077 033c 00C0      		rjmp .L65
 1078               	.LVL44:
 1079               	.L64:
 369:BootloaderCDC.c **** 					LowByte = FetchNextCommandByte();
 1080               		.loc 1 369 0
 1081 033e 0E94 0000 		call FetchNextCommandByte
 1082 0342 B82E      		mov r11,r24
 1083               	.LVL45:
 371:BootloaderCDC.c **** 					HighByte = true;
 1084               		.loc 1 371 0
 1085 0344 01E0      		ldi r16,lo8(1)
 1086 0346 00C0      		rjmp .L65
 1087               	.LVL46:
 1088               	.L63:
 377:BootloaderCDC.c **** 				eeprom_write_byte((uint8_t*)((intptr_t)(CurrAddress >> 1)), FetchNextCommandByte());
 1089               		.loc 1 377 0
 1090 0348 C090 0000 		lds r12,CurrAddress
 1091 034c D090 0000 		lds r13,CurrAddress+1
 1092 0350 E090 0000 		lds r14,CurrAddress+2
 1093 0354 F090 0000 		lds r15,CurrAddress+3
 1094 0358 F694      		lsr r15
 1095 035a E794      		ror r14
 1096 035c D794      		ror r13
 1097 035e C794      		ror r12
 1098 0360 0E94 0000 		call FetchNextCommandByte
 1099 0364 682F      		mov r22,r24
 1100 0366 C601      		movw r24,r12
 1101 0368 0E94 0000 		call __eewr_byte_m32u4
 380:BootloaderCDC.c **** 				CurrAddress += 2;
 1102               		.loc 1 380 0
 1103 036c 8091 0000 		lds r24,CurrAddress
 1104 0370 9091 0000 		lds r25,CurrAddress+1
 1105 0374 A091 0000 		lds r26,CurrAddress+2
 1106 0378 B091 0000 		lds r27,CurrAddress+3
 1107 037c 0296      		adiw r24,2
 1108 037e A11D      		adc r26,__zero_reg__
 1109 0380 B11D      		adc r27,__zero_reg__
 1110 0382 8093 0000 		sts CurrAddress,r24
 1111 0386 9093 0000 		sts CurrAddress+1,r25
 1112 038a A093 0000 		sts CurrAddress+2,r26
 1113 038e B093 0000 		sts CurrAddress+3,r27
 1114               	.LVL47:
 1115               	.L65:
 1116 0392 2197      		sbiw r28,1
 1117 0394 00C0      		rjmp .L86
 1118               	.LVL48:
 1119               	.L77:
 346:BootloaderCDC.c **** 		if (MemoryType == 'F')
 1120               		.loc 1 346 0
 1121 0396 BB24      		clr r11
 1122 0398 00E0      		ldi r16,lo8(0)
 371:BootloaderCDC.c **** 					HighByte = true;
 1123               		.loc 1 371 0
 1124 039a AA24      		clr r10
 1125 039c A394      		inc r10
 1126               	.LVL49:
 1127               	.L86:
 352:BootloaderCDC.c **** 		while (BlockSize--)
 1128               		.loc 1 352 0
 1129 039e 2097      		sbiw r28,0
 1130 03a0 01F0      		breq .+2
 1131 03a2 00C0      		rjmp .L66
 385:BootloaderCDC.c **** 		if (MemoryType == 'F')
 1132               		.loc 1 385 0
 1133 03a4 1634      		cpi r17,lo8(70)
 1134 03a6 01F0      		breq .+2
 1135 03a8 00C0      		rjmp .L91
 388:BootloaderCDC.c **** 			boot_page_write(PageStartAddress);
 1136               		.loc 1 388 0
 1137 03aa 85E0      		ldi r24,lo8(5)
 1138 03ac F201      		movw r30,r4
 1139               	/* #APP */
 1140               	 ;  388 "BootloaderCDC.c" 1
 1141 03ae 8093 5700 		sts 87, r24
 1142 03b2 E895      		spm
 1143               		
 1144               	 ;  0 "" 2
 1145               	/* #NOAPP */
 1146               	.L68:
 391:BootloaderCDC.c **** 			boot_spm_busy_wait();
 1147               		.loc 1 391 0
 1148 03b4 07B6      		in __tmp_reg__,87-32
 1149 03b6 00FC      		sbrc __tmp_reg__,0
 1150 03b8 00C0      		rjmp .L68
 1151 03ba 00C0      		rjmp .L91
 1152               	.LVL50:
 1153               	.L53:
 1154               	.LBE181:
 1155               	.LBE179:
 1156               	.LBE178:
 600:BootloaderCDC.c **** 		{
 601:BootloaderCDC.c **** 			/* Delegate the block write/read to a separate function for clarity */
 602:BootloaderCDC.c **** 			ReadWriteMemoryBlock(Command);
 603:BootloaderCDC.c **** 		}
 604:BootloaderCDC.c **** 		else if (Command == 'R')
 1157               		.loc 1 604 0
 1158 03bc 8235      		cpi r24,lo8(82)
 1159 03be 01F4      		brne .L69
 1160               	.LBB182:
 1161               	.LBB183:
 605:BootloaderCDC.c **** 		{
 606:BootloaderCDC.c **** 			#if (FLASHEND > 0xFFFF)
 607:BootloaderCDC.c **** 			uint16_t ProgramWord = pgm_read_word_far(CurrAddress);
 608:BootloaderCDC.c **** 			#else
 609:BootloaderCDC.c **** 			uint16_t ProgramWord = pgm_read_word(CurrAddress);
 1162               		.loc 1 609 0
 1163 03c0 E091 0000 		lds r30,CurrAddress
 1164 03c4 F091 0000 		lds r31,CurrAddress+1
 1165               	.LVL51:
 1166               	/* #APP */
 1167               	 ;  609 "BootloaderCDC.c" 1
 1168 03c8 C591      		lpm r28, Z+
 1169 03ca D491      		lpm r29, Z
 1170               		
 1171               	 ;  0 "" 2
 1172               	.LVL52:
 1173               	/* #NOAPP */
 1174               	.LBE183:
 610:BootloaderCDC.c **** 			#endif
 611:BootloaderCDC.c **** 
 612:BootloaderCDC.c **** 			WriteNextResponseByte(ProgramWord >> 8);
 1175               		.loc 1 612 0
 1176 03cc 8D2F      		mov r24,r29
 1177 03ce 0E94 0000 		call WriteNextResponseByte
 613:BootloaderCDC.c **** 			WriteNextResponseByte(ProgramWord & 0xFF);
 1178               		.loc 1 613 0
 1179 03d2 8C2F      		mov r24,r28
 1180 03d4 00C0      		rjmp .L89
 1181               	.LVL53:
 1182               	.L69:
 1183               	.LBE182:
 614:BootloaderCDC.c **** 		}
 615:BootloaderCDC.c **** 		else if (Command == 'D')
 1184               		.loc 1 615 0
 1185 03d6 8434      		cpi r24,lo8(68)
 1186 03d8 01F4      		brne .L70
 616:BootloaderCDC.c **** 		{
 617:BootloaderCDC.c **** 			/* Read the byte from the endpoint and write it to the EEPROM */
 618:BootloaderCDC.c **** 			eeprom_write_byte((uint8_t*)((intptr_t)(CurrAddress >> 1)), FetchNextCommandByte());
 1187               		.loc 1 618 0
 1188 03da C090 0000 		lds r12,CurrAddress
 1189 03de D090 0000 		lds r13,CurrAddress+1
 1190 03e2 E090 0000 		lds r14,CurrAddress+2
 1191 03e6 F090 0000 		lds r15,CurrAddress+3
 1192 03ea F694      		lsr r15
 1193 03ec E794      		ror r14
 1194 03ee D794      		ror r13
 1195 03f0 C794      		ror r12
 1196 03f2 0E94 0000 		call FetchNextCommandByte
 1197 03f6 682F      		mov r22,r24
 1198 03f8 C601      		movw r24,r12
 1199 03fa 0E94 0000 		call __eewr_byte_m32u4
 1200               	.L93:
 619:BootloaderCDC.c **** 
 620:BootloaderCDC.c **** 			/* Increment the address after use */
 621:BootloaderCDC.c **** 			CurrAddress += 2;
 1201               		.loc 1 621 0
 1202 03fe 8091 0000 		lds r24,CurrAddress
 1203 0402 9091 0000 		lds r25,CurrAddress+1
 1204 0406 A091 0000 		lds r26,CurrAddress+2
 1205 040a B091 0000 		lds r27,CurrAddress+3
 1206 040e 0296      		adiw r24,2
 1207 0410 A11D      		adc r26,__zero_reg__
 1208 0412 B11D      		adc r27,__zero_reg__
 1209               	.L94:
 1210 0414 8093 0000 		sts CurrAddress,r24
 1211 0418 9093 0000 		sts CurrAddress+1,r25
 1212 041c A093 0000 		sts CurrAddress+2,r26
 1213 0420 B093 0000 		sts CurrAddress+3,r27
 1214               	.LVL54:
 1215               	.L91:
 622:BootloaderCDC.c **** 
 623:BootloaderCDC.c **** 			/* Send confirmation byte back to the host */
 624:BootloaderCDC.c **** 			WriteNextResponseByte('\r');
 1216               		.loc 1 624 0
 1217 0424 8DE0      		ldi r24,lo8(13)
 1218 0426 00C0      		rjmp .L89
 1219               	.LVL55:
 1220               	.L70:
 625:BootloaderCDC.c **** 		}
 626:BootloaderCDC.c **** 		else if (Command == 'd')
 1221               		.loc 1 626 0
 1222 0428 8436      		cpi r24,lo8(100)
 1223 042a 01F4      		brne .L71
 627:BootloaderCDC.c **** 		{
 628:BootloaderCDC.c **** 			/* Read the EEPROM byte and write it to the endpoint */
 629:BootloaderCDC.c **** 			WriteNextResponseByte(eeprom_read_byte((uint8_t*)((intptr_t)(CurrAddress >> 1))));
 1224               		.loc 1 629 0
 1225 042c 8091 0000 		lds r24,CurrAddress
 1226 0430 9091 0000 		lds r25,CurrAddress+1
 1227 0434 A091 0000 		lds r26,CurrAddress+2
 1228 0438 B091 0000 		lds r27,CurrAddress+3
 1229 043c B695      		lsr r27
 1230 043e A795      		ror r26
 1231 0440 9795      		ror r25
 1232 0442 8795      		ror r24
 1233 0444 0E94 0000 		call __eerd_byte_m32u4
 1234 0448 0E94 0000 		call WriteNextResponseByte
 630:BootloaderCDC.c **** 
 631:BootloaderCDC.c **** 			/* Increment the address after use */
 632:BootloaderCDC.c **** 			CurrAddress += 2;
 1235               		.loc 1 632 0
 1236 044c 8091 0000 		lds r24,CurrAddress
 1237 0450 9091 0000 		lds r25,CurrAddress+1
 1238 0454 A091 0000 		lds r26,CurrAddress+2
 1239 0458 B091 0000 		lds r27,CurrAddress+3
 1240 045c 0296      		adiw r24,2
 1241 045e A11D      		adc r26,__zero_reg__
 1242 0460 B11D      		adc r27,__zero_reg__
 1243 0462 8093 0000 		sts CurrAddress,r24
 1244 0466 9093 0000 		sts CurrAddress+1,r25
 1245 046a A093 0000 		sts CurrAddress+2,r26
 1246 046e B093 0000 		sts CurrAddress+3,r27
 1247 0472 00C0      		rjmp .L29
 1248               	.L71:
 633:BootloaderCDC.c **** 		}
 634:BootloaderCDC.c **** 		else if (Command == 27)
 1249               		.loc 1 634 0
 1250 0474 8B31      		cpi r24,lo8(27)
 1251 0476 01F0      		breq .L29
 1252               	.L88:
 635:BootloaderCDC.c **** 		{
 636:BootloaderCDC.c **** 			/* Escape is sync, ignore */
 637:BootloaderCDC.c **** 		}
 638:BootloaderCDC.c **** 		else
 639:BootloaderCDC.c **** 		{
 640:BootloaderCDC.c **** 			/* Unknown command, return fail code */
 641:BootloaderCDC.c **** 			WriteNextResponseByte('?');
 1253               		.loc 1 641 0
 1254 0478 8FE3      		ldi r24,lo8(63)
 1255               	.LVL56:
 1256               	.L89:
 1257 047a 0E94 0000 		call WriteNextResponseByte
 1258               	.L29:
 1259               	.LVL57:
 1260               	.LBB184:
 1261               	.LBB185:
 351:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 					UENUM = EndpointNumber;
 1262               		.loc 2 351 0
 1263 047e 83E0      		ldi r24,lo8(3)
 1264 0480 8093 E900 		sts 233,r24
 1265               	.LBE185:
 1266               	.LBE184:
 1267               	.LBB186:
 1268               	.LBB187:
 410:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 1269               		.loc 2 410 0
 1270 0484 9091 E800 		lds r25,232
 1271               	.LVL58:
 1272               	.LBE187:
 1273               	.LBE186:
 1274               	.LBB188:
 1275               	.LBB189:
 506:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 1276               		.loc 2 506 0
 1277 0488 8091 E800 		lds r24,232
 1278 048c 8E77      		andi r24,lo8(126)
 1279 048e 8093 E800 		sts 232,r24
 1280               	.LBE189:
 1281               	.LBE188:
 642:BootloaderCDC.c **** 		}
 643:BootloaderCDC.c **** 
 644:BootloaderCDC.c **** 		/* Select the IN endpoint */
 645:BootloaderCDC.c **** 		Endpoint_SelectEndpoint(CDC_TX_EPNUM);
 646:BootloaderCDC.c **** 
 647:BootloaderCDC.c **** 		/* Remember if the endpoint is completely full before clearing it */
 648:BootloaderCDC.c **** 		bool IsEndpointFull = !(Endpoint_IsReadWriteAllowed());
 649:BootloaderCDC.c **** 
 650:BootloaderCDC.c **** 		/* Send the endpoint data to the host */
 651:BootloaderCDC.c **** 		Endpoint_ClearIN();
 652:BootloaderCDC.c **** 
 653:BootloaderCDC.c **** 		/* If a full endpoint's worth of data was sent, we need to send an empty packet afterwards to sig
 654:BootloaderCDC.c **** 		if (IsEndpointFull)
 1282               		.loc 1 654 0
 1283 0492 95FF      		sbrs r25,5
 1284 0494 00C0      		rjmp .L85
 1285 0496 00C0      		rjmp .L87
 1286               	.L74:
 655:BootloaderCDC.c **** 		{
 656:BootloaderCDC.c **** 			while (!(Endpoint_IsINReady()))
 657:BootloaderCDC.c **** 			{
 658:BootloaderCDC.c **** 				if (USB_DeviceState == DEVICE_STATE_Unattached)
 1287               		.loc 1 658 0
 1288 0498 8EB3      		in r24,62-32
 1289 049a 8823      		tst r24
 1290 049c 01F0      		breq .L24
 1291               	.L85:
 1292               	.LBB190:
 1293               	.LBB191:
 457:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 1294               		.loc 2 457 0 discriminator 1
 1295 049e 8091 E800 		lds r24,232
 1296               	.LBE191:
 1297               	.LBE190:
 656:BootloaderCDC.c **** 			while (!(Endpoint_IsINReady()))
 1298               		.loc 1 656 0 discriminator 1
 1299 04a2 80FF      		sbrs r24,0
 1300 04a4 00C0      		rjmp .L74
 1301               	.LBB192:
 1302               	.LBB193:
 506:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 1303               		.loc 2 506 0
 1304 04a6 8091 E800 		lds r24,232
 1305 04aa 8E77      		andi r24,lo8(126)
 1306 04ac 8093 E800 		sts 232,r24
 1307 04b0 00C0      		rjmp .L87
 1308               	.L76:
 1309               	.LBE193:
 1310               	.LBE192:
 659:BootloaderCDC.c **** 				  return;
 660:BootloaderCDC.c **** 			}
 661:BootloaderCDC.c **** 
 662:BootloaderCDC.c **** 			Endpoint_ClearIN();
 663:BootloaderCDC.c **** 		}
 664:BootloaderCDC.c **** 
 665:BootloaderCDC.c **** 		/* Wait until the data has been sent to the host */
 666:BootloaderCDC.c **** 		while (!(Endpoint_IsINReady()))
 667:BootloaderCDC.c **** 		{
 668:BootloaderCDC.c **** 			if (USB_DeviceState == DEVICE_STATE_Unattached)
 1311               		.loc 1 668 0
 1312 04b2 8EB3      		in r24,62-32
 1313 04b4 8823      		tst r24
 1314 04b6 01F0      		breq .L24
 1315               	.L87:
 1316               	.LBB194:
 1317               	.LBB195:
 457:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 1318               		.loc 2 457 0 discriminator 1
 1319 04b8 8091 E800 		lds r24,232
 1320               	.LBE195:
 1321               	.LBE194:
 666:BootloaderCDC.c **** 		while (!(Endpoint_IsINReady()))
 1322               		.loc 1 666 0 discriminator 1
 1323 04bc 80FF      		sbrs r24,0
 1324 04be 00C0      		rjmp .L76
 1325               	.LVL59:
 1326               	.LBB196:
 1327               	.LBB197:
 351:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 					UENUM = EndpointNumber;
 1328               		.loc 2 351 0
 1329 04c0 84E0      		ldi r24,lo8(4)
 1330 04c2 8093 E900 		sts 233,r24
 1331               	.LBE197:
 1332               	.LBE196:
 1333               	.LBB198:
 1334               	.LBB199:
 521:../../LUFA/Drivers/USB/HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 1335               		.loc 2 521 0
 1336 04c6 8091 E800 		lds r24,232
 1337 04ca 8B77      		andi r24,lo8(123)
 1338 04cc 8093 E800 		sts 232,r24
 1339               	.LVL60:
 1340               	.L24:
 1341               	/* epilogue start */
 1342               	.LBE199:
 1343               	.LBE198:
 1344               	.LBE170:
 669:BootloaderCDC.c **** 			  return;
 670:BootloaderCDC.c **** 		}
 671:BootloaderCDC.c **** 
 672:BootloaderCDC.c **** 		/* Select the OUT endpoint */
 673:BootloaderCDC.c **** 		Endpoint_SelectEndpoint(CDC_RX_EPNUM);
 674:BootloaderCDC.c **** 
 675:BootloaderCDC.c **** 		/* Acknowledge the command from the host */
 676:BootloaderCDC.c **** 		Endpoint_ClearOUT();
 677:BootloaderCDC.c **** 	}
 678:BootloaderCDC.c **** }
 1345               		.loc 1 678 0
 1346 04d0 DF91      		pop r29
 1347 04d2 CF91      		pop r28
 1348 04d4 1F91      		pop r17
 1349 04d6 0F91      		pop r16
 1350 04d8 FF90      		pop r15
 1351 04da EF90      		pop r14
 1352 04dc DF90      		pop r13
 1353 04de CF90      		pop r12
 1354 04e0 BF90      		pop r11
 1355 04e2 AF90      		pop r10
 1356 04e4 9F90      		pop r9
 1357 04e6 8F90      		pop r8
 1358 04e8 7F90      		pop r7
 1359 04ea 6F90      		pop r6
 1360 04ec 5F90      		pop r5
 1361 04ee 4F90      		pop r4
 1362 04f0 0895      		ret
 1363               		.cfi_endproc
 1364               	.LFE87:
 1366               		.section	.text.startup.main,"ax",@progbits
 1367               	.global	main
 1369               	main:
 1370               	.LFB80:
 114:BootloaderCDC.c **** {
 1371               		.loc 1 114 0
 1372               		.cfi_startproc
 1373 0000 CF93      		push r28
 1374               	.LCFI16:
 1375               		.cfi_def_cfa_offset 3
 1376               		.cfi_offset 28, -2
 1377 0002 DF93      		push r29
 1378               	.LCFI17:
 1379               		.cfi_def_cfa_offset 4
 1380               		.cfi_offset 29, -3
 1381 0004 0F92      		push __tmp_reg__
 1382               	.LCFI18:
 1383               		.cfi_def_cfa_offset 5
 1384 0006 CDB7      		in r28,__SP_L__
 1385 0008 DEB7      		in r29,__SP_H__
 1386               	.LCFI19:
 1387               		.cfi_def_cfa_register 28
 1388               	/* prologue: function */
 1389               	/* frame size = 1 */
 1390               	/* stack size = 3 */
 1391               	.L__stack_usage = 3
 116:BootloaderCDC.c ****   char ch = MCUSR;
 1392               		.loc 1 116 0
 1393 000a 84B7      		in r24,84-32
 1394               	.LVL61:
 117:BootloaderCDC.c ****   MCUSR = 0;
 1395               		.loc 1 117 0
 1396 000c 14BE      		out 84-32,__zero_reg__
 120:BootloaderCDC.c ****   WDTCSR |= _BV(WDCE) | _BV(WDE); // turn off watchdog timer!
 1397               		.loc 1 120 0
 1398 000e 9091 6000 		lds r25,96
 1399 0012 9861      		ori r25,lo8(24)
 1400 0014 9093 6000 		sts 96,r25
 121:BootloaderCDC.c ****   WDTCSR = 0;
 1401               		.loc 1 121 0
 1402 0018 1092 6000 		sts 96,__zero_reg__
 137:BootloaderCDC.c ****   boottimeout = 0;
 1403               		.loc 1 137 0
 1404 001c 1092 0000 		sts boottimeout,__zero_reg__
 139:BootloaderCDC.c ****   if (! (ch &  _BV(EXTRF)) &&  (pgm_read_word_near(0) != 0xFFFF)) {
 1405               		.loc 1 139 0
 1406 0020 90E0      		ldi r25,lo8(0)
 1407 0022 FC01      		movw r30,r24
 1408 0024 E270      		andi r30,lo8(2)
 1409 0026 F070      		andi r31,hi8(2)
 1410 0028 81FD      		sbrc r24,1
 1411 002a 00C0      		rjmp .L96
 1412               	.LVL62:
 1413               	.LBB200:
 139:BootloaderCDC.c ****   if (! (ch &  _BV(EXTRF)) &&  (pgm_read_word_near(0) != 0xFFFF)) {
 1414               		.loc 1 139 0 is_stmt 0 discriminator 1
 1415               	/* #APP */
 1416               	 ;  139 "BootloaderCDC.c" 1
 1417 002c 8591      		lpm r24, Z+
 1418 002e 9491      		lpm r25, Z
 1419               		
 1420               	 ;  0 "" 2
 1421               	.LVL63:
 1422               	/* #NOAPP */
 1423               	.LBE200:
 1424 0030 2FEF      		ldi r18,hi8(-1)
 1425 0032 8F3F      		cpi r24,lo8(-1)
 1426 0034 9207      		cpc r25,r18
 1427 0036 01F0      		breq .L96
 141:BootloaderCDC.c ****     app_start();  // skip bootloader
 1428               		.loc 1 141 0 is_stmt 1
 1429 0038 E091 0000 		lds r30,app_start
 1430 003c F091 0000 		lds r31,app_start+1
 1431 0040 0995      		icall
 1432               	.LVL64:
 1433               	.L96:
 147:BootloaderCDC.c **** 	SetupHardware();
 1434               		.loc 1 147 0
 1435 0042 0E94 0000 		call SetupHardware
 151:BootloaderCDC.c **** 	BOOTLOADERLED_DDR |= _BV( BOOTLOADERLED);
 1436               		.loc 1 151 0
 1437 0046 6E9A      		sbi 45-32,6
 152:BootloaderCDC.c **** 	BOOTLOADERLED_PORT |= _BV( BOOTLOADERLED);
 1438               		.loc 1 152 0
 1439 0048 769A      		sbi 46-32,6
 1440               	.LVL65:
 161:BootloaderCDC.c **** 	sei();
 1441               		.loc 1 161 0
 1442               	/* #APP */
 1443               	 ;  161 "BootloaderCDC.c" 1
 1444 004a 7894      		sei
 1445               	 ;  0 "" 2
 157:BootloaderCDC.c **** 	int8_t pulsedirection = 1;
 1446               		.loc 1 157 0
 1447               	/* #NOAPP */
 1448 004c 81E0      		ldi r24,lo8(1)
 156:BootloaderCDC.c **** 	uint8_t brightness = 0; // for the LED pulsing
 1449               		.loc 1 156 0
 1450 004e 10E0      		ldi r17,lo8(0)
 155:BootloaderCDC.c **** 	uint8_t pwmcounter = 0; // for the LED pulsing
 1451               		.loc 1 155 0
 1452 0050 00E0      		ldi r16,lo8(0)
 1453               	.LBB201:
 196:BootloaderCDC.c **** 		  if (pgm_read_word_near(0) != 0xFFFF) {
 1454               		.loc 1 196 0
 1455 0052 E0E0      		ldi r30,lo8(0)
 1456 0054 F0E0      		ldi r31,hi8(0)
 1457               	/* #APP */
 1458               	 ;  196 "BootloaderCDC.c" 1
 1459 0056 E590      		lpm r14, Z+
 1460 0058 F490      		lpm r15, Z
 1461               		
 1462               	 ;  0 "" 2
 1463               	/* #NOAPP */
 1464               	.LBE201:
 163:BootloaderCDC.c **** 	while (RunBootloader)
 1465               		.loc 1 163 0
 1466 005a 00C0      		rjmp .L107
 1467               	.LVL66:
 1468               	.L102:
 165:BootloaderCDC.c **** 		CDC_Task();
 1469               		.loc 1 165 0
 1470 005c 8983      		std Y+1,r24
 1471 005e 0E94 0000 		call CDC_Task
 1472               	.LVL67:
 166:BootloaderCDC.c **** 		USB_USBTask();
 1473               		.loc 1 166 0
 1474 0062 0E94 0000 		call USB_USBTask
 169:BootloaderCDC.c **** 		pwmcounter++;
 1475               		.loc 1 169 0
 1476 0066 0F5F      		subi r16,lo8(-(1))
 1477               	.LVL68:
 172:BootloaderCDC.c **** 		if (pwmcounter == 0) {
 1478               		.loc 1 172 0
 1479 0068 8981      		ldd r24,Y+1
 1480 006a 0023      		tst r16
 1481 006c 01F4      		brne .L98
 173:BootloaderCDC.c **** 		  brightness += pulsedirection;
 1482               		.loc 1 173 0
 1483 006e 180F      		add r17,r24
 1484               	.LVL69:
 174:BootloaderCDC.c **** 		  BOOTLOADERLED_PORT |= _BV( BOOTLOADERLED);
 1485               		.loc 1 174 0
 1486 0070 769A      		sbi 46-32,6
 1487               	.L98:
 178:BootloaderCDC.c **** 		if (pwmcounter == brightness) {
 1488               		.loc 1 178 0
 1489 0072 0117      		cp r16,r17
 1490 0074 01F4      		brne .L99
 179:BootloaderCDC.c **** 		  BOOTLOADERLED_PORT &= ~_BV( BOOTLOADERLED);
 1491               		.loc 1 179 0
 1492 0076 7698      		cbi 46-32,6
 1493               	.L99:
 183:BootloaderCDC.c **** 		if (brightness == 255) {
 1494               		.loc 1 183 0
 1495 0078 1F3F      		cpi r17,lo8(-1)
 1496 007a 01F0      		breq .L104
 1497               	.LVL70:
 186:BootloaderCDC.c **** 		if ((brightness == 0) && (pulsedirection != 1)) {
 1498               		.loc 1 186 0
 1499 007c 1123      		tst r17
 1500 007e 01F4      		brne .L100
 186:BootloaderCDC.c **** 		if ((brightness == 0) && (pulsedirection != 1)) {
 1501               		.loc 1 186 0 is_stmt 0 discriminator 1
 1502 0080 8130      		cpi r24,lo8(1)
 1503 0082 01F0      		breq .L100
 1504               	.LVL71:
 190:BootloaderCDC.c **** 		  boottimeout++;
 1505               		.loc 1 190 0 is_stmt 1
 1506 0084 8091 0000 		lds r24,boottimeout
 1507 0088 8F5F      		subi r24,lo8(-(1))
 1508 008a 8093 0000 		sts boottimeout,r24
 187:BootloaderCDC.c **** 		  pulsedirection = 1;
 1509               		.loc 1 187 0
 1510 008e 81E0      		ldi r24,lo8(1)
 1511 0090 00C0      		rjmp .L100
 1512               	.LVL72:
 1513               	.L104:
 184:BootloaderCDC.c **** 		  pulsedirection = -1;
 1514               		.loc 1 184 0
 1515 0092 8FEF      		ldi r24,lo8(-1)
 1516               	.L100:
 1517               	.LVL73:
 194:BootloaderCDC.c **** 		if (boottimeout >= BOOTLOADTIMEOUT) {
 1518               		.loc 1 194 0
 1519 0094 9091 0000 		lds r25,boottimeout
 1520 0098 9431      		cpi r25,lo8(20)
 1521 009a 00F0      		brlo .L107
 196:BootloaderCDC.c **** 		  if (pgm_read_word_near(0) != 0xFFFF) {
 1522               		.loc 1 196 0
 1523 009c 9FEF      		ldi r25,lo8(-1)
 1524 009e E916      		cp r14,r25
 1525 00a0 9FEF      		ldi r25,hi8(-1)
 1526 00a2 F906      		cpc r15,r25
 1527 00a4 01F0      		breq .L107
 198:BootloaderCDC.c **** 		    RunBootloader = false;
 1528               		.loc 1 198 0
 1529 00a6 1092 0000 		sts RunBootloader,__zero_reg__
 1530               	.LVL74:
 1531               	.L107:
 163:BootloaderCDC.c **** 	while (RunBootloader)
 1532               		.loc 1 163 0 discriminator 1
 1533 00aa 9091 0000 		lds r25,RunBootloader
 1534 00ae 9923      		tst r25
 1535 00b0 01F4      		brne .L102
 1536               	.LBB202:
 1537               	.LBB203:
 1538               		.file 5 "../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h"
   1:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** /*
   2:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****              LUFA Library
   3:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****      Copyright (C) Dean Camera, 2010.
   4:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 
   5:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****   dean [at] fourwalledcubicle [dot] com
   6:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****       www.fourwalledcubicle.com
   7:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** */
   8:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 
   9:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** /*
  10:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****   Copyright 2010  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 
  12:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****   Permission to use, copy, modify, distribute, and sell this
  13:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****   software and its documentation for any purpose is hereby granted
  14:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****   without fee, provided that the above copyright notice appear in
  15:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****   all copies and that both that the copyright notice and this
  16:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****   permission notice and warranty disclaimer appear in supporting
  17:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****   documentation, and that the name of the author not be used in
  18:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****   advertising or publicity pertaining to distribution of the
  19:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****   software without specific, written prior permission.
  20:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 
  21:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****   The author disclaim all warranties with regard to this
  22:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****   software, including all implied warranties of merchantability
  23:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****   and fitness.  In no event shall the author be liable for any
  24:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****   special, indirect or consequential damages or any damages
  25:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****   in an action of contract, negligence or other tortious action,
  27:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****   arising out of or in connection with the use or performance of
  28:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****   this software.
  29:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** */
  30:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 
  31:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** /** \file
  32:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****  *  \brief USB low level USB controller definitions.
  33:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****  *
  34:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****  *  This file contains structures, function prototypes and macros related to the low level configur
  35:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****  *  USB controller, to start, stop and reset the USB library core.
  36:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****  *
  37:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  38:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  39:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****  */
  40:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 
  41:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** /** \ingroup Group_USB
  42:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****  *  @defgroup Group_USBManagement USB Interface Management
  43:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****  *
  44:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****  *  Functions, macros, variables, enums and types related to the setup and management of the USB in
  45:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****  *
  46:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****  *  @{
  47:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h ****  */
  48:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 
  49:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** #ifndef __USBCONTROLLER_H__
  50:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** #define __USBCONTROLLER_H__
  51:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 
  52:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 	/* Includes: */
  53:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 		#include <avr/io.h>
  54:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 		#include <avr/interrupt.h>
  55:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 		#include <stdbool.h>
  56:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 
  57:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 		#include "../HighLevel/USBMode.h"
  58:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 
  59:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 		#include "../../../Common/Common.h"
  60:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 		#include "../HighLevel/USBMode.h"
  61:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 		#include "../HighLevel/Events.h"
  62:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 		#include "../HighLevel/USBTask.h"
  63:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 		#include "USBInterrupt.h"
  64:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 
  65:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 		#if defined(USB_CAN_BE_HOST) || defined(__DOXYGEN__)
  66:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			#include "Host.h"
  67:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			#include "OTG.h"
  68:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			#include "Pipe.h"
  69:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			#include "../HighLevel/HostStandardReq.h"
  70:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			#include "../HighLevel/PipeStream.h"
  71:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 		#endif
  72:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 
  73:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 		#if defined(USB_CAN_BE_DEVICE) || defined(__DOXYGEN__)
  74:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			#include "Device.h"
  75:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			#include "Endpoint.h"
  76:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			#include "../HighLevel/DeviceStandardReq.h"
  77:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			#include "../HighLevel/EndpointStream.h"
  78:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 		#endif
  79:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 
  80:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 	/* Enable C linkage for C++ Compilers: */
  81:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 		#if defined(__cplusplus)
  82:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			extern "C" {
  83:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 		#endif
  84:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 
  85:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 	/* Preprocessor Checks and Defines: */
  86:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  87:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  88:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 		#endif
  89:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 
  90:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 		#if !defined(F_CLOCK)
  91:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			#error F_CLOCK is not defined. You must define F_CLOCK to the frequency of the unprescaled input
  92:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 		#endif
  93:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 
  94:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 		#if (F_CLOCK == 8000000)
  95:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			#if (defined(__AVR_AT90USB82__) || defined(__AVR_AT90USB162__) || \
  96:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			     defined(__AVR_ATmega8U2__) || defined(__AVR_ATmega16U2__) || \
  97:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			     defined(__AVR_ATmega32U2__))
  98:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 				#define USB_PLL_PSC                0
  99:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			#elif (defined(__AVR_ATmega16U4__) || defined(__AVR_ATmega32U4__))
 100:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 				#define USB_PLL_PSC                0
 101:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			#elif (defined(__AVR_AT90USB646__)  || defined(__AVR_AT90USB1286__) || defined(__AVR_ATmega32U6_
 102:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 				#define USB_PLL_PSC                ((1 << PLLP1) | (1 << PLLP0))
 103:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			#elif (defined(__AVR_AT90USB647__)  || defined(__AVR_AT90USB1287__))
 104:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 				#define USB_PLL_PSC                ((1 << PLLP1) | (1 << PLLP0))
 105:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			#endif
 106:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 		#elif (F_CLOCK == 16000000)
 107:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			#if (defined(__AVR_AT90USB82__) || defined(__AVR_AT90USB162__) || \
 108:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			     defined(__AVR_ATmega8U2__) || defined(__AVR_ATmega16U2__) || \
 109:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			     defined(__AVR_ATmega32U2__))
 110:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 				#define USB_PLL_PSC                (1 << PLLP0)
 111:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			#elif (defined(__AVR_ATmega16U4__) || defined(__AVR_ATmega32U4__))
 112:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 				#define USB_PLL_PSC                (1 << PINDIV)
 113:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			#elif (defined(__AVR_AT90USB646__) || defined(__AVR_AT90USB647__) || defined(__AVR_ATmega32U6__)
 114:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 				#define USB_PLL_PSC                ((1 << PLLP2) | (1 << PLLP1))
 115:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			#elif (defined(__AVR_AT90USB1286__) || defined(__AVR_AT90USB1287__))
 116:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 				#define USB_PLL_PSC                ((1 << PLLP2) | (1 << PLLP0))
 117:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			#endif
 118:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 		#endif
 119:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 
 120:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 		#if !defined(USB_PLL_PSC)
 121:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			#error No PLL prescale value available for chosen F_CPU value and AVR model.
 122:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 		#endif
 123:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 
 124:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 	/* Public Interface - May be used in end-application: */
 125:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 		/* Macros: */
 126:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			/** Regulator disable option mask for \ref USB_Init(). This indicates that the internal 3.3V USB
 127:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			 *  regulator should be enabled to regulate the data pin voltages to within the USB standard.
 128:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			 *
 129:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			 *  \note See USB AVR data sheet for more information on the internal pad regulator.
 130:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			 */
 131:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			#define USB_OPT_REG_DISABLED               (1 << 1)
 132:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 
 133:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			/** Regulator enable option mask for \ref USB_Init(). This indicates that the internal 3.3V USB 
 134:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			 *  regulator should be disabled and the AVR's VCC level used for the data pads.
 135:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			 *
 136:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			 *  \note See USB AVR data sheet for more information on the internal pad regulator.
 137:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			 */
 138:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			#define USB_OPT_REG_ENABLED                (0 << 1)
 139:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 
 140:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			/** Manual PLL control option mask for \ref USB_Init(). This indicates to the library that the u
 141:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			 *  will take full responsibility for controlling the AVR's PLL (used to generate the high frequ
 142:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			 *  that the USB controller requires) and ensuring that it is locked at the correct frequency fo
 143:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			 */
 144:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			#define USB_OPT_MANUAL_PLL                 (1 << 2)
 145:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 
 146:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			/** Automatic PLL control option mask for \ref USB_Init(). This indicates to the library that th
 147:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			 *  take full responsibility for controlling the AVR's PLL (used to generate the high frequency 
 148:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			 *  that the USB controller requires) and ensuring that it is locked at the correct frequency fo
 149:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			 */
 150:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			#define USB_OPT_AUTO_PLL                   (0 << 2)
 151:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 
 152:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			/** Mask for a CONTROL type endpoint or pipe.
 153:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			 *
 154:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			 *  \note See \ref Group_EndpointManagement and \ref Group_PipeManagement for endpoint/pipe func
 155:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			 */
 156:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			#define EP_TYPE_CONTROL                    0x00
 157:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 
 158:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			/** Mask for an ISOCHRONOUS type endpoint or pipe.
 159:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			 *
 160:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			 *  \note See \ref Group_EndpointManagement and \ref Group_PipeManagement for endpoint/pipe func
 161:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			 */
 162:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			#define EP_TYPE_ISOCHRONOUS                0x01
 163:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 
 164:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			/** Mask for a BULK type endpoint or pipe.
 165:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			 *
 166:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			 *  \note See \ref Group_EndpointManagement and \ref Group_PipeManagement for endpoint/pipe func
 167:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			 */
 168:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			#define EP_TYPE_BULK                       0x02
 169:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 
 170:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			/** Mask for an INTERRUPT type endpoint or pipe.
 171:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			 *
 172:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			 *  \note See \ref Group_EndpointManagement and \ref Group_PipeManagement for endpoint/pipe func
 173:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			 */
 174:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			#define EP_TYPE_INTERRUPT                  0x03
 175:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 
 176:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			#if !defined(USB_STREAM_TIMEOUT_MS) || defined(__DOXYGEN__)
 177:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 				/** Constant for the maximum software timeout period of the USB data stream transfer functions
 178:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 				 *  (both control and standard) when in either device or host mode. If the next packet of a str
 179:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 				 *  is not received or acknowledged within this time period, the stream function will fail.
 180:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 				 *
 181:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 				 *  This value may be overridden in the user project makefile as the value of the
 182:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 				 *  \ref USB_STREAM_TIMEOUT_MS token, and passed to the compiler using the -D switch.
 183:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 				 */
 184:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 				#define USB_STREAM_TIMEOUT_MS       100
 185:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			#endif
 186:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 
 187:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 		/* Inline Functions: */
 188:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defin
 189:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 				/** Returns boolean true if the VBUS line is currently high (i.e. the USB host is supplying pow
 190:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 				 *  otherwise returns false.
 191:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 				 *
 192:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 				 *  \note This function is not available on some AVR models which do not support hardware VBUS 
 193:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 				 */
 194:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 				static inline bool USB_VBUS_GetStatus(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 195:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 				static inline bool USB_VBUS_GetStatus(void)
 196:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 				{
 197:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 					return ((USBSTA & (1 << VBUS)) ? true : false);
 198:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 				}
 199:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			#endif
 200:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 
 201:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			/** Detaches the device from the USB bus. This has the effect of removing the device from any
 202:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			 *  attached host, ceasing USB communications. If no host is present, this prevents any host fro
 203:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			 *  enumerating the device once attached until \ref USB_Attach() is called.
 204:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			 */
 205:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			static inline void USB_Detach(void) ATTR_ALWAYS_INLINE;
 206:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			static inline void USB_Detach(void)
 207:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 			{
 208:../../LUFA/Drivers/USB/HighLevel/../LowLevel/USBController.h **** 				UDCON  |=  (1 << DETACH);
 1539               		.loc 5 208 0
 1540 00b2 8091 E000 		lds r24,224
 1541               	.LVL75:
 1542 00b6 8160      		ori r24,lo8(1)
 1543 00b8 8093 E000 		sts 224,r24
 1544               	.LBE203:
 1545               	.LBE202:
 207:BootloaderCDC.c **** 	wdt_enable(WDTO_250MS);
 1546               		.loc 1 207 0
 1547 00bc 2CE0      		ldi r18,lo8(12)
 1548 00be 88E1      		ldi r24,lo8(24)
 1549 00c0 90E0      		ldi r25,hi8(24)
 1550               	/* #APP */
 1551               	 ;  207 "BootloaderCDC.c" 1
 1552 00c2 0FB6      		in __tmp_reg__,__SREG__
 1553 00c4 F894      		cli
 1554 00c6 A895      		wdr
 1555 00c8 8093 6000 		sts 96,r24
 1556 00cc 0FBE      		out __SREG__,__tmp_reg__
 1557 00ce 2093 6000 		sts 96,r18
 1558               		
 1559               	 ;  0 "" 2
 1560               	/* #NOAPP */
 1561               	.L103:
 1562 00d2 00C0      		rjmp .L103
 1563               		.cfi_endproc
 1564               	.LFE80:
 1566               	.global	app_start
 1567               	.global	app_start
 1568               		.section .bss
 1571               	app_start:
 1572 0000 0000      		.skip 2,0
 1573               	.global	boottimeout
 1574               	.global	boottimeout
 1577               	boottimeout:
 1578 0002 00        		.skip 1,0
 1579               	.global	RunBootloader
 1580               		.data
 1583               	RunBootloader:
 1584 0008 01        		.byte	1
 1585               		.comm CurrAddress,4,1
 1586               	.global	LineEncoding
 1589               	LineEncoding:
 1590 0009 00        		.byte	0
 1591 000a 00        		.byte	0
 1592 000b 00        		.byte	0
 1593 000c 00        		.byte	0
 1594 000d 00        		.byte	0
 1595 000e 00        		.byte	0
 1596 000f 08        		.byte	8
 1597               		.text
 1598               	.Letext0:
 1599               		.file 6 "c:\\program files (x86)\\atmel\\avr tools\\avr toolchain\\bin\\../lib/gcc/avr/4.6.2/../..
 1600               		.file 7 "../../LUFA/Drivers/USB/HighLevel/../LowLevel/../HighLevel/StdRequestType.h"
 1601               		.file 8 "BootloaderCDC.h"
 1602               		.file 9 "../../LUFA/Drivers/USB/HighLevel/../LowLevel/Device.h"
 1603               		.file 10 "../../LUFA/Drivers/USB/HighLevel/USBTask.h"
DEFINED SYMBOLS
                            *ABS*:00000000 BootloaderCDC.c
C:\Users\Brian\AppData\Local\Temp\ccl9E4GO.s:2      *ABS*:0000003f __SREG__
C:\Users\Brian\AppData\Local\Temp\ccl9E4GO.s:3      *ABS*:0000003e __SP_H__
C:\Users\Brian\AppData\Local\Temp\ccl9E4GO.s:4      *ABS*:0000003d __SP_L__
C:\Users\Brian\AppData\Local\Temp\ccl9E4GO.s:5      *ABS*:00000034 __CCP__
C:\Users\Brian\AppData\Local\Temp\ccl9E4GO.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\Brian\AppData\Local\Temp\ccl9E4GO.s:7      *ABS*:00000001 __zero_reg__
C:\Users\Brian\AppData\Local\Temp\ccl9E4GO.s:15     .text.FetchNextCommandByte:00000000 FetchNextCommandByte
C:\Users\Brian\AppData\Local\Temp\ccl9E4GO.s:87     .text.WriteNextResponseByte:00000000 WriteNextResponseByte
C:\Users\Brian\AppData\Local\Temp\ccl9E4GO.s:153    .text.blink:00000000 blink
C:\Users\Brian\AppData\Local\Temp\ccl9E4GO.s:232    .text.USBConnected:00000000 USBConnected
C:\Users\Brian\AppData\Local\Temp\ccl9E4GO.s:269    .text.SetupHardware:00000000 SetupHardware
C:\Users\Brian\AppData\Local\Temp\ccl9E4GO.s:328    .text.EVENT_USB_Device_ConfigurationChanged:00000000 EVENT_USB_Device_ConfigurationChanged
C:\Users\Brian\AppData\Local\Temp\ccl9E4GO.s:373    .text.EVENT_USB_Device_UnhandledControlRequest:00000000 EVENT_USB_Device_UnhandledControlRequest
C:\Users\Brian\AppData\Local\Temp\ccl9E4GO.s:1589   .data:00000009 LineEncoding
C:\Users\Brian\AppData\Local\Temp\ccl9E4GO.s:452    .text.CDC_Task:00000000 CDC_Task
C:\Users\Brian\AppData\Local\Temp\ccl9E4GO.s:1577   .bss:00000002 boottimeout
C:\Users\Brian\AppData\Local\Temp\ccl9E4GO.s:1583   .data:00000008 RunBootloader
                            *COM*:00000004 CurrAddress
C:\Users\Brian\AppData\Local\Temp\ccl9E4GO.s:1369   .text.startup.main:00000000 main
C:\Users\Brian\AppData\Local\Temp\ccl9E4GO.s:1571   .bss:00000000 app_start

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
USB_Init
Endpoint_ConfigureEndpoint_Prv
USB_ControlRequest
Endpoint_Write_Control_Stream_LE
Endpoint_Read_Control_Stream_LE
__eerd_byte_m32u4
__eewr_byte_m32u4
USB_USBTask
