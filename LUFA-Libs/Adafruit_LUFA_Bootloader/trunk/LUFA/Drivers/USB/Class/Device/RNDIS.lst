   1               		.file	"RNDIS.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  10               		.text
  11               	.Ltext0:
  12               		.cfi_sections	.debug_frame
  13               		.section	.text.RNDIS_Device_ProcessControlRequest,"ax",@progbits
  14               	.global	RNDIS_Device_ProcessControlRequest
  16               	RNDIS_Device_ProcessControlRequest:
  17               	.LFB71:
  18               		.file 1 "../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c"
   1:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** /*
   2:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****              LUFA Library
   3:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****      Copyright (C) Dean Camera, 2010.
   4:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
   5:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   dean [at] fourwalledcubicle [dot] com
   6:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****       www.fourwalledcubicle.com
   7:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** */
   8:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
   9:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** /*
  10:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   Copyright 2010  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
  12:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   Permission to use, copy, modify, distribute, and sell this
  13:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   software and its documentation for any purpose is hereby granted
  14:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   without fee, provided that the above copyright notice appear in
  15:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   all copies and that both that the copyright notice and this
  16:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   permission notice and warranty disclaimer appear in supporting
  17:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   documentation, and that the name of the author not be used in
  18:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   advertising or publicity pertaining to distribution of the
  19:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   software without specific, written prior permission.
  20:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
  21:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   The author disclaim all warranties with regard to this
  22:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   software, including all implied warranties of merchantability
  23:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   and fitness.  In no event shall the author be liable for any
  24:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   special, indirect or consequential damages or any damages
  25:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   whatsoever resulting from loss of use, data or profits, whether
  26:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   in an action of contract, negligence or other tortious action,
  27:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   arising out of or in connection with the use or performance of
  28:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****   this software.
  29:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** */
  30:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
  31:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** #define  __INCLUDE_FROM_USB_DRIVER
  32:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** #include "../../HighLevel/USBMode.h"
  33:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** #if defined(USB_CAN_BE_DEVICE)
  34:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
  35:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** #define  __INCLUDE_FROM_RNDIS_CLASS_DEVICE_C
  36:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** #define  __INCLUDE_FROM_RNDIS_DRIVER
  37:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** #include "RNDIS.h"
  38:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
  39:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** static const uint32_t PROGMEM AdapterSupportedOIDList[]  =
  40:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
  41:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_SUPPORTED_LIST,
  42:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_PHYSICAL_MEDIUM,
  43:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_HARDWARE_STATUS,
  44:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_MEDIA_SUPPORTED,
  45:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_MEDIA_IN_USE,
  46:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_MAXIMUM_FRAME_SIZE,
  47:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_MAXIMUM_TOTAL_SIZE,
  48:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_LINK_SPEED,
  49:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_TRANSMIT_BLOCK_SIZE,
  50:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_RECEIVE_BLOCK_SIZE,
  51:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_VENDOR_ID,
  52:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_VENDOR_DESCRIPTION,
  53:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_CURRENT_PACKET_FILTER,
  54:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_MAXIMUM_TOTAL_SIZE,
  55:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_MEDIA_CONNECT_STATUS,
  56:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_XMIT_OK,
  57:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_RCV_OK,
  58:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_XMIT_ERROR,
  59:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_RCV_ERROR,
  60:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_GEN_RCV_NO_BUFFER,
  61:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_802_3_PERMANENT_ADDRESS,
  62:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_802_3_CURRENT_ADDRESS,
  63:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_802_3_MULTICAST_LIST,
  64:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_802_3_MAXIMUM_LIST_SIZE,
  65:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_802_3_RCV_ERROR_ALIGNMENT,
  66:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_802_3_XMIT_ONE_COLLISION,
  67:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		OID_802_3_XMIT_MORE_COLLISIONS,
  68:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	};
  69:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
  70:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** void RNDIS_Device_ProcessControlRequest(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo)
  71:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** {
  19               		.loc 1 71 0
  20               		.cfi_startproc
  21               	.LVL0:
  22 0000 0F93      		push r16
  23               	.LCFI0:
  24               		.cfi_def_cfa_offset 3
  25               		.cfi_offset 16, -2
  26 0002 1F93      		push r17
  27               	.LCFI1:
  28               		.cfi_def_cfa_offset 4
  29               		.cfi_offset 17, -3
  30 0004 CF93      		push r28
  31               	.LCFI2:
  32               		.cfi_def_cfa_offset 5
  33               		.cfi_offset 28, -4
  34 0006 DF93      		push r29
  35               	.LCFI3:
  36               		.cfi_def_cfa_offset 6
  37               		.cfi_offset 29, -5
  38               	/* prologue: function */
  39               	/* frame size = 0 */
  40               	/* stack size = 4 */
  41               	.L__stack_usage = 4
  42 0008 8C01      		movw r16,r24
  43               	.LBB61:
  44               	.LBB62:
  45               		.file 2 "../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h"
   1:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** /*
   2:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****              LUFA Library
   3:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****      Copyright (C) Dean Camera, 2010.
   4:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
   5:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   dean [at] fourwalledcubicle [dot] com
   6:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****       www.fourwalledcubicle.com
   7:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** */
   8:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
   9:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** /*
  10:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   Copyright 2010  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  12:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   Permission to use, copy, modify, distribute, and sell this
  13:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   software and its documentation for any purpose is hereby granted
  14:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   without fee, provided that the above copyright notice appear in
  15:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   all copies and that both that the copyright notice and this
  16:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   permission notice and warranty disclaimer appear in supporting
  17:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   documentation, and that the name of the author not be used in
  18:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   advertising or publicity pertaining to distribution of the
  19:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   software without specific, written prior permission.
  20:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  21:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   The author disclaim all warranties with regard to this
  22:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   software, including all implied warranties of merchantability
  23:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   and fitness.  In no event shall the author be liable for any
  24:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   special, indirect or consequential damages or any damages
  25:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   in an action of contract, negligence or other tortious action,
  27:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   arising out of or in connection with the use or performance of
  28:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   this software.
  29:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** */
  30:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  31:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** /** \file
  32:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  \brief USB device endpoint management definitions.
  33:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *
  34:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  This file contains structures, function prototypes and macros related to the management of the 
  35:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  data endpoints when the library is initialized in USB device mode.
  36:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *
  37:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  38:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  39:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  */
  40:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  41:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** /** \ingroup Group_EndpointManagement
  42:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  @defgroup Group_EndpointRW Endpoint Data Reading and Writing
  43:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *
  44:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  Functions, macros, variables, enums and types related to data reading and writing from and to e
  45:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  */
  46:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  47:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** /** \ingroup Group_EndpointRW
  48:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  @defgroup Group_EndpointPrimitiveRW Read/Write of Primitive Data Types
  49:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *
  50:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of primitive 
  51:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  from and to endpoints.
  52:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  */
  53:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  54:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** /** \ingroup Group_EndpointManagement
  55:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  @defgroup Group_EndpointPacketManagement Endpoint Packet Management
  56:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *
  57:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  Functions, macros, variables, enums and types related to packet management of endpoints.
  58:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  */
  59:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  60:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** /** \ingroup Group_USB
  61:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  @defgroup Group_EndpointManagement Endpoint Management
  62:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *
  63:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  Functions, macros and enums related to endpoint management when in USB Device mode. This
  64:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  module contains the endpoint management macros, as well as endpoint interrupt and data
  65:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  send/receive functions for various data types.
  66:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *
  67:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  @{
  68:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  */
  69:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  70:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** #ifndef __ENDPOINT_H__
  71:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** #define __ENDPOINT_H__
  72:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  73:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 	/* Includes: */
  74:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#include <avr/io.h>
  75:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#include <stdbool.h>
  76:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  77:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#include "../../../Common/Common.h"
  78:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#include "../HighLevel/USBTask.h"
  79:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#include "USBInterrupt.h"
  80:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  81:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 	/* Enable C linkage for C++ Compilers: */
  82:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#if defined(__cplusplus)
  83:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			extern "C" {
  84:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#endif
  85:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  86:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 	/* Preprocessor Checks: */
  87:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  88:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  89:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#endif
  90:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  91:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 	/* Private Interface - For use in library only: */
  92:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 	#if !defined(__DOXYGEN__)
  93:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		/* Macros: */
  94:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define _ENDPOINT_GET_MAXSIZE(EPIndex)         _ENDPOINT_GET_MAXSIZE2(ENDPOINT_DETAILS_EP ## EPI
  95:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define _ENDPOINT_GET_MAXSIZE2(EPDetails)      _ENDPOINT_GET_MAXSIZE3(EPDetails)
  96:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define _ENDPOINT_GET_MAXSIZE3(MaxSize, Banks) (MaxSize)
  97:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  98:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define _ENDPOINT_GET_BANKS(EPIndex)           _ENDPOINT_GET_BANKS2(ENDPOINT_DETAILS_EP ## EPInd
  99:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define _ENDPOINT_GET_BANKS2(EPDetails)        _ENDPOINT_GET_BANKS3(EPDetails)
 100:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define _ENDPOINT_GET_BANKS3(MaxSize, Banks)   (Banks)
 101:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 102:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 103:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_MAXEP             7
 104:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 105:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP0               64,  2
 106:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP1               256, 2
 107:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP2               64,  2
 108:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP3               64,  2
 109:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP4               64,  2
 110:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP5               64,  2
 111:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP6               64,  2
 112:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#else
 113:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_MAXEP             5
 114:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 115:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP0               64,  2
 116:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP1               64,  1
 117:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP2               64,  1
 118:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP3               64,  2
 119:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP4               64,  2
 120:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#endif
 121:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 122:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		/* Inline Functions: */
 123:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes) ATTR_WARN_UNUSED_RESULT A
 124:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                                       ATTR_ALWAYS_INLINE;
 125:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes)
 126:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 127:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				uint8_t  MaskVal    = 0;
 128:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				uint16_t CheckBytes = 8;
 129:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 130:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				while (CheckBytes < Bytes)
 131:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				{
 132:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					MaskVal++;
 133:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					CheckBytes <<= 1;
 134:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				}
 135:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 136:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return (MaskVal << EPSIZE0);
 137:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 138:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 139:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		/* Function Prototypes: */
 140:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			void Endpoint_ClearEndpoints(void);
 141:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			bool Endpoint_ConfigureEndpoint_Prv(const uint8_t Number,
 142:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                    const uint8_t UECFG0XData,
 143:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                    const uint8_t UECFG1XData);
 144:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 145:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 	#endif
 146:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 147:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 	/* Public Interface - May be used in end-application: */
 148:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		/* Macros: */
 149:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Endpoint data direction mask for \ref Endpoint_ConfigureEndpoint(). This indicates that the 
 150:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  should be initialized in the OUT direction - i.e. data flows from host to device.
 151:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 152:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_DIR_OUT                        (0 << EPDIR)
 153:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 154:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Endpoint data direction mask for \ref Endpoint_ConfigureEndpoint(). This indicates that the 
 155:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  should be initialized in the IN direction - i.e. data flows from device to host.
 156:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 157:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_DIR_IN                         (1 << EPDIR)
 158:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 159:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Mask for the bank mode selection for the \ref Endpoint_ConfigureEndpoint() macro. This indic
 160:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  that the endpoint should have one single bank, which requires less USB FIFO memory but resul
 161:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  in slower transfers as only one USB device (the AVR or the host) can access the endpoint's
 162:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  bank at the one time.
 163:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 164:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_BANK_SINGLE                    (0 << EPBK0)
 165:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 166:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Mask for the bank mode selection for the \ref Endpoint_ConfigureEndpoint() macro. This indic
 167:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  that the endpoint should have two banks, which requires more USB FIFO memory but results
 168:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  in faster transfers as one USB device (the AVR or the host) can access one bank while the ot
 169:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  accesses the second bank.
 170:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 171:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_BANK_DOUBLE                    (1 << EPBK0)
 172:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 173:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Endpoint address for the default control endpoint, which always resides in address 0. This i
 174:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  defined for convenience to give more readable code when used with the endpoint macros.
 175:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 176:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_CONTROLEP                      0
 177:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 178:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 179:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				/** Default size of the default control endpoint's bank, until altered by the control endpoint 
 180:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				 *  value in the device descriptor. Not available if the FIXED_CONTROL_ENDPOINT_SIZE token is d
 181:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				 */
 182:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_CONTROLEP_DEFAULT_SIZE     8
 183:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#endif
 184:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 185:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Endpoint number mask, for masking against endpoint addresses to retrieve the endpoint's
 186:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  numerical address in the device.
 187:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 188:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_EPNUM_MASK                     0x07
 189:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 190:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Endpoint direction mask, for masking against endpoint addresses to retrieve the endpoint's
 191:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction for comparing with the ENDPOINT_DESCRIPTOR_DIR_* masks.
 192:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 193:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_EPDIR_MASK                     0x80
 194:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 195:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Endpoint bank size mask, for masking against endpoint addresses to retrieve the endpoint's
 196:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  bank size in the device.
 197:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 198:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_EPSIZE_MASK                    0x7F
 199:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 200:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Maximum size in bytes of a given endpoint.
 201:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 202:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] EPIndex  Endpoint number, a value between 0 and (ENDPOINT_TOTAL_ENDPOINTS - 1)
 203:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 204:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_MAX_SIZE(EPIndex)              _ENDPOINT_GET_MAXSIZE(EPIndex)
 205:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 206:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Indicates the total number of banks supported by the given endpoint.
 207:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 208:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] EPIndex  Endpoint number, a value between 0 and (ENDPOINT_TOTAL_ENDPOINTS - 1)
 209:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 210:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_BANKS_SUPPORTED(EPIndex)       _ENDPOINT_GET_BANKS(EPIndex)
 211:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 212:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#if !defined(CONTROL_ONLY_DEVICE) || defined(__DOXYGEN__)
 213:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				/** Total number of endpoints (including the default control endpoint at address 0) which may
 214:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				 *  be used in the device. Different USB AVR models support different amounts of endpoints,
 215:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				 *  this value reflects the maximum number of endpoints for the currently selected AVR model.
 216:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				 */
 217:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            ENDPOINT_DETAILS_MAXEP
 218:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#else
 219:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            1
 220:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#endif
 221:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 222:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		/* Enums: */
 223:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Enum for the possible error return codes of the \ref Endpoint_WaitUntilReady() function.
 224:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 225:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointRW
 226:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 227:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			enum Endpoint_WaitUntilReady_ErrorCodes_t
 228:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 229:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_READYWAIT_NoError                 = 0, /**< Endpoint is ready for next packet, no erro
 230:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_READYWAIT_EndpointStalled         = 1, /**< The endpoint was stalled during the stream
 231:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 *   transfer by the host or device.
 232:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 */
 233:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_READYWAIT_DeviceDisconnected      = 2,	/**< Device was disconnected from the host whil
 234:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 *   waiting for the endpoint to become ready.
 235:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 */
 236:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_READYWAIT_BusSuspended            = 3, /**< The USB bus has been suspended by the host
 237:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 *   no USB endpoint traffic can occur until th
 238:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 *   has resumed.
 239:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 */
 240:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_READYWAIT_Timeout                 = 4, /**< The host failed to accept or send the next
 241:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 *   within the software timeout period set by 
 242:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 *   \ref USB_STREAM_TIMEOUT_MS macro.
 243:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 */
 244:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			};
 245:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 246:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		/* Inline Functions: */
 247:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Configures the specified endpoint number with the given endpoint type, direction, bank size
 248:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  and banking mode. Once configured, the endpoint may be read from or written to, depending
 249:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  on its direction.
 250:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 251:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Number     Endpoint number to configure. This must be more than 0 and less than
 252:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *                        \ref ENDPOINT_TOTAL_ENDPOINTS.
 253:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 254:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Type       Type of endpoint to configure, a EP_TYPE_* mask. Not all endpoint type
 255:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *                        are available on Low Speed USB devices - refer to the USB 2.0 specific
 256:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 257:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Direction  Endpoint data direction, either \ref ENDPOINT_DIR_OUT or \ref ENDPOINT
 258:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *                        All endpoints (except Control type) are unidirectional - data may only
 259:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *                        from or written to the endpoint bank based on its direction, not both.
 260:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 261:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Size       Size of the endpoint's bank, where packets are stored before they are 
 262:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *                        to the USB host, or after they have been received from the USB host (d
 263:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *                        the endpoint's data direction). The bank size must indicate the maximu
 264:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *                        that the endpoint can handle.
 265:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 266:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Banks      Number of banks to use for the endpoint being configured, an ENDPOINT_
 267:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *                        More banks uses more USB DPRAM, but offers better performance. Isochro
 268:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *                        endpoints <b>must</b> have at least two banks.
 269:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 270:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note Endpoints <b>must</b> be configured in ascending order, or bank corruption will occur.
 271:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
 272:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 273:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note Certain models of USB AVR's endpoints may have different maximum packet sizes based on
 274:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        index - refer to the chosen USB AVR's datasheet to determine the maximum bank size for
 275:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
 276:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 277:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note The default control endpoint should not be manually configured by the user application
 278:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        it is automatically configured by the library internally.
 279:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
 280:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 281:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine will automatically select the specified endpoint upon success. Upon failu
 282:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        which failed to reconfigure correctly will be selected.
 283:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 284:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if the configuration succeeded, false otherwise.
 285:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 286:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Number,
 287:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                              const uint8_t Type,
 288:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                              const uint8_t Direction,
 289:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                              const uint16_t Size,
 290:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                              const uint8_t Banks) ATTR_ALWAYS_INLINE;
 291:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Number,
 292:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                              const uint8_t Type,
 293:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                              const uint8_t Direction,
 294:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                              const uint16_t Size,
 295:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                              const uint8_t Banks)
 296:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 297:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number, (((Type) << EPTYPE0) | (Direction)),
 298:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                      ((1 << ALLOC) | Banks | Endpoint_BytesToEPSizeMask(Size))
 299:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 300:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 301:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Indicates the number of bytes currently stored in the current endpoint's selected bank.
 302:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 303:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note The return width of this function may differ, depending on the maximum endpoint bank s
 304:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        of the selected AVR model.
 305:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 306:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointRW
 307:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 308:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Total number of bytes in the currently selected Endpoint's FIFO buffer.
 309:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 310:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE
 311:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void)
 312:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 313:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#if defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 314:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					return UEBCX;
 315:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#elif defined(USB_SERIES_4_AVR)
 316:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					return (((uint16_t)UEBCHX << 8) | UEBCLX);
 317:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#elif defined(USB_SERIES_2_AVR)
 318:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					return UEBCLX;
 319:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#endif
 320:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 321:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 322:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Get the endpoint address of the currently selected endpoint. This is typically used to save
 323:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  the currently selected endpoint number so that it can be restored after another endpoint has
 324:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  been manipulated.
 325:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 326:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Index of the currently selected endpoint.
 327:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 328:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLI
 329:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
 330:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 331:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 332:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					return (UENUM & ENDPOINT_EPNUM_MASK);
 333:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#else
 334:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					return ENDPOINT_CONTROLEP;
 335:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#endif
 336:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 337:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 338:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Selects the given endpoint number. If the address from the device descriptors is used, the
 339:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  value should be masked with the \ref ENDPOINT_EPNUM_MASK constant to extract only the endpoi
 340:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  number (and discarding the endpoint direction bit).
 341:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 342:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  Any endpoint operations which do not require the endpoint number to be indicated will operat
 343:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  the currently selected endpoint.
 344:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 345:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] EndpointNumber Endpoint number to select.
 346:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 347:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t EndpointNumber) ATTR_ALWAYS_INLINE;
 348:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t EndpointNumber)
 349:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 350:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 351:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UENUM = EndpointNumber;
 352:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#endif
 353:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 354:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 355:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Resets the endpoint bank FIFO. This clears all the endpoint banks and resets the USB control
 356:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  In and Out pointers to the bank's contents.
 357:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 358:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] EndpointNumber Endpoint number whose FIFO buffers are to be reset.
 359:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 360:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ResetFIFO(const uint8_t EndpointNumber) ATTR_ALWAYS_INLINE;
 361:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ResetFIFO(const uint8_t EndpointNumber)
 362:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 363:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UERST = (1 << EndpointNumber);
 364:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UERST = 0;
 365:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 366:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 367:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Enables the currently selected endpoint so that data can be sent and received through it to
 368:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  and from a host.
 369:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 370:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note Endpoints must first be configured properly via \ref Endpoint_ConfigureEndpoint().
 371:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 372:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_EnableEndpoint(void) ATTR_ALWAYS_INLINE;
 373:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_EnableEndpoint(void)
 374:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 375:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UECONX |= (1 << EPEN);
 376:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 377:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 378:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Disables the currently selected endpoint so that data cannot be sent and received through it
 379:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  to and from a host.
 380:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 381:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_DisableEndpoint(void) ATTR_ALWAYS_INLINE;
 382:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_DisableEndpoint(void)
 383:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 384:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UECONX &= ~(1 << EPEN);
 385:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 386:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 387:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the currently selected endpoint is enabled, but not necessarily configured.
 388:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 389:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 * \return Boolean True if the currently selected endpoint is enabled, false otherwise.
 390:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 391:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsEnabled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 392:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsEnabled(void)
 393:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 394:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UECONX & (1 << EPEN)) ? true : false);
 395:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 396:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 397:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the currently selected endpoint may be read from (if data is waiting in the en
 398:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  bank and the endpoint is an OUT direction, or if the bank is not yet full if the endpoint is
 399:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction). This function will return false if an error has occurred in the endpoint, if the
 400:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  is an OUT direction and no packet (or an empty packet) has been received, or if the endpoint
 401:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction and the endpoint bank is full.
 402:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 403:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 404:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 405:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if the currently selected endpoint may be read from or written to, depe
 406:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 407:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 408:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void)
 409:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 410:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 411:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 412:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 413:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the currently selected endpoint is configured.
 414:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 415:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if the currently selected endpoint has been configured, false otherwise
 416:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 417:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsConfigured(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 418:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsConfigured(void)
 419:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 420:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UESTA0X & (1 << CFGOK)) ? true : false);
 421:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 422:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 423:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Returns a mask indicating which INTERRUPT type endpoints have interrupted - i.e. their
 424:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  interrupt duration has elapsed. Which endpoints have interrupted can be determined by
 425:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  masking the return value against (1 << {Endpoint Number}).
 426:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 427:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Mask whose bits indicate which endpoints have interrupted.
 428:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 429:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_I
 430:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void)
 431:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 432:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return UEINT;
 433:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 434:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 435:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the specified endpoint number has interrupted (valid only for INTERRUPT type
 436:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  endpoints).
 437:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 438:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] EndpointNumber  Index of the endpoint whose interrupt flag should be tested.
 439:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 440:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if the specified endpoint has interrupted, false otherwise.
 441:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 442:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t EndpointNumber) ATTR_WARN_UNUSE
 443:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t EndpointNumber)
 444:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 445:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINT & (1 << EndpointNumber)) ? true : false);
 446:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 447:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 448:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the selected IN endpoint is ready for a new packet to be sent to the host.
 449:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 450:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 451:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 452:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if the current endpoint is ready for an IN packet, false otherwise.
 453:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 454:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 455:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsINReady(void)
 456:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 457:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 458:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 459:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 460:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the selected OUT endpoint has received new packet from the host.
 461:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 462:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 463:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 464:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if current endpoint is has received an OUT packet, false otherwise.
 465:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 466:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 467:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsOUTReceived(void)
 468:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 469:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 470:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 471:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 472:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the current CONTROL type endpoint has received a SETUP packet.
 473:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 474:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 475:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 476:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if the selected endpoint has received a SETUP packet, false otherwise.
 477:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 478:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 479:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsSETUPReceived(void)
 480:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 481:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
  46               		.loc 2 481 0
  47 000a 8091 E800 		lds r24,232
  48               	.LVL1:
  49               	.LBE62:
  50               	.LBE61:
  72:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if (!(Endpoint_IsSETUPReceived()))
  51               		.loc 1 72 0
  52 000e 83FF      		sbrs r24,3
  53 0010 00C0      		rjmp .L1
  73:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	  return;
  74:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
  75:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if (USB_ControlRequest.wIndex != RNDISInterfaceInfo->Config.ControlInterfaceNumber)
  54               		.loc 1 75 0
  55 0012 F801      		movw r30,r16
  56 0014 8081      		ld r24,Z
  57 0016 90E0      		ldi r25,lo8(0)
  58 0018 2091 0000 		lds r18,USB_ControlRequest+4
  59 001c 3091 0000 		lds r19,USB_ControlRequest+4+1
  60 0020 2817      		cp r18,r24
  61 0022 3907      		cpc r19,r25
  62 0024 01F0      		breq .+2
  63 0026 00C0      		rjmp .L1
  76:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	  return;
  77:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
  78:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	switch (USB_ControlRequest.bRequest)
  64               		.loc 1 78 0
  65 0028 8091 0000 		lds r24,USB_ControlRequest+1
  66 002c 8823      		tst r24
  67 002e 01F0      		breq .L3
  68 0030 8130      		cpi r24,lo8(1)
  69 0032 01F0      		breq .+2
  70 0034 00C0      		rjmp .L1
  71 0036 00C0      		rjmp .L48
  72               	.L3:
  79:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
  80:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case RNDIS_REQ_SendEncapsulatedCommand:
  81:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE)
  73               		.loc 1 81 0
  74 0038 8091 0000 		lds r24,USB_ControlRequest
  75 003c 8132      		cpi r24,lo8(33)
  76 003e 01F0      		breq .+2
  77 0040 00C0      		rjmp .L1
  78               	.LBB63:
  79               	.LBB64:
 482:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 483:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 484:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Clears a received SETUP packet on the currently selected CONTROL type endpoint, freeing up t
 485:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  endpoint for the next packet.
 486:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 487:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 488:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 489:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This is not applicable for non CONTROL type endpoints.
 490:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 491:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
 492:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearSETUP(void)
 493:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 494:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEINTX &= ~(1 << RXSTPI);
  80               		.loc 2 494 0
  81 0042 8091 E800 		lds r24,232
  82 0046 877F      		andi r24,lo8(-9)
  83 0048 8093 E800 		sts 232,r24
  84               	.LBE64:
  85               	.LBE63:
  82:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			{
  83:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				Endpoint_ClearSETUP();
  84:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				Endpoint_Read_Control_Stream_LE(RNDISInterfaceInfo->State.RNDISMessageBuffer, USB_ControlReques
  86               		.loc 1 84 0
  87 004c 6091 0000 		lds r22,USB_ControlRequest+6
  88 0050 7091 0000 		lds r23,USB_ControlRequest+6+1
  89 0054 C801      		movw r24,r16
  90 0056 4596      		adiw r24,21
  91 0058 0E94 0000 		call Endpoint_Read_Control_Stream_LE
  92               	.LBB65:
  93               	.LBB66:
 495:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 496:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 497:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Sends an IN packet to the host on the currently selected endpoint, freeing up the endpoint f
 498:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  next packet and switching to the alternative endpoint bank if double banked.
 499:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 500:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 501:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 502:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
 503:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearIN(void)
 504:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 505:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 506:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
  94               		.loc 2 506 0
  95 005c 8091 E800 		lds r24,232
  96 0060 8E77      		andi r24,lo8(126)
  97 0062 8093 E800 		sts 232,r24
  98               	.LVL2:
  99               	.LBE66:
 100               	.LBE65:
 101               	.LBB67:
 102               	.LBB68:
  85:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				Endpoint_ClearIN();
  86:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
  87:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				RNDIS_Device_ProcessRNDISControlMessage(RNDISInterfaceInfo);
  88:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			}
  89:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
  90:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			break;
  91:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case RNDIS_REQ_GetEncapsulatedResponse:
  92:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_INTERFACE)
  93:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			{
  94:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				RNDIS_Message_Header_t* MessageHeader = (RNDIS_Message_Header_t*)&RNDISInterfaceInfo->State.RND
  95:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
  96:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				if (!(MessageHeader->MessageLength))
  97:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				{
  98:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 					RNDISInterfaceInfo->State.RNDISMessageBuffer[0] = 0;
  99:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 					MessageHeader->MessageLength = 1;
 100:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				}
 101:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 102:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				Endpoint_ClearSETUP();
 103:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				Endpoint_Write_Control_Stream_LE(RNDISInterfaceInfo->State.RNDISMessageBuffer, MessageHeader->M
 104:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				Endpoint_ClearOUT();
 105:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 106:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				MessageHeader->MessageLength = 0;
 107:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			}
 108:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 109:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			break;
 110:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	}
 111:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** }
 112:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 113:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** bool RNDIS_Device_ConfigureEndpoints(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo)
 114:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** {
 115:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	memset(&RNDISInterfaceInfo->State, 0x00, sizeof(RNDISInterfaceInfo->State));
 116:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 117:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	for (uint8_t EndpointNum = 1; EndpointNum < ENDPOINT_TOTAL_ENDPOINTS; EndpointNum++)
 118:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
 119:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		uint16_t Size;
 120:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		uint8_t  Type;
 121:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		uint8_t  Direction;
 122:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		bool     DoubleBanked;
 123:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 124:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		if (EndpointNum == RNDISInterfaceInfo->Config.DataINEndpointNumber)
 125:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		{
 126:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Size         = RNDISInterfaceInfo->Config.DataINEndpointSize;
 127:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Direction    = ENDPOINT_DIR_IN;
 128:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Type         = EP_TYPE_BULK;
 129:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			DoubleBanked = RNDISInterfaceInfo->Config.DataINEndpointDoubleBank;
 130:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		}
 131:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		else if (EndpointNum == RNDISInterfaceInfo->Config.DataOUTEndpointNumber)
 132:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		{
 133:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Size         = RNDISInterfaceInfo->Config.DataOUTEndpointSize;
 134:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Direction    = ENDPOINT_DIR_OUT;
 135:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Type         = EP_TYPE_BULK;
 136:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			DoubleBanked = RNDISInterfaceInfo->Config.DataOUTEndpointDoubleBank;
 137:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		}
 138:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		else if (EndpointNum == RNDISInterfaceInfo->Config.NotificationEndpointNumber)
 139:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		{
 140:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Size         = RNDISInterfaceInfo->Config.NotificationEndpointSize;
 141:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Direction    = ENDPOINT_DIR_IN;
 142:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Type         = EP_TYPE_INTERRUPT;
 143:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			DoubleBanked = RNDISInterfaceInfo->Config.NotificationEndpointDoubleBank;
 144:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		}
 145:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		else
 146:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		{
 147:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			continue;
 148:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		}
 149:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 150:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		if (!(Endpoint_ConfigureEndpoint(EndpointNum, Type, Direction, Size,
 151:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 										 DoubleBanked ? ENDPOINT_BANK_DOUBLE : ENDPOINT_BANK_SINGLE)))
 152:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		{
 153:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return false;
 154:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		}
 155:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	}
 156:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 157:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	return true;
 158:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** }
 159:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 160:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** void RNDIS_Device_USBTask(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo)
 161:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** {
 162:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if (USB_DeviceState != DEVICE_STATE_Configured)
 163:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	  return;
 164:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 165:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	RNDIS_Message_Header_t* MessageHeader = (RNDIS_Message_Header_t*)&RNDISInterfaceInfo->State.RNDISM
 166:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 167:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	Endpoint_SelectEndpoint(RNDISInterfaceInfo->Config.NotificationEndpointNumber);
 168:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 169:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if (Endpoint_IsINReady() && RNDISInterfaceInfo->State.ResponseReady)
 170:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
 171:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		USB_Request_Header_t Notification = (USB_Request_Header_t)
 172:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			{
 173:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				.bmRequestType = (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_INTERFACE),
 174:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				.bRequest      = RNDIS_NOTIF_ResponseAvailable,
 175:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				.wValue        = 0,
 176:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				.wIndex        = 0,
 177:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				.wLength       = 0,
 178:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			};
 179:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 180:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		Endpoint_Write_Stream_LE(&Notification, sizeof(USB_Request_Header_t), NO_STREAM_CALLBACK);
 181:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 182:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		Endpoint_ClearIN();
 183:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 184:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		RNDISInterfaceInfo->State.ResponseReady = false;
 185:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	}
 186:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 187:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if ((RNDISInterfaceInfo->State.CurrRNDISState == RNDIS_Data_Initialized) && !(MessageHeader->Messa
 188:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
 189:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		RNDIS_Packet_Message_t RNDISPacketHeader;
 190:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 191:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		Endpoint_SelectEndpoint(RNDISInterfaceInfo->Config.DataOUTEndpointNumber);
 192:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 193:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		if (Endpoint_IsOUTReceived() && !(RNDISInterfaceInfo->State.FrameIN.FrameInBuffer))
 194:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		{
 195:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Endpoint_Read_Stream_LE(&RNDISPacketHeader, sizeof(RNDIS_Packet_Message_t), NO_STREAM_CALLBACK);
 196:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 197:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			if (RNDISPacketHeader.DataLength > ETHERNET_FRAME_SIZE_MAX)
 198:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			{
 199:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				Endpoint_StallTransaction();
 200:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				return;
 201:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			}
 202:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 203:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Endpoint_Read_Stream_LE(RNDISInterfaceInfo->State.FrameIN.FrameData, RNDISPacketHeader.DataLengt
 204:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 205:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Endpoint_ClearOUT();
 206:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 207:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.FrameIN.FrameLength = RNDISPacketHeader.DataLength;
 208:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 209:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.FrameIN.FrameInBuffer = true;
 210:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		}
 211:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 212:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		Endpoint_SelectEndpoint(RNDISInterfaceInfo->Config.DataINEndpointNumber);
 213:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 214:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		if (Endpoint_IsINReady() && RNDISInterfaceInfo->State.FrameOUT.FrameInBuffer)
 215:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		{
 216:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			memset(&RNDISPacketHeader, 0, sizeof(RNDIS_Packet_Message_t));
 217:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 218:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISPacketHeader.MessageType   = REMOTE_NDIS_PACKET_MSG;
 219:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISPacketHeader.MessageLength = (sizeof(RNDIS_Packet_Message_t) + RNDISInterfaceInfo->State.Fr
 220:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISPacketHeader.DataOffset    = (sizeof(RNDIS_Packet_Message_t) - sizeof(RNDIS_Message_Header_
 221:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISPacketHeader.DataLength    = RNDISInterfaceInfo->State.FrameOUT.FrameLength;
 222:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 223:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Endpoint_Write_Stream_LE(&RNDISPacketHeader, sizeof(RNDIS_Packet_Message_t), NO_STREAM_CALLBACK)
 224:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Endpoint_Write_Stream_LE(RNDISInterfaceInfo->State.FrameOUT.FrameData, RNDISPacketHeader.DataLen
 225:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Endpoint_ClearIN();
 226:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 227:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.FrameOUT.FrameInBuffer = false;
 228:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		}
 229:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	}
 230:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** }
 231:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 232:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** void RNDIS_Device_ProcessRNDISControlMessage(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo
 233:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** {
 234:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	/* Note: Only a single buffer is used for both the received message and its response to save SRAM.
 235:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	         this, response bytes should be filled in order so that they do not clobber unread data in
 236:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 237:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	RNDIS_Message_Header_t* MessageHeader = (RNDIS_Message_Header_t*)&RNDISInterfaceInfo->State.RNDISM
 238:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 239:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	switch (MessageHeader->MessageType)
 103               		.loc 1 239 0
 104 0066 F801      		movw r30,r16
 105 0068 8589      		ldd r24,Z+21
 106 006a 9689      		ldd r25,Z+22
 107 006c A789      		ldd r26,Z+23
 108 006e B08D      		ldd r27,Z+24
 109 0070 8430      		cpi r24,lo8(4)
 110 0072 9105      		cpc r25,__zero_reg__
 111 0074 A105      		cpc r26,__zero_reg__
 112 0076 B105      		cpc r27,__zero_reg__
 113 0078 01F4      		brne .+2
 114 007a 00C0      		rjmp .L7
 115 007c 8530      		cpi r24,lo8(5)
 116 007e 9105      		cpc r25,__zero_reg__
 117 0080 A105      		cpc r26,__zero_reg__
 118 0082 B105      		cpc r27,__zero_reg__
 119 0084 00F4      		brsh .L11
 120 0086 8230      		cpi r24,lo8(2)
 121 0088 9105      		cpc r25,__zero_reg__
 122 008a A105      		cpc r26,__zero_reg__
 123 008c B105      		cpc r27,__zero_reg__
 124 008e 01F0      		breq .L5
 125 0090 8330      		cpi r24,lo8(3)
 126 0092 9105      		cpc r25,__zero_reg__
 127 0094 A105      		cpc r26,__zero_reg__
 128 0096 B105      		cpc r27,__zero_reg__
 129 0098 01F0      		breq .+2
 130 009a 00C0      		rjmp .L1
 131 009c 00C0      		rjmp .L49
 132               	.L11:
 133 009e 8630      		cpi r24,lo8(6)
 134 00a0 9105      		cpc r25,__zero_reg__
 135 00a2 A105      		cpc r26,__zero_reg__
 136 00a4 B105      		cpc r27,__zero_reg__
 137 00a6 01F4      		brne .+2
 138 00a8 00C0      		rjmp .L9
 139 00aa 8630      		cpi r24,lo8(6)
 140 00ac 9105      		cpc r25,__zero_reg__
 141 00ae A105      		cpc r26,__zero_reg__
 142 00b0 B105      		cpc r27,__zero_reg__
 143 00b2 00F4      		brsh .+2
 144 00b4 00C0      		rjmp .L8
 145 00b6 8830      		cpi r24,lo8(8)
 146 00b8 9105      		cpc r25,__zero_reg__
 147 00ba A105      		cpc r26,__zero_reg__
 148 00bc B105      		cpc r27,__zero_reg__
 149 00be 01F0      		breq .+2
 150 00c0 00C0      		rjmp .L1
 151 00c2 00C0      		rjmp .L50
 152               	.L5:
 153               	.LBB69:
 240:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
 241:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case REMOTE_NDIS_INITIALIZE_MSG:
 242:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.ResponseReady = true;
 154               		.loc 1 242 0
 155 00c4 F801      		movw r30,r16
 156 00c6 EB56      		subi r30,lo8(-(149))
 157 00c8 FF4F      		sbci r31,hi8(-(149))
 158 00ca 21E0      		ldi r18,lo8(1)
 159 00cc 2083      		st Z,r18
 160               	.LVL3:
 243:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 244:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDIS_Initialize_Message_t*  INITIALIZE_Message  =
 245:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			               (RNDIS_Initialize_Message_t*)&RNDISInterfaceInfo->State.RNDISMessageBuffer;
 246:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDIS_Initialize_Complete_t* INITIALIZE_Response =
 247:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			               (RNDIS_Initialize_Complete_t*)&RNDISInterfaceInfo->State.RNDISMessageBuffer;
 248:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 249:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->MessageType           = REMOTE_NDIS_INITIALIZE_CMPLT;
 161               		.loc 1 249 0
 162 00ce 82E0      		ldi r24,lo8(-2147483646)
 163 00d0 90E0      		ldi r25,hi8(-2147483646)
 164 00d2 A0E0      		ldi r26,hlo8(-2147483646)
 165 00d4 B0E8      		ldi r27,hhi8(-2147483646)
 166 00d6 F801      		movw r30,r16
 167 00d8 858B      		std Z+21,r24
 168 00da 968B      		std Z+22,r25
 169 00dc A78B      		std Z+23,r26
 170 00de B08F      		std Z+24,r27
 250:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->MessageLength         = sizeof(RNDIS_Initialize_Complete_t);
 171               		.loc 1 250 0
 172 00e0 84E3      		ldi r24,lo8(52)
 173 00e2 90E0      		ldi r25,hi8(52)
 174 00e4 A0E0      		ldi r26,hlo8(52)
 175 00e6 B0E0      		ldi r27,hhi8(52)
 176 00e8 818F      		std Z+25,r24
 177 00ea 928F      		std Z+26,r25
 178 00ec A38F      		std Z+27,r26
 179 00ee B48F      		std Z+28,r27
 251:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->RequestId             = INITIALIZE_Message->RequestId;
 252:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->Status                = REMOTE_NDIS_STATUS_SUCCESS;
 180               		.loc 1 252 0
 181 00f0 11A2      		std Z+33,__zero_reg__
 182 00f2 12A2      		std Z+34,__zero_reg__
 183 00f4 13A2      		std Z+35,__zero_reg__
 184 00f6 14A2      		std Z+36,__zero_reg__
 253:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 254:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->MajorVersion          = REMOTE_NDIS_VERSION_MAJOR;
 185               		.loc 1 254 0
 186 00f8 81E0      		ldi r24,lo8(1)
 187 00fa 90E0      		ldi r25,hi8(1)
 188 00fc A0E0      		ldi r26,hlo8(1)
 189 00fe B0E0      		ldi r27,hhi8(1)
 190 0100 85A3      		std Z+37,r24
 191 0102 96A3      		std Z+38,r25
 192 0104 A7A3      		std Z+39,r26
 193 0106 B0A7      		std Z+40,r27
 255:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->MinorVersion          = REMOTE_NDIS_VERSION_MINOR;
 194               		.loc 1 255 0
 195 0108 11A6      		std Z+41,__zero_reg__
 196 010a 12A6      		std Z+42,__zero_reg__
 197 010c 13A6      		std Z+43,__zero_reg__
 198 010e 14A6      		std Z+44,__zero_reg__
 256:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->DeviceFlags           = REMOTE_NDIS_DF_CONNECTIONLESS;
 199               		.loc 1 256 0
 200 0110 85A7      		std Z+45,r24
 201 0112 96A7      		std Z+46,r25
 202 0114 A7A7      		std Z+47,r26
 203 0116 B0AB      		std Z+48,r27
 257:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->Medium                = REMOTE_NDIS_MEDIUM_802_3;
 204               		.loc 1 257 0
 205 0118 11AA      		std Z+49,__zero_reg__
 206 011a 12AA      		std Z+50,__zero_reg__
 207 011c 13AA      		std Z+51,__zero_reg__
 208 011e 14AA      		std Z+52,__zero_reg__
 258:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->MaxPacketsPerTransfer = 1;
 209               		.loc 1 258 0
 210 0120 85AB      		std Z+53,r24
 211 0122 96AB      		std Z+54,r25
 212 0124 A7AB      		std Z+55,r26
 213 0126 B0AF      		std Z+56,r27
 259:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->MaxTransferSize       = (sizeof(RNDIS_Packet_Message_t) + ETHERNET_FRAME_SI
 214               		.loc 1 259 0
 215 0128 88E0      		ldi r24,lo8(1544)
 216 012a 96E0      		ldi r25,hi8(1544)
 217 012c A0E0      		ldi r26,hlo8(1544)
 218 012e B0E0      		ldi r27,hhi8(1544)
 219 0130 81AF      		std Z+57,r24
 220 0132 92AF      		std Z+58,r25
 221 0134 A3AF      		std Z+59,r26
 222 0136 B4AF      		std Z+60,r27
 260:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->PacketAlignmentFactor = 0;
 223               		.loc 1 260 0
 224 0138 FD96      		adiw r30,61
 225 013a 1082      		st Z,__zero_reg__
 226 013c 1182      		std Z+1,__zero_reg__
 227 013e 1282      		std Z+2,__zero_reg__
 228 0140 1382      		std Z+3,__zero_reg__
 261:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->AFListOffset          = 0;
 229               		.loc 1 261 0
 230 0142 F801      		movw r30,r16
 231 0144 EF5B      		subi r30,lo8(-(65))
 232 0146 FF4F      		sbci r31,hi8(-(65))
 233 0148 1082      		st Z,__zero_reg__
 234 014a 1182      		std Z+1,__zero_reg__
 235 014c 1282      		std Z+2,__zero_reg__
 236 014e 1382      		std Z+3,__zero_reg__
 262:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			INITIALIZE_Response->AFListSize            = 0;
 237               		.loc 1 262 0
 238 0150 F801      		movw r30,r16
 239 0152 EB5B      		subi r30,lo8(-(69))
 240 0154 FF4F      		sbci r31,hi8(-(69))
 241 0156 1082      		st Z,__zero_reg__
 242 0158 1182      		std Z+1,__zero_reg__
 243 015a 1282      		std Z+2,__zero_reg__
 244 015c 1382      		std Z+3,__zero_reg__
 263:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 264:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.CurrRNDISState = RNDIS_Initialized;
 245               		.loc 1 264 0
 246 015e F801      		movw r30,r16
 247 0160 EA56      		subi r30,lo8(-(150))
 248 0162 FF4F      		sbci r31,hi8(-(150))
 249 0164 2083      		st Z,r18
 250 0166 00C0      		rjmp .L1
 251               	.LVL4:
 252               	.L49:
 265:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 266:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			break;
 267:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case REMOTE_NDIS_HALT_MSG:
 268:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.ResponseReady = false;
 253               		.loc 1 268 0
 254 0168 F801      		movw r30,r16
 255 016a EB56      		subi r30,lo8(-(149))
 256 016c FF4F      		sbci r31,hi8(-(149))
 257 016e 1082      		st Z,__zero_reg__
 269:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			MessageHeader->MessageLength = 0;
 258               		.loc 1 269 0
 259 0170 F801      		movw r30,r16
 260 0172 118E      		std Z+25,__zero_reg__
 261 0174 128E      		std Z+26,__zero_reg__
 262 0176 138E      		std Z+27,__zero_reg__
 263 0178 148E      		std Z+28,__zero_reg__
 270:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 271:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.CurrRNDISState = RNDIS_Uninitialized;
 264               		.loc 1 271 0
 265 017a EA56      		subi r30,lo8(-(150))
 266 017c FF4F      		sbci r31,hi8(-(150))
 267 017e 1082      		st Z,__zero_reg__
 268 0180 00C0      		rjmp .L1
 269               	.L7:
 272:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 273:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			break;
 274:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case REMOTE_NDIS_QUERY_MSG:
 275:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.ResponseReady = true;
 270               		.loc 1 275 0
 271 0182 F801      		movw r30,r16
 272 0184 EB56      		subi r30,lo8(-(149))
 273 0186 FF4F      		sbci r31,hi8(-(149))
 274 0188 81E0      		ldi r24,lo8(1)
 275 018a 8083      		st Z,r24
 276               	.LVL5:
 276:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 277:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDIS_Query_Message_t*  QUERY_Message  = (RNDIS_Query_Message_t*)&RNDISInterfaceInfo->State.RNDI
 278:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDIS_Query_Complete_t* QUERY_Response = (RNDIS_Query_Complete_t*)&RNDISInterfaceInfo->State.RND
 279:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			uint32_t                Query_Oid      = QUERY_Message->Oid;
 277               		.loc 1 279 0
 278 018c F801      		movw r30,r16
 279 018e 81A1      		ldd r24,Z+33
 280 0190 92A1      		ldd r25,Z+34
 281 0192 A3A1      		ldd r26,Z+35
 282 0194 B4A1      		ldd r27,Z+36
 283               	.LVL6:
 280:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 281:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			void*     QueryData = &RNDISInterfaceInfo->State.RNDISMessageBuffer[sizeof(RNDIS_Message_Header_
 282:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			                                                                    QUERY_Message->InformationBu
 283:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			void*     ResponseData = &RNDISInterfaceInfo->State.RNDISMessageBuffer[sizeof(RNDIS_Query_Comple
 284               		.loc 1 283 0
 285 0196 9801      		movw r18,r16
 286 0198 235D      		subi r18,lo8(-(45))
 287 019a 3F4F      		sbci r19,hi8(-(45))
 288               	.LVL7:
 284:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			uint16_t  ResponseSize;
 285:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 286:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			QUERY_Response->MessageType   = REMOTE_NDIS_QUERY_CMPLT;
 289               		.loc 1 286 0
 290 019c 44E0      		ldi r20,lo8(-2147483644)
 291 019e 50E0      		ldi r21,hi8(-2147483644)
 292 01a0 60E0      		ldi r22,hlo8(-2147483644)
 293 01a2 70E8      		ldi r23,hhi8(-2147483644)
 294 01a4 458B      		std Z+21,r20
 295 01a6 568B      		std Z+22,r21
 296 01a8 678B      		std Z+23,r22
 297 01aa 708F      		std Z+24,r23
 287:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			QUERY_Response->MessageLength = sizeof(RNDIS_Query_Complete_t);
 298               		.loc 1 287 0
 299 01ac 48E1      		ldi r20,lo8(24)
 300 01ae 50E0      		ldi r21,hi8(24)
 301 01b0 60E0      		ldi r22,hlo8(24)
 302 01b2 70E0      		ldi r23,hhi8(24)
 303 01b4 418F      		std Z+25,r20
 304 01b6 528F      		std Z+26,r21
 305 01b8 638F      		std Z+27,r22
 306 01ba 748F      		std Z+28,r23
 307               	.LVL8:
 308               	.LBB70:
 309               	.LBB71:
 288:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 289:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			if (RNDIS_Device_ProcessNDISQuery(RNDISInterfaceInfo, Query_Oid, QueryData, QUERY_Message->Infor
 290:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			                                  ResponseData, &ResponseSize))
 291:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			{
 292:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->Status                  = REMOTE_NDIS_STATUS_SUCCESS;
 293:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->MessageLength          += ResponseSize;
 294:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 295:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->InformationBufferLength = ResponseSize;
 296:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->InformationBufferOffset = (sizeof(RNDIS_Query_Complete_t) - sizeof(RNDIS_Messag
 297:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			}
 298:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			else
 299:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			{
 300:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->Status                  = REMOTE_NDIS_STATUS_NOT_SUPPORTED;
 301:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 302:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->InformationBufferLength = 0;
 303:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->InformationBufferOffset = 0;
 304:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			}
 305:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 306:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			break;
 307:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case REMOTE_NDIS_SET_MSG:
 308:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.ResponseReady = true;
 309:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 310:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDIS_Set_Message_t*  SET_Message  = (RNDIS_Set_Message_t*)&RNDISInterfaceInfo->State.RNDISMessa
 311:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDIS_Set_Complete_t* SET_Response = (RNDIS_Set_Complete_t*)&RNDISInterfaceInfo->State.RNDISMess
 312:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			uint32_t              SET_Oid      = SET_Message->Oid;
 313:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 314:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			SET_Response->MessageType   = REMOTE_NDIS_SET_CMPLT;
 315:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			SET_Response->MessageLength = sizeof(RNDIS_Set_Complete_t);
 316:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			SET_Response->RequestId     = SET_Message->RequestId;
 317:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 318:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			void* SetData = &RNDISInterfaceInfo->State.RNDISMessageBuffer[sizeof(RNDIS_Message_Header_t) +
 319:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			                                                              SET_Message->InformationBufferOffs
 320:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 321:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			SET_Response->Status = RNDIS_Device_ProcessNDISSet(RNDISInterfaceInfo, SET_Oid, SetData,
 322:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			                                                   SET_Message->InformationBufferLength) ?
 323:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			                                                   REMOTE_NDIS_STATUS_SUCCESS : REMOTE_NDIS_STAT
 324:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			break;
 325:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case REMOTE_NDIS_RESET_MSG:
 326:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.ResponseReady = true;
 327:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 328:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDIS_Reset_Complete_t* RESET_Response = (RNDIS_Reset_Complete_t*)&RNDISInterfaceInfo->State.RND
 329:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 330:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RESET_Response->MessageType     = REMOTE_NDIS_RESET_CMPLT;
 331:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RESET_Response->MessageLength   = sizeof(RNDIS_Reset_Complete_t);
 332:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RESET_Response->Status          = REMOTE_NDIS_STATUS_SUCCESS;
 333:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RESET_Response->AddressingReset = 0;
 334:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 335:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			break;
 336:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case REMOTE_NDIS_KEEPALIVE_MSG:
 337:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.ResponseReady = true;
 338:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 339:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDIS_KeepAlive_Message_t*  KEEPALIVE_Message  =
 340:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			                (RNDIS_KeepAlive_Message_t*)&RNDISInterfaceInfo->State.RNDISMessageBuffer;
 341:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDIS_KeepAlive_Complete_t* KEEPALIVE_Response =
 342:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			                (RNDIS_KeepAlive_Complete_t*)&RNDISInterfaceInfo->State.RNDISMessageBuffer;
 343:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 344:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			KEEPALIVE_Response->MessageType   = REMOTE_NDIS_KEEPALIVE_CMPLT;
 345:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			KEEPALIVE_Response->MessageLength = sizeof(RNDIS_KeepAlive_Complete_t);
 346:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			KEEPALIVE_Response->RequestId     = KEEPALIVE_Message->RequestId;
 347:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			KEEPALIVE_Response->Status        = REMOTE_NDIS_STATUS_SUCCESS;
 348:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 349:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			break;
 350:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	}
 351:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** }
 352:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 353:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** static bool RNDIS_Device_ProcessNDISQuery(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo,
 354:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****                                           const uint32_t OId,
 355:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****                                           void* const QueryData,
 356:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****                                           const uint16_t QuerySize,
 357:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****                                           void* ResponseData,
 358:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****                                           uint16_t* const ResponseSize)
 359:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** {
 360:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	(void)QueryData;
 361:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	(void)QuerySize;
 362:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 363:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	switch (OId)
 310               		.loc 1 363 0
 311 01bc 8E30      		cpi r24,lo8(65806)
 312 01be F1E0      		ldi r31,hi8(65806)
 313 01c0 9F07      		cpc r25,r31
 314 01c2 F1E0      		ldi r31,hlo8(65806)
 315 01c4 AF07      		cpc r26,r31
 316 01c6 F0E0      		ldi r31,hhi8(65806)
 317 01c8 BF07      		cpc r27,r31
 318 01ca 01F4      		brne .+2
 319 01cc 00C0      		rjmp .L20
 320 01ce 8F30      		cpi r24,lo8(65807)
 321 01d0 41E0      		ldi r20,hi8(65807)
 322 01d2 9407      		cpc r25,r20
 323 01d4 41E0      		ldi r20,hlo8(65807)
 324 01d6 A407      		cpc r26,r20
 325 01d8 40E0      		ldi r20,hhi8(65807)
 326 01da B407      		cpc r27,r20
 327 01dc 00F0      		brlo .+2
 328 01de 00C0      		rjmp .L27
 329 01e0 8630      		cpi r24,lo8(65798)
 330 01e2 E1E0      		ldi r30,hi8(65798)
 331 01e4 9E07      		cpc r25,r30
 332 01e6 E1E0      		ldi r30,hlo8(65798)
 333 01e8 AE07      		cpc r26,r30
 334 01ea E0E0      		ldi r30,hhi8(65798)
 335 01ec BE07      		cpc r27,r30
 336 01ee 01F4      		brne .+2
 337 01f0 00C0      		rjmp .L16
 338 01f2 8730      		cpi r24,lo8(65799)
 339 01f4 F1E0      		ldi r31,hi8(65799)
 340 01f6 9F07      		cpc r25,r31
 341 01f8 F1E0      		ldi r31,hlo8(65799)
 342 01fa AF07      		cpc r26,r31
 343 01fc F0E0      		ldi r31,hhi8(65799)
 344 01fe BF07      		cpc r27,r31
 345 0200 00F4      		brsh .L28
 346 0202 8230      		cpi r24,lo8(65794)
 347 0204 41E0      		ldi r20,hi8(65794)
 348 0206 9407      		cpc r25,r20
 349 0208 41E0      		ldi r20,hlo8(65794)
 350 020a A407      		cpc r26,r20
 351 020c 40E0      		ldi r20,hhi8(65794)
 352 020e B407      		cpc r27,r20
 353 0210 01F4      		brne .+2
 354 0212 00C0      		rjmp .L24
 355 0214 8330      		cpi r24,lo8(65795)
 356 0216 E1E0      		ldi r30,hi8(65795)
 357 0218 9E07      		cpc r25,r30
 358 021a E1E0      		ldi r30,hlo8(65795)
 359 021c AE07      		cpc r26,r30
 360 021e E0E0      		ldi r30,hhi8(65795)
 361 0220 BE07      		cpc r27,r30
 362 0222 00F4      		brsh .L29
 363 0224 8130      		cpi r24,lo8(65793)
 364 0226 F1E0      		ldi r31,hi8(65793)
 365 0228 9F07      		cpc r25,r31
 366 022a F1E0      		ldi r31,hlo8(65793)
 367 022c AF07      		cpc r26,r31
 368 022e F0E0      		ldi r31,hhi8(65793)
 369 0230 BF07      		cpc r27,r31
 370 0232 01F0      		breq .+2
 371 0234 00C0      		rjmp .L12
 372 0236 00C0      		rjmp .L51
 373               	.L29:
 374 0238 8530      		cpi r24,lo8(65797)
 375 023a 21E0      		ldi r18,hi8(65797)
 376 023c 9207      		cpc r25,r18
 377 023e 21E0      		ldi r18,hlo8(65797)
 378 0240 A207      		cpc r26,r18
 379 0242 20E0      		ldi r18,hhi8(65797)
 380 0244 B207      		cpc r27,r18
 381               	.LVL9:
 382 0246 00F0      		brlo .+2
 383 0248 00C0      		rjmp .L12
 384 024a 00C0      		rjmp .L24
 385               	.LVL10:
 386               	.L28:
 387 024c 8C30      		cpi r24,lo8(65804)
 388 024e 41E0      		ldi r20,hi8(65804)
 389 0250 9407      		cpc r25,r20
 390 0252 41E0      		ldi r20,hlo8(65804)
 391 0254 A407      		cpc r26,r20
 392 0256 40E0      		ldi r20,hhi8(65804)
 393 0258 B407      		cpc r27,r20
 394 025a 00F4      		brsh .L30
 395 025c 8A30      		cpi r24,lo8(65802)
 396 025e E1E0      		ldi r30,hi8(65802)
 397 0260 9E07      		cpc r25,r30
 398 0262 E1E0      		ldi r30,hlo8(65802)
 399 0264 AE07      		cpc r26,r30
 400 0266 E0E0      		ldi r30,hhi8(65802)
 401 0268 BE07      		cpc r27,r30
 402 026a 00F0      		brlo .+2
 403 026c 00C0      		rjmp .L16
 404 026e 8730      		cpi r24,lo8(65799)
 405 0270 F1E0      		ldi r31,hi8(65799)
 406 0272 9F07      		cpc r25,r31
 407 0274 F1E0      		ldi r31,hlo8(65799)
 408 0276 AF07      		cpc r26,r31
 409 0278 F0E0      		ldi r31,hhi8(65799)
 410 027a BF07      		cpc r27,r31
 411 027c 01F0      		breq .+2
 412 027e 00C0      		rjmp .L12
 413 0280 00C0      		rjmp .L52
 414               	.L30:
 415 0282 8C30      		cpi r24,lo8(65804)
 416 0284 41E0      		ldi r20,hi8(65804)
 417 0286 9407      		cpc r25,r20
 418 0288 41E0      		ldi r20,hlo8(65804)
 419 028a A407      		cpc r26,r20
 420 028c 40E0      		ldi r20,hhi8(65804)
 421 028e B407      		cpc r27,r20
 422 0290 01F4      		brne .+2
 423 0292 00C0      		rjmp .L18
 424 0294 8D30      		cpi r24,lo8(65805)
 425 0296 E1E0      		ldi r30,hi8(65805)
 426 0298 9E07      		cpc r25,r30
 427 029a E1E0      		ldi r30,hlo8(65805)
 428 029c AE07      		cpc r26,r30
 429 029e E0E0      		ldi r30,hhi8(65805)
 430 02a0 BE07      		cpc r27,r30
 431 02a2 01F0      		breq .+2
 432 02a4 00C0      		rjmp .L12
 433 02a6 00C0      		rjmp .L53
 434               	.L27:
 435 02a8 8630      		cpi r24,lo8(131334)
 436 02aa F1E0      		ldi r31,hi8(131334)
 437 02ac 9F07      		cpc r25,r31
 438 02ae F2E0      		ldi r31,hlo8(131334)
 439 02b0 AF07      		cpc r26,r31
 440 02b2 F0E0      		ldi r31,hhi8(131334)
 441 02b4 BF07      		cpc r27,r31
 442 02b6 00F4      		brsh .L31
 443 02b8 8130      		cpi r24,lo8(131329)
 444 02ba 21E0      		ldi r18,hi8(131329)
 445 02bc 9207      		cpc r25,r18
 446 02be 22E0      		ldi r18,hlo8(131329)
 447 02c0 A207      		cpc r26,r18
 448 02c2 20E0      		ldi r18,hhi8(131329)
 449 02c4 B207      		cpc r27,r18
 450               	.LVL11:
 451 02c6 00F0      		brlo .+2
 452 02c8 00C0      		rjmp .L24
 453 02ca 8431      		cpi r24,lo8(65812)
 454 02cc 41E0      		ldi r20,hi8(65812)
 455 02ce 9407      		cpc r25,r20
 456 02d0 41E0      		ldi r20,hlo8(65812)
 457 02d2 A407      		cpc r26,r20
 458 02d4 40E0      		ldi r20,hhi8(65812)
 459 02d6 B407      		cpc r27,r20
 460 02d8 01F4      		brne .+2
 461 02da 00C0      		rjmp .L24
 462 02dc 8230      		cpi r24,lo8(66050)
 463 02de E2E0      		ldi r30,hi8(66050)
 464 02e0 9E07      		cpc r25,r30
 465 02e2 E1E0      		ldi r30,hlo8(66050)
 466 02e4 AE07      		cpc r26,r30
 467 02e6 E0E0      		ldi r30,hhi8(66050)
 468 02e8 BE07      		cpc r27,r30
 469 02ea 01F4      		brne .+2
 470 02ec 00C0      		rjmp .L24
 471 02ee 8131      		cpi r24,lo8(65809)
 472 02f0 F1E0      		ldi r31,hi8(65809)
 473 02f2 9F07      		cpc r25,r31
 474 02f4 F1E0      		ldi r31,hlo8(65809)
 475 02f6 AF07      		cpc r26,r31
 476 02f8 F0E0      		ldi r31,hhi8(65809)
 477 02fa BF07      		cpc r27,r31
 478 02fc 01F0      		breq .+2
 479 02fe 00C0      		rjmp .L12
 480 0300 00C0      		rjmp .L54
 481               	.LVL12:
 482               	.L31:
 483 0302 8430      		cpi r24,lo8(16843012)
 484 0304 41E0      		ldi r20,hi8(16843012)
 485 0306 9407      		cpc r25,r20
 486 0308 41E0      		ldi r20,hlo8(16843012)
 487 030a A407      		cpc r26,r20
 488 030c 41E0      		ldi r20,hhi8(16843012)
 489 030e B407      		cpc r27,r20
 490 0310 01F4      		brne .+2
 491 0312 00C0      		rjmp .L26
 492 0314 8530      		cpi r24,lo8(16843013)
 493 0316 E1E0      		ldi r30,hi8(16843013)
 494 0318 9E07      		cpc r25,r30
 495 031a E1E0      		ldi r30,hlo8(16843013)
 496 031c AE07      		cpc r26,r30
 497 031e E1E0      		ldi r30,hhi8(16843013)
 498 0320 BE07      		cpc r27,r30
 499 0322 00F4      		brsh .L32
 500 0324 8150      		subi r24,lo8(-(-16843009))
 501 0326 9140      		sbci r25,hi8(-(-16843009))
 502 0328 A140      		sbci r26,hlo8(-(-16843009))
 503 032a B140      		sbci r27,hhi8(-(-16843009))
 504 032c 8230      		cpi r24,lo8(2)
 505 032e 9105      		cpc r25,__zero_reg__
 506 0330 A105      		cpc r26,__zero_reg__
 507 0332 B105      		cpc r27,__zero_reg__
 508 0334 00F0      		brlo .+2
 509 0336 00C0      		rjmp .L12
 510 0338 00C0      		rjmp .L55
 511               	.L32:
 512 033a 8150      		subi r24,lo8(-(-16908545))
 513 033c 9140      		sbci r25,hi8(-(-16908545))
 514 033e A240      		sbci r26,hlo8(-(-16908545))
 515 0340 B140      		sbci r27,hhi8(-(-16908545))
 516 0342 8330      		cpi r24,lo8(3)
 517 0344 9105      		cpc r25,__zero_reg__
 518 0346 A105      		cpc r26,__zero_reg__
 519 0348 B105      		cpc r27,__zero_reg__
 520 034a 00F0      		brlo .+2
 521 034c 00C0      		rjmp .L12
 522 034e 00C0      		rjmp .L24
 523               	.L51:
 524               	.LVL13:
 364:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
 365:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_SUPPORTED_LIST:
 366:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(AdapterSupportedOIDList);
 367:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 368:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			memcpy_P(ResponseData, AdapterSupportedOIDList, sizeof(AdapterSupportedOIDList));
 525               		.loc 1 368 0
 526 0350 C901      		movw r24,r18
 527 0352 60E0      		ldi r22,lo8(AdapterSupportedOIDList)
 528 0354 70E0      		ldi r23,hi8(AdapterSupportedOIDList)
 529 0356 4CE6      		ldi r20,lo8(108)
 530 0358 50E0      		ldi r21,hi8(108)
 531 035a 0E94 0000 		call memcpy_P
 532               	.LVL14:
 366:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(AdapterSupportedOIDList);
 533               		.loc 1 366 0
 534 035e CCE6      		ldi r28,lo8(108)
 535 0360 D0E0      		ldi r29,hi8(108)
 536 0362 00C0      		rjmp .L33
 537               	.LVL15:
 538               	.L18:
 369:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 370:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 371:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_PHYSICAL_MEDIUM:
 372:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 373:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 374:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			/* Indicate that the device is a true ethernet link */
 375:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = 0;
 376:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 377:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 378:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_HARDWARE_STATUS:
 379:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 380:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 381:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = NDIS_HardwareStatus_Ready;
 382:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 383:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 384:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_MEDIA_SUPPORTED:
 385:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_MEDIA_IN_USE:
 386:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 387:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 388:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = REMOTE_NDIS_MEDIUM_802_3;
 389:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 390:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 391:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_VENDOR_ID:
 392:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 393:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 394:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			/* Vendor ID 0x0xFFFFFF is reserved for vendors who have not purchased a NDIS VID */
 395:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = 0x00FFFFFF;
 539               		.loc 1 395 0
 540 0364 8FEF      		ldi r24,lo8(16777215)
 541 0366 9FEF      		ldi r25,hi8(16777215)
 542 0368 AFEF      		ldi r26,hlo8(16777215)
 543 036a B0E0      		ldi r27,hhi8(16777215)
 544               	.LVL16:
 545 036c 00C0      		rjmp .L47
 546               	.LVL17:
 547               	.L16:
 396:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 397:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 398:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_MAXIMUM_FRAME_SIZE:
 399:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_TRANSMIT_BLOCK_SIZE:
 400:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_RECEIVE_BLOCK_SIZE:
 401:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 402:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 403:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = ETHERNET_FRAME_SIZE_MAX;
 548               		.loc 1 403 0
 549 036e 8CED      		ldi r24,lo8(1500)
 550 0370 95E0      		ldi r25,hi8(1500)
 551 0372 A0E0      		ldi r26,hlo8(1500)
 552 0374 B0E0      		ldi r27,hhi8(1500)
 553 0376 00C0      		rjmp .L47
 554               	.LVL18:
 555               	.L53:
 404:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 405:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 406:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_VENDOR_DESCRIPTION:
 407:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = (strlen(RNDISInterfaceInfo->Config.AdapterVendorDescription) + 1);
 556               		.loc 1 407 0
 557 0378 F801      		movw r30,r16
 558 037a 6585      		ldd r22,Z+13
 559 037c 7685      		ldd r23,Z+14
 560 037e FB01      		movw r30,r22
 561 0380 EF01      		movw r28,r30
 562 0382 0990      		ld __tmp_reg__,Y+
 563 0384 0020      		tst __tmp_reg__
 564 0386 01F4      		brne .-6
 565 0388 CE1B      		sub r28,r30
 566 038a DF0B      		sbc r29,r31
 567               	.LVL19:
 408:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 409:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			memcpy(ResponseData, RNDISInterfaceInfo->Config.AdapterVendorDescription, *ResponseSize);
 568               		.loc 1 409 0
 569 038c C901      		movw r24,r18
 570 038e AE01      		movw r20,r28
 571 0390 0E94 0000 		call memcpy
 572               	.LVL20:
 573 0394 00C0      		rjmp .L33
 574               	.LVL21:
 575               	.L52:
 410:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 411:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 412:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_MEDIA_CONNECT_STATUS:
 413:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 414:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 415:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = REMOTE_NDIS_MEDIA_STATE_CONNECTED;
 416:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 417:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 418:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_LINK_SPEED:
 419:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 420:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 421:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			/* Indicate 10Mb/s link speed */
 422:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = 100000;
 576               		.loc 1 422 0
 577 0396 80EA      		ldi r24,lo8(100000)
 578 0398 96E8      		ldi r25,hi8(100000)
 579 039a A1E0      		ldi r26,hlo8(100000)
 580 039c B0E0      		ldi r27,hhi8(100000)
 581               	.LVL22:
 582 039e 00C0      		rjmp .L47
 583               	.LVL23:
 584               	.L55:
 423:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 424:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 425:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_802_3_PERMANENT_ADDRESS:
 426:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_802_3_CURRENT_ADDRESS:
 427:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(MAC_Address_t);
 428:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 429:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			memcpy(ResponseData, &RNDISInterfaceInfo->Config.AdapterMACAddress, sizeof(MAC_Address_t));
 585               		.loc 1 429 0
 586 03a0 D901      		movw r26,r18
 587 03a2 F801      		movw r30,r16
 588 03a4 3F96      		adiw r30,15
 589 03a6 86E0      		ldi r24,lo8(6)
 590               	.L35:
 591 03a8 0190      		ld r0,Z+
 592 03aa 0D92      		st X+,r0
 593 03ac 8150      		subi r24,lo8(-(-1))
 594 03ae 01F4      		brne .L35
 427:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(MAC_Address_t);
 595               		.loc 1 427 0
 596 03b0 C6E0      		ldi r28,lo8(6)
 597 03b2 D0E0      		ldi r29,hi8(6)
 598 03b4 00C0      		rjmp .L33
 599               	.LVL24:
 600               	.L26:
 430:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 431:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 432:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_802_3_MAXIMUM_LIST_SIZE:
 433:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 434:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 435:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			/* Indicate only one multicast address supported */
 436:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = 1;
 601               		.loc 1 436 0
 602 03b6 81E0      		ldi r24,lo8(1)
 603 03b8 90E0      		ldi r25,hi8(1)
 604 03ba A0E0      		ldi r26,hlo8(1)
 605 03bc B0E0      		ldi r27,hhi8(1)
 606 03be 00C0      		rjmp .L47
 607               	.LVL25:
 608               	.L20:
 437:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 438:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 439:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_CURRENT_PACKET_FILTER:
 440:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 441:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 442:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = RNDISInterfaceInfo->State.CurrPacketFilter;
 609               		.loc 1 442 0
 610 03c0 F801      		movw r30,r16
 611 03c2 E956      		subi r30,lo8(-(151))
 612 03c4 FF4F      		sbci r31,hi8(-(151))
 613 03c6 8081      		ld r24,Z
 614 03c8 9181      		ldd r25,Z+1
 615 03ca A281      		ldd r26,Z+2
 616 03cc B381      		ldd r27,Z+3
 617 03ce 00C0      		rjmp .L47
 618               	.LVL26:
 619               	.L24:
 443:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 444:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 445:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_XMIT_OK:
 446:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_RCV_OK:
 447:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_XMIT_ERROR:
 448:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_RCV_ERROR:
 449:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_RCV_NO_BUFFER:
 450:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_802_3_RCV_ERROR_ALIGNMENT:
 451:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_802_3_XMIT_ONE_COLLISION:
 452:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_802_3_XMIT_MORE_COLLISIONS:
 453:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 454:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 455:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			/* Unused statistic OIDs - always return 0 for each */
 456:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = 0;
 620               		.loc 1 456 0
 621 03d0 F801      		movw r30,r16
 622 03d2 15A6      		std Z+45,__zero_reg__
 623 03d4 16A6      		std Z+46,__zero_reg__
 624 03d6 17A6      		std Z+47,__zero_reg__
 625 03d8 10AA      		std Z+48,__zero_reg__
 626 03da 00C0      		rjmp .L45
 627               	.LVL27:
 628               	.L54:
 457:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 458:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 459:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_MAXIMUM_TOTAL_SIZE:
 460:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 461:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 462:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			/* Indicate maximum overall buffer (Ethernet frame and RNDIS header) the adapter can handle */
 463:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*((uint32_t*)ResponseData) = (RNDIS_MESSAGE_BUFFER_SIZE + ETHERNET_FRAME_SIZE_MAX);
 629               		.loc 1 463 0
 630 03dc 8CE5      		ldi r24,lo8(1628)
 631 03de 96E0      		ldi r25,hi8(1628)
 632 03e0 A0E0      		ldi r26,hlo8(1628)
 633 03e2 B0E0      		ldi r27,hhi8(1628)
 634               	.L47:
 635 03e4 F801      		movw r30,r16
 636 03e6 85A7      		std Z+45,r24
 637 03e8 96A7      		std Z+46,r25
 638 03ea A7A7      		std Z+47,r26
 639 03ec B0AB      		std Z+48,r27
 640               	.L45:
 460:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			*ResponseSize = sizeof(uint32_t);
 641               		.loc 1 460 0
 642 03ee C4E0      		ldi r28,lo8(4)
 643 03f0 D0E0      		ldi r29,hi8(4)
 644 03f2 00C0      		rjmp .L33
 645               	.LVL28:
 646               	.L12:
 647               	.LBE71:
 648               	.LBE70:
 300:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->Status                  = REMOTE_NDIS_STATUS_NOT_SUPPORTED;
 649               		.loc 1 300 0
 650 03f4 8BEB      		ldi r24,lo8(-1073741637)
 651 03f6 90E0      		ldi r25,hi8(-1073741637)
 652 03f8 A0E0      		ldi r26,hlo8(-1073741637)
 653 03fa B0EC      		ldi r27,hhi8(-1073741637)
 654 03fc F801      		movw r30,r16
 655 03fe 81A3      		std Z+33,r24
 656 0400 92A3      		std Z+34,r25
 657 0402 A3A3      		std Z+35,r26
 658 0404 B4A3      		std Z+36,r27
 302:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->InformationBufferLength = 0;
 659               		.loc 1 302 0
 660 0406 15A2      		std Z+37,__zero_reg__
 661 0408 16A2      		std Z+38,__zero_reg__
 662 040a 17A2      		std Z+39,__zero_reg__
 663 040c 10A6      		std Z+40,__zero_reg__
 303:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->InformationBufferOffset = 0;
 664               		.loc 1 303 0
 665 040e 11A6      		std Z+41,__zero_reg__
 666 0410 12A6      		std Z+42,__zero_reg__
 667 0412 13A6      		std Z+43,__zero_reg__
 668 0414 14A6      		std Z+44,__zero_reg__
 669 0416 00C0      		rjmp .L1
 670               	.LVL29:
 671               	.L8:
 308:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.ResponseReady = true;
 672               		.loc 1 308 0
 673 0418 F801      		movw r30,r16
 674 041a EB56      		subi r30,lo8(-(149))
 675 041c FF4F      		sbci r31,hi8(-(149))
 676 041e 81E0      		ldi r24,lo8(1)
 677 0420 8083      		st Z,r24
 678               	.LVL30:
 312:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			uint32_t              SET_Oid      = SET_Message->Oid;
 679               		.loc 1 312 0
 680 0422 F801      		movw r30,r16
 681 0424 81A1      		ldd r24,Z+33
 682 0426 92A1      		ldd r25,Z+34
 683 0428 A3A1      		ldd r26,Z+35
 684 042a B4A1      		ldd r27,Z+36
 685               	.LVL31:
 314:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			SET_Response->MessageType   = REMOTE_NDIS_SET_CMPLT;
 686               		.loc 1 314 0
 687 042c 45E0      		ldi r20,lo8(-2147483643)
 688 042e 50E0      		ldi r21,hi8(-2147483643)
 689 0430 60E0      		ldi r22,hlo8(-2147483643)
 690 0432 70E8      		ldi r23,hhi8(-2147483643)
 691 0434 458B      		std Z+21,r20
 692 0436 568B      		std Z+22,r21
 693 0438 678B      		std Z+23,r22
 694 043a 708F      		std Z+24,r23
 315:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			SET_Response->MessageLength = sizeof(RNDIS_Set_Complete_t);
 695               		.loc 1 315 0
 696 043c 40E1      		ldi r20,lo8(16)
 697 043e 50E0      		ldi r21,hi8(16)
 698 0440 60E0      		ldi r22,hlo8(16)
 699 0442 70E0      		ldi r23,hhi8(16)
 700 0444 418F      		std Z+25,r20
 701 0446 528F      		std Z+26,r21
 702 0448 638F      		std Z+27,r22
 703 044a 748F      		std Z+28,r23
 319:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			                                                              SET_Message->InformationBufferOffs
 704               		.loc 1 319 0
 705 044c 41A5      		ldd r20,Z+41
 706 044e 52A5      		ldd r21,Z+42
 707 0450 63A5      		ldd r22,Z+43
 708 0452 74A5      		ldd r23,Z+44
 709               	.LVL32:
 710               	.LBB72:
 711               	.LBB73:
 464:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 465:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return true;
 466:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		default:
 467:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return false;
 468:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	}
 469:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** }
 470:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 471:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** static bool RNDIS_Device_ProcessNDISSet(USB_ClassInfo_RNDIS_Device_t* const RNDISInterfaceInfo,
 472:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****                                         const uint32_t OId,
 473:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****                                         const void* SetData,
 474:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c ****                                         const uint16_t SetSize)
 475:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** {
 476:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	(void)SetSize;
 477:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 
 478:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	switch (OId)
 712               		.loc 1 478 0
 713 0454 8E30      		cpi r24,lo8(65806)
 714 0456 F1E0      		ldi r31,hi8(65806)
 715 0458 9F07      		cpc r25,r31
 716 045a F1E0      		ldi r31,hlo8(65806)
 717 045c AF07      		cpc r26,r31
 718 045e F0E0      		ldi r31,hhi8(65806)
 719 0460 BF07      		cpc r27,r31
 720 0462 01F0      		breq .L37
 721 0464 8330      		cpi r24,lo8(16843011)
 722 0466 21E0      		ldi r18,hi8(16843011)
 723 0468 9207      		cpc r25,r18
 724 046a 21E0      		ldi r18,hlo8(16843011)
 725 046c A207      		cpc r26,r18
 726 046e 21E0      		ldi r18,hhi8(16843011)
 727 0470 B207      		cpc r27,r18
 728 0472 01F4      		brne .L44
 729 0474 00C0      		rjmp .L38
 730               	.L37:
 479:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	{
 480:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		case OID_GEN_CURRENT_PACKET_FILTER:
 481:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.CurrPacketFilter = *((uint32_t*)SetData);
 731               		.loc 1 481 0
 732 0476 400F      		add r20,r16
 733 0478 511F      		adc r21,r17
 734 047a FA01      		movw r30,r20
 735 047c 858D      		ldd r24,Z+29
 736 047e 968D      		ldd r25,Z+30
 737 0480 A78D      		ldd r26,Z+31
 738 0482 B0A1      		ldd r27,Z+32
 739 0484 F801      		movw r30,r16
 740 0486 E956      		subi r30,lo8(-(151))
 741 0488 FF4F      		sbci r31,hi8(-(151))
 742 048a 8083      		st Z,r24
 743 048c 9183      		std Z+1,r25
 744 048e A283      		std Z+2,r26
 745 0490 B383      		std Z+3,r27
 482:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.CurrRNDISState = ((RNDISInterfaceInfo->State.CurrPacketFilter) ?
 746               		.loc 1 482 0
 747 0492 F801      		movw r30,r16
 748 0494 EA56      		subi r30,lo8(-(150))
 749 0496 FF4F      		sbci r31,hi8(-(150))
 750 0498 82E0      		ldi r24,lo8(2)
 751 049a 8083      		st Z,r24
 752               	.L38:
 753               	.LBE73:
 323:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			                                                   REMOTE_NDIS_STATUS_SUCCESS : REMOTE_NDIS_STAT
 754               		.loc 1 323 0
 755 049c 80E0      		ldi r24,lo8(0)
 756 049e 90E0      		ldi r25,hi8(0)
 757 04a0 DC01      		movw r26,r24
 758 04a2 00C0      		rjmp .L36
 759               	.L44:
 760               	.LBB74:
 761 04a4 8BEB      		ldi r24,lo8(-1073741637)
 762 04a6 90E0      		ldi r25,hi8(-1073741637)
 763 04a8 A0E0      		ldi r26,hlo8(-1073741637)
 764 04aa B0EC      		ldi r27,hhi8(-1073741637)
 765               	.L36:
 766               	.LBE74:
 767               	.LBE72:
 321:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			SET_Response->Status = RNDIS_Device_ProcessNDISSet(RNDISInterfaceInfo, SET_Oid, SetData,
 768               		.loc 1 321 0
 769 04ac F801      		movw r30,r16
 770 04ae 81A3      		std Z+33,r24
 771 04b0 92A3      		std Z+34,r25
 772 04b2 A3A3      		std Z+35,r26
 773 04b4 B4A3      		std Z+36,r27
 774 04b6 00C0      		rjmp .L1
 775               	.LVL33:
 776               	.L9:
 326:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.ResponseReady = true;
 777               		.loc 1 326 0
 778 04b8 F801      		movw r30,r16
 779 04ba EB56      		subi r30,lo8(-(149))
 780 04bc FF4F      		sbci r31,hi8(-(149))
 781 04be 81E0      		ldi r24,lo8(1)
 782 04c0 8083      		st Z,r24
 783               	.LVL34:
 330:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RESET_Response->MessageType     = REMOTE_NDIS_RESET_CMPLT;
 784               		.loc 1 330 0
 785 04c2 86E0      		ldi r24,lo8(-2147483642)
 786 04c4 90E0      		ldi r25,hi8(-2147483642)
 787 04c6 A0E0      		ldi r26,hlo8(-2147483642)
 788 04c8 B0E8      		ldi r27,hhi8(-2147483642)
 789 04ca F801      		movw r30,r16
 790 04cc 858B      		std Z+21,r24
 791 04ce 968B      		std Z+22,r25
 792 04d0 A78B      		std Z+23,r26
 793 04d2 B08F      		std Z+24,r27
 331:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RESET_Response->MessageLength   = sizeof(RNDIS_Reset_Complete_t);
 794               		.loc 1 331 0
 795 04d4 80E1      		ldi r24,lo8(16)
 796 04d6 90E0      		ldi r25,hi8(16)
 797 04d8 A0E0      		ldi r26,hlo8(16)
 798 04da B0E0      		ldi r27,hhi8(16)
 799 04dc 818F      		std Z+25,r24
 800 04de 928F      		std Z+26,r25
 801 04e0 A38F      		std Z+27,r26
 802 04e2 B48F      		std Z+28,r27
 332:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RESET_Response->Status          = REMOTE_NDIS_STATUS_SUCCESS;
 803               		.loc 1 332 0
 804 04e4 158E      		std Z+29,__zero_reg__
 805 04e6 168E      		std Z+30,__zero_reg__
 806 04e8 178E      		std Z+31,__zero_reg__
 807 04ea 10A2      		std Z+32,__zero_reg__
 808 04ec 00C0      		rjmp .L46
 809               	.LVL35:
 810               	.L50:
 337:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.ResponseReady = true;
 811               		.loc 1 337 0
 812 04ee F801      		movw r30,r16
 813 04f0 EB56      		subi r30,lo8(-(149))
 814 04f2 FF4F      		sbci r31,hi8(-(149))
 815 04f4 81E0      		ldi r24,lo8(1)
 816 04f6 8083      		st Z,r24
 817               	.LVL36:
 344:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			KEEPALIVE_Response->MessageType   = REMOTE_NDIS_KEEPALIVE_CMPLT;
 818               		.loc 1 344 0
 819 04f8 88E0      		ldi r24,lo8(-2147483640)
 820 04fa 90E0      		ldi r25,hi8(-2147483640)
 821 04fc A0E0      		ldi r26,hlo8(-2147483640)
 822 04fe B0E8      		ldi r27,hhi8(-2147483640)
 823 0500 F801      		movw r30,r16
 824 0502 858B      		std Z+21,r24
 825 0504 968B      		std Z+22,r25
 826 0506 A78B      		std Z+23,r26
 827 0508 B08F      		std Z+24,r27
 345:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			KEEPALIVE_Response->MessageLength = sizeof(RNDIS_KeepAlive_Complete_t);
 828               		.loc 1 345 0
 829 050a 80E1      		ldi r24,lo8(16)
 830 050c 90E0      		ldi r25,hi8(16)
 831 050e A0E0      		ldi r26,hlo8(16)
 832 0510 B0E0      		ldi r27,hhi8(16)
 833 0512 818F      		std Z+25,r24
 834 0514 928F      		std Z+26,r25
 835 0516 A38F      		std Z+27,r26
 836 0518 B48F      		std Z+28,r27
 837               	.LVL37:
 838               	.L46:
 347:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			KEEPALIVE_Response->Status        = REMOTE_NDIS_STATUS_SUCCESS;
 839               		.loc 1 347 0
 840 051a 11A2      		std Z+33,__zero_reg__
 841 051c 12A2      		std Z+34,__zero_reg__
 842 051e 13A2      		std Z+35,__zero_reg__
 843 0520 14A2      		std Z+36,__zero_reg__
 844 0522 00C0      		rjmp .L1
 845               	.LVL38:
 846               	.L48:
 847               	.LBE69:
 848               	.LBE68:
 849               	.LBE67:
  92:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_INTERFACE)
 850               		.loc 1 92 0
 851 0524 8091 0000 		lds r24,USB_ControlRequest
 852 0528 813A      		cpi r24,lo8(-95)
 853 052a 01F0      		breq .+2
 854 052c 00C0      		rjmp .L1
 855               	.LVL39:
 856               	.LBB77:
  96:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				if (!(MessageHeader->MessageLength))
 857               		.loc 1 96 0
 858 052e F801      		movw r30,r16
 859 0530 818D      		ldd r24,Z+25
 860 0532 928D      		ldd r25,Z+26
 861 0534 A38D      		ldd r26,Z+27
 862 0536 B48D      		ldd r27,Z+28
 863 0538 0097      		sbiw r24,0
 864 053a A105      		cpc r26,__zero_reg__
 865 053c B105      		cpc r27,__zero_reg__
 866 053e 01F4      		brne .L39
  98:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 					RNDISInterfaceInfo->State.RNDISMessageBuffer[0] = 0;
 867               		.loc 1 98 0
 868 0540 158A      		std Z+21,__zero_reg__
  99:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 					MessageHeader->MessageLength = 1;
 869               		.loc 1 99 0
 870 0542 81E0      		ldi r24,lo8(1)
 871 0544 90E0      		ldi r25,hi8(1)
 872 0546 A0E0      		ldi r26,hlo8(1)
 873 0548 B0E0      		ldi r27,hhi8(1)
 874 054a 818F      		std Z+25,r24
 875 054c 928F      		std Z+26,r25
 876 054e A38F      		std Z+27,r26
 877 0550 B48F      		std Z+28,r27
 878               	.L39:
 879               	.LBB78:
 880               	.LBB79:
 494:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEINTX &= ~(1 << RXSTPI);
 881               		.loc 2 494 0
 882 0552 8091 E800 		lds r24,232
 883 0556 877F      		andi r24,lo8(-9)
 884 0558 8093 E800 		sts 232,r24
 885               	.LBE79:
 886               	.LBE78:
 103:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				Endpoint_Write_Control_Stream_LE(RNDISInterfaceInfo->State.RNDISMessageBuffer, MessageHeader->M
 887               		.loc 1 103 0
 888 055c F801      		movw r30,r16
 889 055e 618D      		ldd r22,Z+25
 890 0560 728D      		ldd r23,Z+26
 891 0562 C801      		movw r24,r16
 892 0564 4596      		adiw r24,21
 893 0566 0E94 0000 		call Endpoint_Write_Control_Stream_LE
 894               	.LBB80:
 895               	.LBB81:
 507:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#else
 508:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~(1 << TXINI);
 509:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#endif
 510:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 511:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 512:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Acknowledges an OUT packet to the host on the currently selected endpoint, freeing up the en
 513:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  for the next packet and switching to the alternative endpoint bank if double banked.
 514:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 515:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 516:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 517:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
 518:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearOUT(void)
 519:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 520:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 521:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 896               		.loc 2 521 0
 897 056a 8091 E800 		lds r24,232
 898 056e 8B77      		andi r24,lo8(123)
 899 0570 8093 E800 		sts 232,r24
 900               	.LBE81:
 901               	.LBE80:
 106:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				MessageHeader->MessageLength = 0;
 902               		.loc 1 106 0
 903 0574 F801      		movw r30,r16
 904 0576 118E      		std Z+25,__zero_reg__
 905 0578 128E      		std Z+26,__zero_reg__
 906 057a 138E      		std Z+27,__zero_reg__
 907 057c 148E      		std Z+28,__zero_reg__
 908 057e 00C0      		rjmp .L1
 909               	.LVL40:
 910               	.L33:
 911               	.LBE77:
 912               	.LBB82:
 913               	.LBB76:
 914               	.LBB75:
 292:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->Status                  = REMOTE_NDIS_STATUS_SUCCESS;
 915               		.loc 1 292 0
 916 0580 F801      		movw r30,r16
 917 0582 11A2      		std Z+33,__zero_reg__
 918 0584 12A2      		std Z+34,__zero_reg__
 919 0586 13A2      		std Z+35,__zero_reg__
 920 0588 14A2      		std Z+36,__zero_reg__
 293:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->MessageLength          += ResponseSize;
 921               		.loc 1 293 0
 922 058a AE01      		movw r20,r28
 923 058c 60E0      		ldi r22,lo8(0)
 924 058e 70E0      		ldi r23,hi8(0)
 925 0590 818D      		ldd r24,Z+25
 926 0592 928D      		ldd r25,Z+26
 927 0594 A38D      		ldd r26,Z+27
 928 0596 B48D      		ldd r27,Z+28
 929 0598 840F      		add r24,r20
 930 059a 951F      		adc r25,r21
 931 059c A61F      		adc r26,r22
 932 059e B71F      		adc r27,r23
 933 05a0 818F      		std Z+25,r24
 934 05a2 928F      		std Z+26,r25
 935 05a4 A38F      		std Z+27,r26
 936 05a6 B48F      		std Z+28,r27
 295:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->InformationBufferLength = ResponseSize;
 937               		.loc 1 295 0
 938 05a8 45A3      		std Z+37,r20
 939 05aa 56A3      		std Z+38,r21
 940 05ac 67A3      		std Z+39,r22
 941 05ae 70A7      		std Z+40,r23
 296:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 				QUERY_Response->InformationBufferOffset = (sizeof(RNDIS_Query_Complete_t) - sizeof(RNDIS_Messag
 942               		.loc 1 296 0
 943 05b0 80E1      		ldi r24,lo8(16)
 944 05b2 90E0      		ldi r25,hi8(16)
 945 05b4 A0E0      		ldi r26,hlo8(16)
 946 05b6 B0E0      		ldi r27,hhi8(16)
 947 05b8 81A7      		std Z+41,r24
 948 05ba 92A7      		std Z+42,r25
 949 05bc A3A7      		std Z+43,r26
 950 05be B4A7      		std Z+44,r27
 951               	.LVL41:
 952               	.L1:
 953               	/* epilogue start */
 954               	.LBE75:
 955               	.LBE76:
 956               	.LBE82:
 111:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** }
 957               		.loc 1 111 0
 958 05c0 DF91      		pop r29
 959 05c2 CF91      		pop r28
 960 05c4 1F91      		pop r17
 961 05c6 0F91      		pop r16
 962               	.LVL42:
 963 05c8 0895      		ret
 964               		.cfi_endproc
 965               	.LFE71:
 967               		.section	.text.RNDIS_Device_ConfigureEndpoints,"ax",@progbits
 968               	.global	RNDIS_Device_ConfigureEndpoints
 970               	RNDIS_Device_ConfigureEndpoints:
 971               	.LFB72:
 114:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** {
 972               		.loc 1 114 0
 973               		.cfi_startproc
 974               	.LVL43:
 975 0000 1F93      		push r17
 976               	.LCFI4:
 977               		.cfi_def_cfa_offset 3
 978               		.cfi_offset 17, -2
 979 0002 CF93      		push r28
 980               	.LCFI5:
 981               		.cfi_def_cfa_offset 4
 982               		.cfi_offset 28, -3
 983 0004 DF93      		push r29
 984               	.LCFI6:
 985               		.cfi_def_cfa_offset 5
 986               		.cfi_offset 29, -4
 987               	/* prologue: function */
 988               	/* frame size = 0 */
 989               	/* stack size = 3 */
 990               	.L__stack_usage = 3
 991 0006 EC01      		movw r28,r24
 115:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	memset(&RNDISInterfaceInfo->State, 0x00, sizeof(RNDISInterfaceInfo->State));
 992               		.loc 1 115 0
 993 0008 4596      		adiw r24,21
 994               	.LVL44:
 995 000a FC01      		movw r30,r24
 996 000c 84E4      		ldi r24,lo8(3140)
 997 000e 9CE0      		ldi r25,hi8(3140)
 998 0010 DF01      		movw r26,r30
 999 0012 9C01      		movw r18,r24
 1000 0014 1D92      		st X+,__zero_reg__
 1001 0016 2150      		subi r18,1
 1002 0018 3040      		sbci r19,0
 1003 001a 01F4      		brne .-8
 1004               	.LVL45:
 117:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	for (uint8_t EndpointNum = 1; EndpointNum < ENDPOINT_TOTAL_ENDPOINTS; EndpointNum++)
 1005               		.loc 1 117 0
 1006 001c 11E0      		ldi r17,lo8(1)
 1007               	.LVL46:
 1008               	.L65:
 1009               	.LBB83:
 1010               	.LBB84:
 124:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		if (EndpointNum == RNDISInterfaceInfo->Config.DataINEndpointNumber)
 1011               		.loc 1 124 0
 1012 001e 8981      		ldd r24,Y+1
 1013 0020 1817      		cp r17,r24
 1014 0022 01F4      		brne .L57
 126:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Size         = RNDISInterfaceInfo->Config.DataINEndpointSize;
 1015               		.loc 1 126 0
 1016 0024 EA81      		ldd r30,Y+2
 1017 0026 FB81      		ldd r31,Y+3
 1018               	.LVL47:
 129:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			DoubleBanked = RNDISInterfaceInfo->Config.DataINEndpointDoubleBank;
 1019               		.loc 1 129 0
 1020 0028 9C81      		ldd r25,Y+4
 1021               	.LVL48:
 127:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Direction    = ENDPOINT_DIR_IN;
 1022               		.loc 1 127 0
 1023 002a 81E0      		ldi r24,lo8(1)
 1024 002c 00C0      		rjmp .L69
 1025               	.LVL49:
 1026               	.L57:
 131:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		else if (EndpointNum == RNDISInterfaceInfo->Config.DataOUTEndpointNumber)
 1027               		.loc 1 131 0
 1028 002e 8D81      		ldd r24,Y+5
 1029 0030 1817      		cp r17,r24
 1030 0032 01F4      		brne .L59
 133:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Size         = RNDISInterfaceInfo->Config.DataOUTEndpointSize;
 1031               		.loc 1 133 0
 1032 0034 EE81      		ldd r30,Y+6
 1033 0036 FF81      		ldd r31,Y+7
 1034               	.LVL50:
 136:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			DoubleBanked = RNDISInterfaceInfo->Config.DataOUTEndpointDoubleBank;
 1035               		.loc 1 136 0
 1036 0038 9885      		ldd r25,Y+8
 1037               	.LVL51:
 134:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Direction    = ENDPOINT_DIR_OUT;
 1038               		.loc 1 134 0
 1039 003a 80E0      		ldi r24,lo8(0)
 1040               	.LVL52:
 1041               	.L69:
 135:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Type         = EP_TYPE_BULK;
 1042               		.loc 1 135 0
 1043 003c 62E0      		ldi r22,lo8(2)
 1044 003e 00C0      		rjmp .L58
 1045               	.LVL53:
 1046               	.L59:
 138:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		else if (EndpointNum == RNDISInterfaceInfo->Config.NotificationEndpointNumber)
 1047               		.loc 1 138 0
 1048 0040 8985      		ldd r24,Y+9
 1049 0042 1817      		cp r17,r24
 1050 0044 01F4      		brne .L60
 140:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Size         = RNDISInterfaceInfo->Config.NotificationEndpointSize;
 1051               		.loc 1 140 0
 1052 0046 EA85      		ldd r30,Y+10
 1053 0048 FB85      		ldd r31,Y+11
 1054               	.LVL54:
 143:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			DoubleBanked = RNDISInterfaceInfo->Config.NotificationEndpointDoubleBank;
 1055               		.loc 1 143 0
 1056 004a 9C85      		ldd r25,Y+12
 1057               	.LVL55:
 141:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Direction    = ENDPOINT_DIR_IN;
 1058               		.loc 1 141 0
 1059 004c 81E0      		ldi r24,lo8(1)
 142:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Type         = EP_TYPE_INTERRUPT;
 1060               		.loc 1 142 0
 1061 004e 63E0      		ldi r22,lo8(3)
 1062               	.LVL56:
 1063               	.L58:
 150:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		if (!(Endpoint_ConfigureEndpoint(EndpointNum, Type, Direction, Size,
 1064               		.loc 1 150 0
 1065 0050 9923      		tst r25
 1066 0052 01F0      		breq .L66
 1067 0054 44E0      		ldi r20,lo8(4)
 1068 0056 00C0      		rjmp .L61
 1069               	.L66:
 1070 0058 40E0      		ldi r20,lo8(0)
 1071               	.L61:
 1072               	.LVL57:
 1073               	.LBB85:
 1074               	.LBB86:
 297:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number, (((Type) << EPTYPE0) | (Direction)),
 1075               		.loc 2 297 0 discriminator 3
 1076 005a 6295      		swap r22
 1077               	.LVL58:
 1078 005c 660F      		lsl r22
 1079 005e 660F      		lsl r22
 1080 0060 607C      		andi r22,lo8(-64)
 1081 0062 682B      		or r22,r24
 1082               	.LVL59:
 128:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				uint16_t CheckBytes = 8;
 1083               		.loc 2 128 0 discriminator 3
 1084 0064 28E0      		ldi r18,lo8(8)
 1085 0066 30E0      		ldi r19,hi8(8)
 127:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				uint8_t  MaskVal    = 0;
 1086               		.loc 2 127 0 discriminator 3
 1087 0068 80E0      		ldi r24,lo8(0)
 1088               	.LVL60:
 1089 006a 00C0      		rjmp .L62
 1090               	.LVL61:
 1091               	.L63:
 1092               	.LBB87:
 1093               	.LBB88:
 132:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					MaskVal++;
 1094               		.loc 2 132 0
 1095 006c 8F5F      		subi r24,lo8(-(1))
 1096               	.LVL62:
 133:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					CheckBytes <<= 1;
 1097               		.loc 2 133 0
 1098 006e 220F      		lsl r18
 1099 0070 331F      		rol r19
 1100               	.LVL63:
 1101               	.L62:
 130:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				while (CheckBytes < Bytes)
 1102               		.loc 2 130 0
 1103 0072 2E17      		cp r18,r30
 1104 0074 3F07      		cpc r19,r31
 1105 0076 00F0      		brlo .L63
 1106               	.LBE88:
 1107               	.LBE87:
 297:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number, (((Type) << EPTYPE0) | (Direction)),
 1108               		.loc 2 297 0
 1109 0078 4260      		ori r20,lo8(2)
 1110               	.LVL64:
 1111               	.LBB90:
 1112               	.LBB89:
 136:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return (MaskVal << EPSIZE0);
 1113               		.loc 2 136 0
 1114 007a 8295      		swap r24
 1115               	.LVL65:
 1116 007c 807F      		andi r24,lo8(-16)
 1117               	.LBE89:
 1118               	.LBE90:
 297:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number, (((Type) << EPTYPE0) | (Direction)),
 1119               		.loc 2 297 0
 1120 007e 482B      		or r20,r24
 1121 0080 812F      		mov r24,r17
 1122 0082 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 1123               	.LVL66:
 1124               	.LBE86:
 1125               	.LBE85:
 150:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		if (!(Endpoint_ConfigureEndpoint(EndpointNum, Type, Direction, Size,
 1126               		.loc 1 150 0
 1127 0086 8823      		tst r24
 1128 0088 01F0      		breq .L67
 1129               	.LVL67:
 1130               	.L60:
 1131               	.LBE84:
 117:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	for (uint8_t EndpointNum = 1; EndpointNum < ENDPOINT_TOTAL_ENDPOINTS; EndpointNum++)
 1132               		.loc 1 117 0
 1133 008a 1F5F      		subi r17,lo8(-(1))
 1134               	.LVL68:
 1135 008c 1730      		cpi r17,lo8(7)
 1136 008e 01F4      		brne .L65
 157:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	return true;
 1137               		.loc 1 157 0
 1138 0090 81E0      		ldi r24,lo8(1)
 1139 0092 00C0      		rjmp .L64
 1140               	.LVL69:
 1141               	.L67:
 1142               	.LBB91:
 153:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			return false;
 1143               		.loc 1 153 0
 1144 0094 80E0      		ldi r24,lo8(0)
 1145               	.LVL70:
 1146               	.L64:
 1147               	/* epilogue start */
 1148               	.LBE91:
 1149               	.LBE83:
 158:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** }
 1150               		.loc 1 158 0
 1151 0096 DF91      		pop r29
 1152 0098 CF91      		pop r28
 1153               	.LVL71:
 1154 009a 1F91      		pop r17
 1155 009c 0895      		ret
 1156               		.cfi_endproc
 1157               	.LFE72:
 1159               		.data
 1160               	.LC0:
 1161 0000 A1        		.byte	-95
 1162 0001 01        		.byte	1
 1163 0002 0000      		.word	0
 1164 0004 0000      		.word	0
 1165 0006 0000      		.word	0
 1166               		.section	.text.RNDIS_Device_USBTask,"ax",@progbits
 1167               	.global	RNDIS_Device_USBTask
 1169               	RNDIS_Device_USBTask:
 1170               	.LFB73:
 161:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** {
 1171               		.loc 1 161 0
 1172               		.cfi_startproc
 1173               	.LVL72:
 1174 0000 EF92      		push r14
 1175               	.LCFI7:
 1176               		.cfi_def_cfa_offset 3
 1177               		.cfi_offset 14, -2
 1178 0002 FF92      		push r15
 1179               	.LCFI8:
 1180               		.cfi_def_cfa_offset 4
 1181               		.cfi_offset 15, -3
 1182 0004 0F93      		push r16
 1183               	.LCFI9:
 1184               		.cfi_def_cfa_offset 5
 1185               		.cfi_offset 16, -4
 1186 0006 1F93      		push r17
 1187               	.LCFI10:
 1188               		.cfi_def_cfa_offset 6
 1189               		.cfi_offset 17, -5
 1190 0008 CF93      		push r28
 1191               	.LCFI11:
 1192               		.cfi_def_cfa_offset 7
 1193               		.cfi_offset 28, -6
 1194 000a DF93      		push r29
 1195               	.LCFI12:
 1196               		.cfi_def_cfa_offset 8
 1197               		.cfi_offset 29, -7
 1198 000c CDB7      		in r28,__SP_L__
 1199 000e DEB7      		in r29,__SP_H__
 1200 0010 AC97      		sbiw r28,44
 1201               	.LCFI13:
 1202               		.cfi_def_cfa 28, 52
 1203 0012 0FB6      		in __tmp_reg__,__SREG__
 1204 0014 F894      		cli
 1205 0016 DEBF      		out __SP_H__,r29
 1206 0018 0FBE      		out __SREG__,__tmp_reg__
 1207 001a CDBF      		out __SP_L__,r28
 1208               	/* prologue: function */
 1209               	/* frame size = 44 */
 1210               	/* stack size = 50 */
 1211               	.L__stack_usage = 50
 1212 001c 8C01      		movw r16,r24
 162:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if (USB_DeviceState != DEVICE_STATE_Configured)
 1213               		.loc 1 162 0
 1214 001e 8091 0000 		lds r24,USB_DeviceState
 1215               	.LVL73:
 1216 0022 8430      		cpi r24,lo8(4)
 1217 0024 01F0      		breq .+2
 1218 0026 00C0      		rjmp .L70
 1219               	.LVL74:
 167:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	Endpoint_SelectEndpoint(RNDISInterfaceInfo->Config.NotificationEndpointNumber);
 1220               		.loc 1 167 0
 1221 0028 F801      		movw r30,r16
 1222 002a 8185      		ldd r24,Z+9
 1223               	.LVL75:
 1224               	.LBB92:
 1225               	.LBB93:
 351:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UENUM = EndpointNumber;
 1226               		.loc 2 351 0
 1227 002c 8093 E900 		sts 233,r24
 1228               	.LBE93:
 1229               	.LBE92:
 1230               	.LBB94:
 1231               	.LBB95:
 457:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 1232               		.loc 2 457 0
 1233 0030 8091 E800 		lds r24,232
 1234               	.LBE95:
 1235               	.LBE94:
 169:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if (Endpoint_IsINReady() && RNDISInterfaceInfo->State.ResponseReady)
 1236               		.loc 1 169 0
 1237 0034 80FF      		sbrs r24,0
 1238 0036 00C0      		rjmp .L72
 169:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if (Endpoint_IsINReady() && RNDISInterfaceInfo->State.ResponseReady)
 1239               		.loc 1 169 0 is_stmt 0 discriminator 1
 1240 0038 EB56      		subi r30,lo8(-(149))
 1241 003a FF4F      		sbci r31,hi8(-(149))
 1242 003c 8081      		ld r24,Z
 1243 003e 8823      		tst r24
 1244 0040 01F0      		breq .L72
 1245               	.LBB96:
 171:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		USB_Request_Header_t Notification = (USB_Request_Header_t)
 1246               		.loc 1 171 0 is_stmt 1
 1247 0042 DE01      		movw r26,r28
 1248 0044 1196      		adiw r26,1
 1249 0046 E0E0      		ldi r30,lo8(.LC0)
 1250 0048 F0E0      		ldi r31,hi8(.LC0)
 1251 004a 88E0      		ldi r24,lo8(8)
 1252               	.L73:
 1253 004c 0190      		ld r0,Z+
 1254 004e 0D92      		st X+,r0
 1255 0050 8150      		subi r24,lo8(-(-1))
 1256 0052 01F4      		brne .L73
 180:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		Endpoint_Write_Stream_LE(&Notification, sizeof(USB_Request_Header_t), NO_STREAM_CALLBACK);
 1257               		.loc 1 180 0
 1258 0054 CE01      		movw r24,r28
 1259 0056 0196      		adiw r24,1
 1260 0058 68E0      		ldi r22,lo8(8)
 1261 005a 70E0      		ldi r23,hi8(8)
 1262 005c 40E0      		ldi r20,lo8(0)
 1263 005e 50E0      		ldi r21,hi8(0)
 1264 0060 0E94 0000 		call Endpoint_Write_Stream_LE
 1265               	.LVL76:
 1266               	.LBB97:
 1267               	.LBB98:
 506:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 1268               		.loc 2 506 0
 1269 0064 8091 E800 		lds r24,232
 1270 0068 8E77      		andi r24,lo8(126)
 1271 006a 8093 E800 		sts 232,r24
 1272               	.LBE98:
 1273               	.LBE97:
 184:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		RNDISInterfaceInfo->State.ResponseReady = false;
 1274               		.loc 1 184 0
 1275 006e F801      		movw r30,r16
 1276 0070 EB56      		subi r30,lo8(-(149))
 1277 0072 FF4F      		sbci r31,hi8(-(149))
 1278 0074 1082      		st Z,__zero_reg__
 1279               	.L72:
 1280               	.LBE96:
 187:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if ((RNDISInterfaceInfo->State.CurrRNDISState == RNDIS_Data_Initialized) && !(MessageHeader->Messa
 1281               		.loc 1 187 0
 1282 0076 F801      		movw r30,r16
 1283 0078 EA56      		subi r30,lo8(-(150))
 1284 007a FF4F      		sbci r31,hi8(-(150))
 1285 007c 8081      		ld r24,Z
 1286 007e 8230      		cpi r24,lo8(2)
 1287 0080 01F0      		breq .+2
 1288 0082 00C0      		rjmp .L70
 187:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 	if ((RNDISInterfaceInfo->State.CurrRNDISState == RNDIS_Data_Initialized) && !(MessageHeader->Messa
 1289               		.loc 1 187 0 is_stmt 0 discriminator 1
 1290 0084 F801      		movw r30,r16
 1291 0086 818D      		ldd r24,Z+25
 1292 0088 928D      		ldd r25,Z+26
 1293 008a A38D      		ldd r26,Z+27
 1294 008c B48D      		ldd r27,Z+28
 1295 008e 0097      		sbiw r24,0
 1296 0090 A105      		cpc r26,__zero_reg__
 1297 0092 B105      		cpc r27,__zero_reg__
 1298 0094 01F0      		breq .+2
 1299 0096 00C0      		rjmp .L70
 1300               	.LBB99:
 191:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		Endpoint_SelectEndpoint(RNDISInterfaceInfo->Config.DataOUTEndpointNumber);
 1301               		.loc 1 191 0 is_stmt 1
 1302 0098 8581      		ldd r24,Z+5
 1303               	.LVL77:
 1304               	.LBB100:
 1305               	.LBB101:
 351:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UENUM = EndpointNumber;
 1306               		.loc 2 351 0
 1307 009a 8093 E900 		sts 233,r24
 1308               	.LBE101:
 1309               	.LBE100:
 1310               	.LBB102:
 1311               	.LBB103:
 469:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 1312               		.loc 2 469 0
 1313 009e 8091 E800 		lds r24,232
 1314               	.LBE103:
 1315               	.LBE102:
 193:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		if (Endpoint_IsOUTReceived() && !(RNDISInterfaceInfo->State.FrameIN.FrameInBuffer))
 1316               		.loc 1 193 0
 1317 00a2 82FF      		sbrs r24,2
 1318 00a4 00C0      		rjmp .L74
 193:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		if (Endpoint_IsOUTReceived() && !(RNDISInterfaceInfo->State.FrameIN.FrameInBuffer))
 1319               		.loc 1 193 0 is_stmt 0 discriminator 1
 1320 00a6 39E7      		ldi r19,lo8(1657)
 1321 00a8 E32E      		mov r14,r19
 1322 00aa 36E0      		ldi r19,hi8(1657)
 1323 00ac F32E      		mov r15,r19
 1324 00ae E00E      		add r14,r16
 1325 00b0 F11E      		adc r15,r17
 1326 00b2 F701      		movw r30,r14
 1327 00b4 8081      		ld r24,Z
 1328 00b6 8823      		tst r24
 1329 00b8 01F4      		brne .L74
 195:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Endpoint_Read_Stream_LE(&RNDISPacketHeader, sizeof(RNDIS_Packet_Message_t), NO_STREAM_CALLBACK);
 1330               		.loc 1 195 0 is_stmt 1
 1331 00ba CE01      		movw r24,r28
 1332 00bc 0196      		adiw r24,1
 1333 00be 6CE2      		ldi r22,lo8(44)
 1334 00c0 70E0      		ldi r23,hi8(44)
 1335 00c2 40E0      		ldi r20,lo8(0)
 1336 00c4 50E0      		ldi r21,hi8(0)
 1337 00c6 0E94 0000 		call Endpoint_Read_Stream_LE
 1338               	.LVL78:
 197:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			if (RNDISPacketHeader.DataLength > ETHERNET_FRAME_SIZE_MAX)
 1339               		.loc 1 197 0
 1340 00ca 4D85      		ldd r20,Y+13
 1341 00cc 5E85      		ldd r21,Y+14
 1342 00ce 6F85      		ldd r22,Y+15
 1343 00d0 7889      		ldd r23,Y+16
 1344 00d2 4D3D      		cpi r20,lo8(1501)
 1345 00d4 F5E0      		ldi r31,hi8(1501)
 1346 00d6 5F07      		cpc r21,r31
 1347 00d8 F0E0      		ldi r31,hlo8(1501)
 1348 00da 6F07      		cpc r22,r31
 1349 00dc F0E0      		ldi r31,hhi8(1501)
 1350 00de 7F07      		cpc r23,r31
 1351 00e0 00F0      		brlo .L75
 1352               	.LBB104:
 1353               	.LBB105:
 522:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#else
 523:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~(1 << RXOUTI);
 524:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#endif
 525:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 526:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 527:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Stalls the current endpoint, indicating to the host that a logical problem occurred with the
 528:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  indicated endpoint and that the current transfer sequence should be aborted. This provides a
 529:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  way for devices to indicate invalid commands to the host so that the current transfer can be
 530:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  aborted and the host can begin its own recovery sequence.
 531:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 532:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  The currently selected endpoint remains stalled until either the \ref Endpoint_ClearStall() 
 533:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  is called, or the host issues a CLEAR FEATURE request to the device for the currently select
 534:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  endpoint.
 535:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 536:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 537:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 538:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_StallTransaction(void) ATTR_ALWAYS_INLINE;
 539:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_StallTransaction(void)
 540:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 541:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UECONX |= (1 << STALLRQ);
 1354               		.loc 2 541 0
 1355 00e2 8091 EB00 		lds r24,235
 1356 00e6 8062      		ori r24,lo8(32)
 1357 00e8 8093 EB00 		sts 235,r24
 1358 00ec 00C0      		rjmp .L70
 1359               	.L75:
 1360               	.LBE105:
 1361               	.LBE104:
 203:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Endpoint_Read_Stream_LE(RNDISInterfaceInfo->State.FrameIN.FrameData, RNDISPacketHeader.DataLengt
 1362               		.loc 1 203 0
 1363 00ee C801      		movw r24,r16
 1364 00f0 8556      		subi r24,lo8(-(155))
 1365 00f2 9F4F      		sbci r25,hi8(-(155))
 1366 00f4 BA01      		movw r22,r20
 1367 00f6 40E0      		ldi r20,lo8(0)
 1368 00f8 50E0      		ldi r21,hi8(0)
 1369 00fa 0E94 0000 		call Endpoint_Read_Stream_LE
 1370               	.LBB106:
 1371               	.LBB107:
 521:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 1372               		.loc 2 521 0
 1373 00fe 8091 E800 		lds r24,232
 1374 0102 8B77      		andi r24,lo8(123)
 1375 0104 8093 E800 		sts 232,r24
 1376               	.LBE107:
 1377               	.LBE106:
 207:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.FrameIN.FrameLength = RNDISPacketHeader.DataLength;
 1378               		.loc 1 207 0
 1379 0108 F801      		movw r30,r16
 1380 010a E958      		subi r30,lo8(-(1655))
 1381 010c F94F      		sbci r31,hi8(-(1655))
 1382 010e 8D85      		ldd r24,Y+13
 1383 0110 9E85      		ldd r25,Y+14
 1384 0112 9183      		std Z+1,r25
 1385 0114 8083      		st Z,r24
 209:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.FrameIN.FrameInBuffer = true;
 1386               		.loc 1 209 0
 1387 0116 81E0      		ldi r24,lo8(1)
 1388 0118 F701      		movw r30,r14
 1389 011a 8083      		st Z,r24
 1390               	.L74:
 212:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		Endpoint_SelectEndpoint(RNDISInterfaceInfo->Config.DataINEndpointNumber);
 1391               		.loc 1 212 0
 1392 011c F801      		movw r30,r16
 1393 011e 8181      		ldd r24,Z+1
 1394               	.LVL79:
 1395               	.LBB108:
 1396               	.LBB109:
 351:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UENUM = EndpointNumber;
 1397               		.loc 2 351 0
 1398 0120 8093 E900 		sts 233,r24
 1399               	.LBE109:
 1400               	.LBE108:
 1401               	.LBB110:
 1402               	.LBB111:
 457:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 1403               		.loc 2 457 0
 1404 0124 8091 E800 		lds r24,232
 1405               	.LBE111:
 1406               	.LBE110:
 214:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		if (Endpoint_IsINReady() && RNDISInterfaceInfo->State.FrameOUT.FrameInBuffer)
 1407               		.loc 1 214 0
 1408 0128 80FF      		sbrs r24,0
 1409 012a 00C0      		rjmp .L70
 214:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 		if (Endpoint_IsINReady() && RNDISInterfaceInfo->State.FrameOUT.FrameInBuffer)
 1410               		.loc 1 214 0 is_stmt 0 discriminator 1
 1411 012c 28E5      		ldi r18,lo8(3160)
 1412 012e E22E      		mov r14,r18
 1413 0130 2CE0      		ldi r18,hi8(3160)
 1414 0132 F22E      		mov r15,r18
 1415 0134 E00E      		add r14,r16
 1416 0136 F11E      		adc r15,r17
 1417 0138 F701      		movw r30,r14
 1418 013a 8081      		ld r24,Z
 1419 013c 8823      		tst r24
 1420 013e 01F4      		brne .+2
 1421 0140 00C0      		rjmp .L70
 216:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			memset(&RNDISPacketHeader, 0, sizeof(RNDIS_Packet_Message_t));
 1422               		.loc 1 216 0 is_stmt 1
 1423 0142 AE01      		movw r20,r28
 1424 0144 4F5F      		subi r20,lo8(-(1))
 1425 0146 5F4F      		sbci r21,hi8(-(1))
 1426 0148 8CE2      		ldi r24,lo8(44)
 1427 014a FA01      		movw r30,r20
 1428 014c 1192      		st Z+,__zero_reg__
 1429 014e 8A95      	        dec r24
 1430 0150 01F4      		brne .-6
 218:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISPacketHeader.MessageType   = REMOTE_NDIS_PACKET_MSG;
 1431               		.loc 1 218 0
 1432 0152 81E0      		ldi r24,lo8(1)
 1433 0154 90E0      		ldi r25,hi8(1)
 1434 0156 A0E0      		ldi r26,hlo8(1)
 1435 0158 B0E0      		ldi r27,hhi8(1)
 1436 015a 8983      		std Y+1,r24
 1437 015c 9A83      		std Y+2,r25
 1438 015e AB83      		std Y+3,r26
 1439 0160 BC83      		std Y+4,r27
 219:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISPacketHeader.MessageLength = (sizeof(RNDIS_Packet_Message_t) + RNDISInterfaceInfo->State.Fr
 1440               		.loc 1 219 0
 1441 0162 F801      		movw r30,r16
 1442 0164 EA5A      		subi r30,lo8(-(3158))
 1443 0166 F34F      		sbci r31,hi8(-(3158))
 1444 0168 2081      		ld r18,Z
 1445 016a 3181      		ldd r19,Z+1
 1446 016c C901      		movw r24,r18
 1447 016e 8C96      		adiw r24,44
 1448 0170 A0E0      		ldi r26,lo8(0)
 1449 0172 B0E0      		ldi r27,hi8(0)
 1450 0174 8D83      		std Y+5,r24
 1451 0176 9E83      		std Y+6,r25
 1452 0178 AF83      		std Y+7,r26
 1453 017a B887      		std Y+8,r27
 220:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISPacketHeader.DataOffset    = (sizeof(RNDIS_Packet_Message_t) - sizeof(RNDIS_Message_Header_
 1454               		.loc 1 220 0
 1455 017c 84E2      		ldi r24,lo8(36)
 1456 017e 90E0      		ldi r25,hi8(36)
 1457 0180 A0E0      		ldi r26,hlo8(36)
 1458 0182 B0E0      		ldi r27,hhi8(36)
 1459 0184 8987      		std Y+9,r24
 1460 0186 9A87      		std Y+10,r25
 1461 0188 AB87      		std Y+11,r26
 1462 018a BC87      		std Y+12,r27
 221:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISPacketHeader.DataLength    = RNDISInterfaceInfo->State.FrameOUT.FrameLength;
 1463               		.loc 1 221 0
 1464 018c C901      		movw r24,r18
 1465 018e A0E0      		ldi r26,lo8(0)
 1466 0190 B0E0      		ldi r27,hi8(0)
 1467 0192 8D87      		std Y+13,r24
 1468 0194 9E87      		std Y+14,r25
 1469 0196 AF87      		std Y+15,r26
 1470 0198 B88B      		std Y+16,r27
 223:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Endpoint_Write_Stream_LE(&RNDISPacketHeader, sizeof(RNDIS_Packet_Message_t), NO_STREAM_CALLBACK)
 1471               		.loc 1 223 0
 1472 019a CA01      		movw r24,r20
 1473 019c 6CE2      		ldi r22,lo8(44)
 1474 019e 70E0      		ldi r23,hi8(44)
 1475 01a0 40E0      		ldi r20,lo8(0)
 1476 01a2 50E0      		ldi r21,hi8(0)
 1477 01a4 0E94 0000 		call Endpoint_Write_Stream_LE
 1478               	.LVL80:
 224:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			Endpoint_Write_Stream_LE(RNDISInterfaceInfo->State.FrameOUT.FrameData, RNDISPacketHeader.DataLen
 1479               		.loc 1 224 0
 1480 01a8 6D85      		ldd r22,Y+13
 1481 01aa 7E85      		ldd r23,Y+14
 1482 01ac C801      		movw r24,r16
 1483 01ae 8658      		subi r24,lo8(-(1658))
 1484 01b0 994F      		sbci r25,hi8(-(1658))
 1485 01b2 40E0      		ldi r20,lo8(0)
 1486 01b4 50E0      		ldi r21,hi8(0)
 1487 01b6 0E94 0000 		call Endpoint_Write_Stream_LE
 1488               	.LBB112:
 1489               	.LBB113:
 506:../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 1490               		.loc 2 506 0
 1491 01ba 8091 E800 		lds r24,232
 1492 01be 8E77      		andi r24,lo8(126)
 1493 01c0 8093 E800 		sts 232,r24
 1494               	.LBE113:
 1495               	.LBE112:
 227:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** 			RNDISInterfaceInfo->State.FrameOUT.FrameInBuffer = false;
 1496               		.loc 1 227 0
 1497 01c4 F701      		movw r30,r14
 1498 01c6 1082      		st Z,__zero_reg__
 1499               	.LVL81:
 1500               	.L70:
 1501               	/* epilogue start */
 1502               	.LBE99:
 230:../../../../LUFA/Drivers/USB/Class/Device/RNDIS.c **** }
 1503               		.loc 1 230 0
 1504 01c8 AC96      		adiw r28,44
 1505 01ca 0FB6      		in __tmp_reg__,__SREG__
 1506 01cc F894      		cli
 1507 01ce DEBF      		out __SP_H__,r29
 1508 01d0 0FBE      		out __SREG__,__tmp_reg__
 1509 01d2 CDBF      		out __SP_L__,r28
 1510 01d4 DF91      		pop r29
 1511 01d6 CF91      		pop r28
 1512 01d8 1F91      		pop r17
 1513 01da 0F91      		pop r16
 1514               	.LVL82:
 1515 01dc FF90      		pop r15
 1516 01de EF90      		pop r14
 1517 01e0 0895      		ret
 1518               		.cfi_endproc
 1519               	.LFE73:
 1521               		.section	.progmem.data,"a",@progbits
 1524               	AdapterSupportedOIDList:
 1525 0000 01        		.byte	1
 1526 0001 01        		.byte	1
 1527 0002 01        		.byte	1
 1528 0003 00        		.byte	0
 1529 0004 02        		.byte	2
 1530 0005 02        		.byte	2
 1531 0006 01        		.byte	1
 1532 0007 00        		.byte	0
 1533 0008 02        		.byte	2
 1534 0009 01        		.byte	1
 1535 000a 01        		.byte	1
 1536 000b 00        		.byte	0
 1537 000c 03        		.byte	3
 1538 000d 01        		.byte	1
 1539 000e 01        		.byte	1
 1540 000f 00        		.byte	0
 1541 0010 04        		.byte	4
 1542 0011 01        		.byte	1
 1543 0012 01        		.byte	1
 1544 0013 00        		.byte	0
 1545 0014 06        		.byte	6
 1546 0015 01        		.byte	1
 1547 0016 01        		.byte	1
 1548 0017 00        		.byte	0
 1549 0018 11        		.byte	17
 1550 0019 01        		.byte	1
 1551 001a 01        		.byte	1
 1552 001b 00        		.byte	0
 1553 001c 07        		.byte	7
 1554 001d 01        		.byte	1
 1555 001e 01        		.byte	1
 1556 001f 00        		.byte	0
 1557 0020 0A        		.byte	10
 1558 0021 01        		.byte	1
 1559 0022 01        		.byte	1
 1560 0023 00        		.byte	0
 1561 0024 0B        		.byte	11
 1562 0025 01        		.byte	1
 1563 0026 01        		.byte	1
 1564 0027 00        		.byte	0
 1565 0028 0C        		.byte	12
 1566 0029 01        		.byte	1
 1567 002a 01        		.byte	1
 1568 002b 00        		.byte	0
 1569 002c 0D        		.byte	13
 1570 002d 01        		.byte	1
 1571 002e 01        		.byte	1
 1572 002f 00        		.byte	0
 1573 0030 0E        		.byte	14
 1574 0031 01        		.byte	1
 1575 0032 01        		.byte	1
 1576 0033 00        		.byte	0
 1577 0034 11        		.byte	17
 1578 0035 01        		.byte	1
 1579 0036 01        		.byte	1
 1580 0037 00        		.byte	0
 1581 0038 14        		.byte	20
 1582 0039 01        		.byte	1
 1583 003a 01        		.byte	1
 1584 003b 00        		.byte	0
 1585 003c 01        		.byte	1
 1586 003d 01        		.byte	1
 1587 003e 02        		.byte	2
 1588 003f 00        		.byte	0
 1589 0040 02        		.byte	2
 1590 0041 01        		.byte	1
 1591 0042 02        		.byte	2
 1592 0043 00        		.byte	0
 1593 0044 03        		.byte	3
 1594 0045 01        		.byte	1
 1595 0046 02        		.byte	2
 1596 0047 00        		.byte	0
 1597 0048 04        		.byte	4
 1598 0049 01        		.byte	1
 1599 004a 02        		.byte	2
 1600 004b 00        		.byte	0
 1601 004c 05        		.byte	5
 1602 004d 01        		.byte	1
 1603 004e 02        		.byte	2
 1604 004f 00        		.byte	0
 1605 0050 01        		.byte	1
 1606 0051 01        		.byte	1
 1607 0052 01        		.byte	1
 1608 0053 01        		.byte	1
 1609 0054 02        		.byte	2
 1610 0055 01        		.byte	1
 1611 0056 01        		.byte	1
 1612 0057 01        		.byte	1
 1613 0058 03        		.byte	3
 1614 0059 01        		.byte	1
 1615 005a 01        		.byte	1
 1616 005b 01        		.byte	1
 1617 005c 04        		.byte	4
 1618 005d 01        		.byte	1
 1619 005e 01        		.byte	1
 1620 005f 01        		.byte	1
 1621 0060 01        		.byte	1
 1622 0061 01        		.byte	1
 1623 0062 02        		.byte	2
 1624 0063 01        		.byte	1
 1625 0064 02        		.byte	2
 1626 0065 01        		.byte	1
 1627 0066 02        		.byte	2
 1628 0067 01        		.byte	1
 1629 0068 03        		.byte	3
 1630 0069 01        		.byte	1
 1631 006a 02        		.byte	2
 1632 006b 01        		.byte	1
 1633               		.text
 1634               	.Letext0:
 1635               		.file 3 "c:\\program files (x86)\\atmel\\avr tools\\avr toolchain\\bin\\../lib/gcc/avr/4.6.2/../..
 1636               		.file 4 "../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/../HighLevel/StdReq
 1637               		.file 5 "../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Device.h"
 1638               		.file 6 "../../../../LUFA/Drivers/USB/Class/Device/../Common/RNDIS.h"
 1639               		.file 7 "../../../../LUFA/Drivers/USB/Class/Device/RNDIS.h"
 1640               		.file 8 "../../../../LUFA/Drivers/USB/Class/Device/../../HighLevel/USBTask.h"
DEFINED SYMBOLS
                            *ABS*:00000000 RNDIS.c
C:\Users\Brian\AppData\Local\Temp\cc8wiLai.s:2      *ABS*:0000003f __SREG__
C:\Users\Brian\AppData\Local\Temp\cc8wiLai.s:3      *ABS*:0000003e __SP_H__
C:\Users\Brian\AppData\Local\Temp\cc8wiLai.s:4      *ABS*:0000003d __SP_L__
C:\Users\Brian\AppData\Local\Temp\cc8wiLai.s:5      *ABS*:00000034 __CCP__
C:\Users\Brian\AppData\Local\Temp\cc8wiLai.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\Brian\AppData\Local\Temp\cc8wiLai.s:7      *ABS*:00000001 __zero_reg__
C:\Users\Brian\AppData\Local\Temp\cc8wiLai.s:16     .text.RNDIS_Device_ProcessControlRequest:00000000 RNDIS_Device_ProcessControlRequest
C:\Users\Brian\AppData\Local\Temp\cc8wiLai.s:1524   .progmem.data:00000000 AdapterSupportedOIDList
C:\Users\Brian\AppData\Local\Temp\cc8wiLai.s:970    .text.RNDIS_Device_ConfigureEndpoints:00000000 RNDIS_Device_ConfigureEndpoints
C:\Users\Brian\AppData\Local\Temp\cc8wiLai.s:1169   .text.RNDIS_Device_USBTask:00000000 RNDIS_Device_USBTask

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
USB_ControlRequest
Endpoint_Read_Control_Stream_LE
memcpy_P
memcpy
Endpoint_Write_Control_Stream_LE
Endpoint_ConfigureEndpoint_Prv
USB_DeviceState
Endpoint_Write_Stream_LE
Endpoint_Read_Stream_LE
